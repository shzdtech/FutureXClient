<UserControl x:Class="Micro.Future.UI.OptionMatrixCtrl"
             xmlns:local="clr-namespace:Micro.Future.UI"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:avalonDock="http://schemas.xceed.com/wpf/xaml/avalondock"
             xmlns:c="clr-namespace:Micro.Future.UI"
             xmlns:lex="http://wpflocalizeextension.codeplex.com" 
             xmlns:oxy="http://oxyplot.org/wpf"
             xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
             lex:LocalizeDictionary.DesignCulture="zh_CN"
             lex:LocalizeDictionary.OutputMissingKeys="True"
             lex:ResxLocalizationProvider.DefaultAssembly="Micro.Future.Resources.Localization"
             lex:ResxLocalizationProvider.DefaultDictionary="Resources"
             mc:Ignorable="d" d:DesignWidth="800">

    <Grid ScrollViewer.VerticalScrollBarVisibility="Visible" ScrollViewer.CanContentScroll="True" >
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="0.3*" AllowDrop="True" ScrollViewer.VerticalScrollBarVisibility="Visible"  ScrollViewer.CanContentScroll="True"/>
            <ColumnDefinition Width="3"/>
            <ColumnDefinition Width="*" AllowDrop="True" ScrollViewer.VerticalScrollBarVisibility="Visible"  ScrollViewer.CanContentScroll="True"/>
        </Grid.ColumnDefinitions>
        <StackPanel Grid.Column="0" Width="Auto" ScrollViewer.VerticalScrollBarVisibility="Visible" ScrollViewer.CanContentScroll="True">
            <GroupBox x:Name="portfolioGB" Header="{lex:Loc Key=Portfolio}">
                <ComboBox x:Name="portfolioCB"  VerticalAlignment="Center" SelectionChanged="portfolioCB_SelectionChanged" HorizontalAlignment="Left"/>
            </GroupBox>
            <WrapPanel>
                <GroupBox x:Name="priceGB" Header="{lex:Loc Key=ContractPrice}">
                    <StackPanel>
                        <RadioButton x:Name="marketRadioButton" Content="{lex:Loc Key=Market}" VerticalAlignment="Top" Checked="marketRadioButton_Checked"/>
                        <RadioButton x:Name="settlementRadioButton" Content="{lex:Loc Key=Settlement}" VerticalAlignment="Top" Checked="settlementRadioButton_Checked"/>
                        <RadioButton x:Name="valuationRadioButton" Content="{lex:Loc Key=Valuation}" VerticalAlignment="Top" Checked="valuationRadioButton_Checked"/>
                    </StackPanel>
                </GroupBox>
                <GroupBox x:Name="pricedisplayGB" Header="{lex:Loc Key=SelectedPrice}">
                    <WrapPanel Name="selectedWrapPanel">
                    </WrapPanel>
                </GroupBox>
            </WrapPanel>
            <GroupBox x:Name="riskGB" Header="{lex:Loc Key=Risk}">
                <WrapPanel>
                    <StackPanel>
                        <CheckBox Name="deltaCheckBox" Content="Delta" HorizontalAlignment="Left" Checked="deltaCheckBox_Checked" Unchecked="deltaCheckBox_Unchecked"/>
                        <CheckBox Name="gammaCheckBox" Content="Gamma" HorizontalAlignment="Left" Checked="gammaCheckBox_Checked" Unchecked="gammaCheckBox_Unchecked"/>
                        <CheckBox Name="vegaCheckBox" Content="Vega" HorizontalAlignment="Left" Checked="vegaCheckBox_Checked" Unchecked="vegaCheckBox_Unchecked"/>
                    </StackPanel>
                    <StackPanel>
                        <CheckBox Name="thetaCheckBox" Content="Theta" HorizontalAlignment="Left" Checked="thetaCheckBox_Checked" Unchecked="thetaCheckBox_Unchecked"/>
                        <CheckBox Name="rhoCheckBox" Content="Rho" HorizontalAlignment="Left" Checked="rhoCheckBox_Checked" Unchecked="rhoCheckBox_Unchecked"/>
                        <CheckBox Name="pnlCheckBox" Content="Pnl" HorizontalAlignment="Left" Checked="pnlCheckBox_Checked" Unchecked="pnlCheckBox_Unchecked"/>
                    </StackPanel>
                </WrapPanel>
            </GroupBox>
            <GroupBox x:Name="expirationGB" Header="{lex:Loc Key=Expiration}" Width="Auto">
                <ListView x:Name="expirationLV" ScrollViewer.VerticalScrollBarVisibility="Auto" ScrollViewer.HorizontalScrollBarVisibility="Visible" Width="Auto">
                    <ListView.View>
                        <GridView x:Name="expirationGV">
                            <!--<GridViewColumn x:Name="contract" Header="{lex:Loc Key=Contract}" DisplayMemberBinding="{Binding PutOptionVM.ImpliedVolVM.BidVol,StringFormat=P2}" />-->
                            <GridViewColumn>
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <CheckBox Name="expCheckBox" HorizontalAlignment="Center" Checked="exCheckBox_Checked" Unchecked="exCheckBox_UnChecked" IsChecked="{Binding Selected}" ></CheckBox>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                            <GridViewColumn x:Name="contractHeader" DisplayMemberBinding="{Binding Contract}" Header="{lex:Loc Key=Contract}" />
                            <GridViewColumn x:Name="expirationHeader" DisplayMemberBinding="{Binding Expiration}" Header="{lex:Loc Key=Expiration}" />
                            <GridViewColumn Header="{lex:Loc Key=Valuation}">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <xctk:DoubleUpDown x:Name="valuationUpDown" HorizontalAlignment="Stretch" Value="{Binding Valuation}" KeyUp="OnKeyDown" Tag="{Binding Valuation}" ShowButtonSpinner="False" Width="70"></xctk:DoubleUpDown>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                            <!--<GridViewColumn x:Name="lastpriceHeader" DisplayMemberBinding="{Binding MktVM.LastPrice}" Header="{lex:Loc Key=LastPrice}"/>-->
                            <GridViewColumn x:Name="lastpriceHeader" Header="{lex:Loc Key=LastPrice}" Width="auto">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Value}" DataContext="{Binding MktVM.LastPrice}" Style="{DynamicResource DoubleChangeStyle}" Width="auto"/>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                            <GridViewColumn x:Name="settlepriceHeader" DisplayMemberBinding="{Binding MktVM.PreSettlePrice}" Header="{lex:Loc Key=PreSettlePrice}" />
                        </GridView>
                    </ListView.View>
                </ListView>
            </GroupBox>
            <WrapPanel>
                <GroupBox x:Name="typeGB" Header="{lex:Loc Key=Type}">
                    <StackPanel>
                        <CheckBox x:Name="callCheckBox" Content="Call" Checked="callCheckBox_Checked" Unchecked="callCheckBox_Unchecked"/>
                        <CheckBox x:Name="putCheckBox" Content="Put" Checked="putCheckBox_Checked" Unchecked="putCheckBox_Unchecked"/>
                        <CheckBox x:Name="futureCheckBox" Content="Future" Checked="futureCheckBox_Checked" Unchecked="futureCheckBox_Unchecked"/>
                    </StackPanel>
                </GroupBox>
                <GroupBox x:Name="displayGB" Header="{lex:Loc Key=DisplaySet}">
                    <StackPanel>
                        <RadioButton x:Name="absoluteRadioButton" Content="{lex:Loc Key=Absolute}" VerticalAlignment="Top" Click="absoluteRadioButton_Click"/>
                        <RadioButton x:Name="variateRadioButton" Content="{lex:Loc Key=Variate}" VerticalAlignment="Top" Click="variateRadioButton_Click"/>
                    </StackPanel>
                </GroupBox>
            </WrapPanel>
            <GroupBox x:Name="riskMatrixGB" Header="{lex:Loc Key=MatrixSet}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Label Grid.Row="1" Grid.Column="0" Content="{lex:Loc Key=StrikePrice}" Width="60"/>
                    <Label Grid.Row="0" Grid.Column="1" Content="{lex:Loc Key=Tick_Count}" Width="60" HorizontalAlignment="Left"/>
                    <Label Grid.Row="0" Grid.Column="2" Content="{lex:Loc Key=Tick_Size}" Width="60" HorizontalAlignment="Left"/>
                    <xctk:IntegerUpDown x:Name="priceCntIUP" UpdateValueOnEnterKey="True"  Grid.Row="1" Grid.Column="1" HorizontalAlignment="Left" Spinned="IntSpinned" ValueChanged="priceCntValueChanged" Minimum="1" Maximum="10" Value="1"></xctk:IntegerUpDown>
                    <xctk:DoubleUpDown x:Name="priceSizeIUP" UpdateValueOnEnterKey="True" Grid.Row="1" Grid.Column="2" HorizontalAlignment="Left" Spinned="Spinned" ValueChanged="priceSizeValueChanged"  ShowButtonSpinner="True" Width="40" Minimum="0" Value="1"></xctk:DoubleUpDown>
                    <Label Grid.Row="2" Grid.Column="0" Content="{lex:Loc Key=Volatility}" Width="60"/>
                    <xctk:IntegerUpDown x:Name="volCntIUP" UpdateValueOnEnterKey="True"  Grid.Row="2" Grid.Column="1" HorizontalAlignment="Left" Spinned="IntSpinned" ValueChanged="volCntValueChanged" Minimum="1" Maximum="10" Value="1"></xctk:IntegerUpDown>
                    <xctk:DoubleUpDown x:Name="volSizeIUP" UpdateValueOnEnterKey="True" Grid.Row="2" Grid.Column="2" HorizontalAlignment="Left" Spinned="Spinned" ValueChanged="volSizeValueChanged" ShowButtonSpinner="True" Width="40" Minimum="0" Value="1"></xctk:DoubleUpDown>
                    <Label Grid.Row="3" Grid.Column="0" Content="{lex:Loc Key=Expiration}" Width="60"/>
                    <xctk:IntegerUpDown x:Name="expIUP" UpdateValueOnEnterKey="True"  Grid.Row="3" Grid.Column="1" HorizontalAlignment="Left" Minimum="0" Spinned="IntSpinned" ValueChanged="expirationValueChanged"></xctk:IntegerUpDown>
                    <Label Grid.Row="4" Grid.Column="0" Content="{lex:Loc Key=InterestVariation}" Width="60"/>
                    <xctk:DoubleUpDown x:Name="interestUP" UpdateValueOnEnterKey="True" Grid.Row="4" Grid.Column="1" HorizontalAlignment="Left" MinWidth="41" Width="auto" Minimum="0" Spinned="Spinned" ValueChanged="interestValueChanged" ShowButtonSpinner="True"></xctk:DoubleUpDown>
                </Grid>
            </GroupBox>
            <WrapPanel>
                <GroupBox x:Name="resetGB" Header="{lex:Loc Key=RefreshButton}">
                    <Button x:Name="resetButton" Content="{lex:Loc Key=Refresh}" Width="75" Click="resetButton_Click" HorizontalAlignment="Left"/>
                </GroupBox>
                <!--<GroupBox x:Name="refreshSizeGB" Header="{lex:Loc Key=RefreshFrequency}" Visibility="Collapsed">
                    <xctk:IntegerUpDown x:Name="refreshsSizeIUP" UpdateValueOnEnterKey="True" Minimum="0" Spinned="IntSpinned" ValueChanged="refreshsSizeIUP_ValueChanged" Height="22"/>
                </GroupBox>-->
            </WrapPanel>
        </StackPanel>
        <GridSplitter Grid.Column="1" HorizontalAlignment="Stretch" />
        <FlowDocumentReader Grid.Column="2" >
            <FlowDocument>
                <Table Name="riskMatrixTable" BorderThickness="1" BorderBrush="Gray" >
                </Table>
            </FlowDocument>
        </FlowDocumentReader>
    </Grid>
</UserControl>
