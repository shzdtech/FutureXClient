<Window   x:Class="Micro.Future.UI.MainOTCWindow"
                xmlns:Controls="clr-namespace:Micro.Future.Controls;assembly=Micro.Future.CustomizedControls"
                xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                xmlns:avalonDock="http://schemas.xceed.com/wpf/xaml/avalondock"
                xmlns:ribbon="http://schemas.microsoft.com/winfx/2006/xaml/presentation/ribbon"
                xmlns:c="clr-namespace:Micro.Future.UI"
                xmlns:data="clr-namespace:Micro.Future.ViewModel"  
                xmlns:lex="http://wpflocalizeextension.codeplex.com"    
                lex:LocalizeDictionary.DesignCulture="zh_CN"
                lex:LocalizeDictionary.OutputMissingKeys="True"
                lex:ResxLocalizationProvider.DefaultAssembly="Micro.Future.Resources.Localization"
                lex:ResxLocalizationProvider.DefaultDictionary="Resources"
                WindowStartupLocation="CenterScreen" WindowState="Maximized"
                Icon="/Micro.Future.ClientUI;component/Images/Logo.png"
                Name="clientMainWindow"
                Title="U.F.O."
          >
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="25"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="30"/>
        </Grid.RowDefinitions>
        <Menu Grid.Row="0">
            <MenuItem Header="{lex:Loc Key=TradingMarket}" Click="MenuItem_Click_Trade">
                <MenuItem Header="{lex:Loc Key=TradingMarket}" />
                <MenuItem Header="内盘登录" Click="RibbonLogin_Click"/>
                <MenuItem Header="外盘登陆" Click="RibbonLogin_Click"/>
                <MenuItem Header="{lex:Loc Key=AddWindow}">
                    <MenuItem Header="{lex:Loc Key=QuoteWindow}">
                        <MenuItem Header="{lex:Loc Key=Optional}" Click="MenuItem_Click_Contract">
                        </MenuItem>
                    </MenuItem>
                    <MenuItem Header="{lex:Loc Key=ExecutionWindow}">
                        <MenuItem Header="{lex:Loc Key=AllExecution}" Click="MenuItem_Click_Execution">
                        </MenuItem>
                        <MenuItem Header="{lex:Loc Key=Opening}" Click="MenuItem_Click_Opening">
                        </MenuItem>
                        <MenuItem Header="{lex:Loc Key=Traded}" Click="MenuItem_Click_Traded">
                        </MenuItem>
                    </MenuItem>
                    <MenuItem Header="{lex:Loc Key=TradedWindow}">
                        <MenuItem Header="{lex:Loc Key=AllTraded}" Click="MenuItem_Click_AllTraded">
                        </MenuItem>
                        <MenuItem Header="{lex:Loc Key=Traded_Open}" Click="MenuItem_Click_Open">
                        </MenuItem>
                        <MenuItem Header="{lex:Loc Key=Traded_Close}" Click="MenuItem_Click_Close">
                        </MenuItem>
                    </MenuItem>
                    <MenuItem Header="{lex:Loc Key=PositionWindow}">
                        <MenuItem Header="{lex:Loc Key=Position}" Click="MenuItem_Click_Position">
                        </MenuItem>
                    </MenuItem>
                </MenuItem>
                <MenuItem Header="{lex:Loc Key=OrderWindow}" Click="FastOrder_Click"/>
            </MenuItem>
            <MenuItem Header="{lex:Loc Key=TradingStrategy}">
                <MenuItem Header="{lex:Loc Key=TradingStrategy}" Click="MenuItem_Click_Strategy"/>
            </MenuItem>
            <MenuItem Header="{lex:Loc Key=TradingOption}">
                <MenuItem Header="{lex:Loc Key=TradingOption}" Click="MenuItem_Click_Option"/>
            </MenuItem>
        </Menu>
 

        <StatusBar Grid.Row="2">
            <StatusBar.ItemsPanel>
                <ItemsPanelTemplate>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                    </Grid>
                </ItemsPanelTemplate>
            </StatusBar.ItemsPanel>
            <StatusBarItem Grid.Column="0">
                <Controls:LoginStatus x:Name="loginStatus" ConnectedPrompt="{lex:Loc Key=Server_OTC_Connected}" DisconnectedPrompt="{lex:Loc Key=Server_OTC_Unconnected}" Connected="False" OnConnButtonClick="loginStatus_OnConnButtonClick"/>
            </StatusBarItem>
            <StatusBarItem Grid.Column="1">
                <Controls:LoginStatus x:Name="ctpLoginStatus" ConnectedPrompt="{lex:Loc Key=Server_CTP_MD_Connected}" DisconnectedPrompt="{lex:Loc Key=Server_CTP_MD_Unconnected}" Connected="False" OnConnButtonClick="ctpLoginStatus_OnConnButtonClick"/>
            </StatusBarItem>
            <StatusBarItem Grid.Column="2">
                <Controls:LoginStatus x:Name="ctpTradeLoginStatus" ConnectedPrompt="{lex:Loc Key=Server_CTP_TD_Connected}" DisconnectedPrompt="{lex:Loc Key=Server_CTP_TD_Unconnected}" Connected="False" OnConnButtonClick="ctpTradingLoginStatus_OnConnButtonClick"/>
            </StatusBarItem>
            <StatusBarItem Grid.Column="3">
                <Label Name="SemiStatusTextBlock"></Label>
            </StatusBarItem>
            <StatusBarItem Grid.Column="4">
                <Label Name="ProcessStatus"></Label>
            </StatusBarItem>
            <StatusBarItem Grid.Column="5">
                <Label Name="DummyStatus"></Label>
            </StatusBarItem>
            <StatusBarItem Grid.Column="6" >
                <Label Name="RightDownStatus"></Label>
            </StatusBarItem>
        </StatusBar>


        <avalonDock:DockingManager x:Name="dockingManager" Grid.Row="1" Grid.ColumnSpan="4" >
            <avalonDock:DockingManager.Theme>
                <avalonDock:GenericTheme/>
            </avalonDock:DockingManager.Theme>
            <avalonDock:LayoutRoot>
                <avalonDock:LayoutPanel Orientation="Vertical" DockHeight="*" CanRepositionItems="False">
                    <avalonDock:LayoutAnchorablePane x:Name="mainPane">
                        <avalonDock:LayoutAnchorable Title="{lex:Loc Key=TradingMarket}">
                            <c:DomesticMarketFrame x:Name="tradeFrame"/>
                        </avalonDock:LayoutAnchorable>
                        <!--<avalonDock:LayoutAnchorable  Title="{lex:Loc Key=TradingStrategy}">
                            <c:StrategyFrame x:Name="strategyFrame"/>
                        </avalonDock:LayoutAnchorable>
                        <avalonDock:LayoutAnchorable  Title="{lex:Loc Key=TradingOption}">
                            <c:OptionFrame x:Name="optionFrame"/>
                        </avalonDock:LayoutAnchorable>-->
                    </avalonDock:LayoutAnchorablePane>
                </avalonDock:LayoutPanel>
            </avalonDock:LayoutRoot>
        </avalonDock:DockingManager>


    </Grid>
</Window>
