// Generated by ProtoGen, Version=2.4.1.521, Culture=neutral, PublicKeyToken=55f7125234beb589.  DO NOT EDIT!
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace PBWrapMsgMDA {
  
  namespace Generated {
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class PBMsgMDA {
    
      #region Extension registration
      public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
      }
      #endregion
      #region Static variables
      internal static pbd::MessageDescriptor internal__static_PBWrapMsgMDA_PBMsgEqtMD__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::PBWrapMsgMDA.PBMsgEqtMD, global::PBWrapMsgMDA.PBMsgEqtMD.Builder> internal__static_PBWrapMsgMDA_PBMsgEqtMD__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_PBWrapMsgMDA_PBMsgFutMD__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::PBWrapMsgMDA.PBMsgFutMD, global::PBWrapMsgMDA.PBMsgFutMD.Builder> internal__static_PBWrapMsgMDA_PBMsgFutMD__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_PBWrapMsgMDA_PBMsgMDAMD__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::PBWrapMsgMDA.PBMsgMDAMD, global::PBWrapMsgMDA.PBMsgMDAMD.Builder> internal__static_PBWrapMsgMDA_PBMsgMDAMD__FieldAccessorTable;
      #endregion
      #region Descriptor
      public static pbd::FileDescriptor Descriptor {
        get { return descriptor; }
      }
      private static pbd::FileDescriptor descriptor;
      
      static PBMsgMDA() {
        byte[] descriptorData = global::System.Convert.FromBase64String(
            "Cg5QQk1zZ01EQS5wcm90bxIMUEJXcmFwTXNnTURBIoIFCgpQQk1zZ0VxdE1E" + 
            "EgsKA0VPRhgBIAIoBRIOCgZzb3VyY2UYAyACKAkSKAoIZGF0YVR5cGUYBCAC" + 
            "KA4yFi5QQldyYXBNc2dNREEuRGF0YVR5cGUSDgoGc3ltYm9sGAUgAigJEhEK" + 
            "CXRpbWVTdGFtcBgGIAIoCRIVCg1wcmVDbG9zZVZhbHVlGAcgAigDEhEKCW9w" + 
            "ZW5WYWx1ZRgIIAIoAxIRCgloaWdoVmFsdWUYCyACKAMSEAoIbG93VmFsdWUY" + 
            "DCACKAMSEwoLbGF0ZXN0SW5kZXgYDSABKAMSEgoKbWF0Y2hQcmljZRgOIAEo" + 
            "AxIRCglhc2tQcmljZTUYDyABKAMSEQoJYXNrUHJpY2U0GBEgASgDEhEKCWFz" + 
            "a1ByaWNlMxgTIAEoAxIRCglhc2tQcmljZTIYFSABKAMSEQoJYXNrUHJpY2Ux" + 
            "GBcgASgDEhEKCWJpZFByaWNlMRgZIAEoAxIRCgliaWRQcmljZTIYGyABKAMS" + 
            "EQoJYmlkUHJpY2UzGB0gASgDEhEKCWJpZFByaWNlNBgfIAEoAxIRCgliaWRQ" + 
            "cmljZTUYISABKAMSEAoIdHVybm92ZXIYCSACKAMSDgoGdm9sdW1lGAogAigD" + 
            "EhAKCGFza1NpemU1GBAgASgDEhAKCGFza1NpemU0GBIgASgDEhAKCGFza1Np" + 
            "emUzGBQgASgDEhAKCGFza1NpemUyGBYgASgDEhAKCGFza1NpemUxGBggASgD" + 
            "EhAKCGJpZFNpemUxGBogASgDEhAKCGJpZFNpemUyGBwgASgDEhAKCGJpZFNp" + 
            "emUzGB4gASgDEhAKCGJpZFNpemU0GCAgASgDEhAKCGJpZFNpemU1GCIgASgD" + 
            "IvICCgpQQk1zZ0Z1dE1EEgsKA0VPRhgBIAIoBRIOCgZzeW1ib2wYBSACKAkS" + 
            "EQoJdGltZVN0YW1wGAYgAigJEhEKCWFza1ByaWNlMRgHIAIoAxIRCgliaWRQ" + 
            "cmljZTEYCSACKAMSFQoNcHJlQ2xvc2VQcmljZRgLIAIoAxIWCg5wcmVTZXR0" + 
            "bGVQcmljZRgMIAIoAxIRCglvcGVuUHJpY2UYDSACKAMSEQoJaGlnaFByaWNl" + 
            "GA4gAigDEhAKCGxvd1ByaWNlGA8gAigDEhIKCm1hdGNoUHJpY2UYECACKAMS" + 
            "EwoLcHJpY2VDaGFuZ2UYESACKAMSEwoLc2V0dGxlUHJpY2UYFCACKAMSEQoJ" + 
            "aGlnaExpbWl0GBUgAigDEhAKCGxvd0xpbWl0GBYgAigDEhAKCGFza1NpemUx" + 
            "GAggAigDEhAKCGJpZFNpemUxGAogAigDEg4KBnZvbHVtZRgSIAIoAxIQCgh0" + 
            "dXJub3ZlchgTIAIoAyL0BQoKUEJNc2dNREFNRBILCgNFT0YYASACKAUSGQoR" + 
            "cmVxdWVzdFN5bWJvbExpc3QYBSADKAkSKAoIZGF0YVR5cGUYBiABKA4yFi5Q" + 
            "QldyYXBNc2dNREEuRGF0YVR5cGUSDgoGc3ltYm9sGAcgASgJEhEKCXRpbWVT" + 
            "dGFtcBgIIAEoCRIVCg1wcmVDbG9zZVZhbHVlGAkgASgDEhEKCW9wZW5WYWx1" + 
            "ZRgKIAEoAxIQCgh0dXJub3ZlchgLIAEoAxIOCgZ2b2x1bWUYDCABKAMSEQoJ" + 
            "aGlnaFZhbHVlGA0gASgDEhAKCGxvd1ZhbHVlGA4gASgDEhMKC2xhdGVzdElu" + 
            "ZGV4GA8gASgDEhIKCm1hdGNoUHJpY2UYECABKAMSEQoJYXNrUHJpY2U1GBEg" + 
            "ASgDEhAKCGFza1NpemU1GBIgASgDEhEKCWFza1ByaWNlNBgTIAEoAxIQCghh" + 
            "c2tTaXplNBgUIAEoAxIRCglhc2tQcmljZTMYFSABKAMSEAoIYXNrU2l6ZTMY" + 
            "FiABKAMSEQoJYXNrUHJpY2UyGBcgASgDEhAKCGFza1NpemUyGBggASgDEhEK" + 
            "CWFza1ByaWNlMRgZIAEoAxIQCghhc2tTaXplMRgaIAEoAxIRCgliaWRQcmlj" + 
            "ZTEYGyABKAMSEAoIYmlkU2l6ZTEYHCABKAMSEQoJYmlkUHJpY2UyGB0gASgD" + 
            "EhAKCGJpZFNpemUyGB4gASgDEhEKCWJpZFByaWNlMxgfIAEoAxIQCghiaWRT" + 
            "aXplMxggIAEoAxIRCgliaWRQcmljZTQYISABKAMSEAoIYmlkU2l6ZTQYIiAB" + 
            "KAMSEQoJYmlkUHJpY2U1GCMgASgDEhAKCGJpZFNpemU1GCQgASgDEhYKDnBy" + 
            "ZVNldHRsZVByaWNlGCUgASgDEhMKC3ByaWNlQ2hhbmdlGCYgASgDEhMKC3Nl" + 
            "dHRsZVByaWNlGCcgASgDEhEKCWhpZ2hMaW1pdBgoIAEoAxIQCghsb3dMaW1p" + 
            "dBgpIAEoAypeCghEYXRhVHlwZRIKCgZFUVVJVFkQARIJCgVJTkRFWBACEhAK" + 
            "DElOREVYX0ZVVFVSRRADEhQKEENPTU1PRElUWV9GVVRVUkUQBBITCg9JTkRF" + 
            "WF9GT1JDQVNURVIQBSpECgtNZXNzYWdlVHlwZRIPCgtJTkZPUk1BVElPThAB" + 
            "EgsKB1JFUVVFU1QQAhIJCgVJTUFHRRADEgwKCERBVEFCQVNFEAQqJQoIU3Rh" + 
            "dHVzREISCgoGTk9STUFMEAESDQoJU1VTUEVOREVEEAJCHwoPUHJvdG9CdWZN" + 
            "ZXNzYWdlQgxQQldyYXBNc2dNREE=");
        pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
          descriptor = root;
          internal__static_PBWrapMsgMDA_PBMsgEqtMD__Descriptor = Descriptor.MessageTypes[0];
          internal__static_PBWrapMsgMDA_PBMsgEqtMD__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::PBWrapMsgMDA.PBMsgEqtMD, global::PBWrapMsgMDA.PBMsgEqtMD.Builder>(internal__static_PBWrapMsgMDA_PBMsgEqtMD__Descriptor,
                  new string[] { "EOF", "Source", "DataType", "Symbol", "TimeStamp", "PreCloseValue", "OpenValue", "HighValue", "LowValue", "LatestIndex", "MatchPrice", "AskPrice5", "AskPrice4", "AskPrice3", "AskPrice2", "AskPrice1", "BidPrice1", "BidPrice2", "BidPrice3", "BidPrice4", "BidPrice5", "Turnover", "Volume", "AskSize5", "AskSize4", "AskSize3", "AskSize2", "AskSize1", "BidSize1", "BidSize2", "BidSize3", "BidSize4", "BidSize5", });
          internal__static_PBWrapMsgMDA_PBMsgFutMD__Descriptor = Descriptor.MessageTypes[1];
          internal__static_PBWrapMsgMDA_PBMsgFutMD__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::PBWrapMsgMDA.PBMsgFutMD, global::PBWrapMsgMDA.PBMsgFutMD.Builder>(internal__static_PBWrapMsgMDA_PBMsgFutMD__Descriptor,
                  new string[] { "EOF", "Symbol", "TimeStamp", "AskPrice1", "BidPrice1", "PreClosePrice", "PreSettlePrice", "OpenPrice", "HighPrice", "LowPrice", "MatchPrice", "PriceChange", "SettlePrice", "HighLimit", "LowLimit", "AskSize1", "BidSize1", "Volume", "Turnover", });
          internal__static_PBWrapMsgMDA_PBMsgMDAMD__Descriptor = Descriptor.MessageTypes[2];
          internal__static_PBWrapMsgMDA_PBMsgMDAMD__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::PBWrapMsgMDA.PBMsgMDAMD, global::PBWrapMsgMDA.PBMsgMDAMD.Builder>(internal__static_PBWrapMsgMDA_PBMsgMDAMD__Descriptor,
                  new string[] { "EOF", "RequestSymbolList", "DataType", "Symbol", "TimeStamp", "PreCloseValue", "OpenValue", "Turnover", "Volume", "HighValue", "LowValue", "LatestIndex", "MatchPrice", "AskPrice5", "AskSize5", "AskPrice4", "AskSize4", "AskPrice3", "AskSize3", "AskPrice2", "AskSize2", "AskPrice1", "AskSize1", "BidPrice1", "BidSize1", "BidPrice2", "BidSize2", "BidPrice3", "BidSize3", "BidPrice4", "BidSize4", "BidPrice5", "BidSize5", "PreSettlePrice", "PriceChange", "SettlePrice", "HighLimit", "LowLimit", });
          return null;
        };
        pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
            new pbd::FileDescriptor[] {
            }, assigner);
      }
      #endregion
      
    }
  }
  #region Enums
  public enum DataType {
    EQUITY = 1,
    INDEX = 2,
    INDEX_FUTURE = 3,
    COMMODITY_FUTURE = 4,
    INDEX_FORCASTER = 5,
  }
  
  public enum MessageType {
    INFORMATION = 1,
    REQUEST = 2,
    IMAGE = 3,
    DATABASE = 4,
  }
  
  public enum StatusDB {
    NORMAL = 1,
    SUSPENDED = 2,
  }
  
  #endregion
  
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class PBMsgEqtMD : pb::GeneratedMessage<PBMsgEqtMD, PBMsgEqtMD.Builder> {
    private PBMsgEqtMD() { }
    private static readonly PBMsgEqtMD defaultInstance = new PBMsgEqtMD().MakeReadOnly();
    private static readonly string[] _pBMsgEqtMDFieldNames = new string[] { "EOF", "askPrice1", "askPrice2", "askPrice3", "askPrice4", "askPrice5", "askSize1", "askSize2", "askSize3", "askSize4", "askSize5", "bidPrice1", "bidPrice2", "bidPrice3", "bidPrice4", "bidPrice5", "bidSize1", "bidSize2", "bidSize3", "bidSize4", "bidSize5", "dataType", "highValue", "latestIndex", "lowValue", "matchPrice", "openValue", "preCloseValue", "source", "symbol", "timeStamp", "turnover", "volume" };
    private static readonly uint[] _pBMsgEqtMDFieldTags = new uint[] { 8, 184, 168, 152, 136, 120, 192, 176, 160, 144, 128, 200, 216, 232, 248, 264, 208, 224, 240, 256, 272, 32, 88, 104, 96, 112, 64, 56, 26, 42, 50, 72, 80 };
    public static PBMsgEqtMD DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override PBMsgEqtMD DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override PBMsgEqtMD ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::PBWrapMsgMDA.Generated.PBMsgMDA.internal__static_PBWrapMsgMDA_PBMsgEqtMD__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<PBMsgEqtMD, PBMsgEqtMD.Builder> InternalFieldAccessors {
      get { return global::PBWrapMsgMDA.Generated.PBMsgMDA.internal__static_PBWrapMsgMDA_PBMsgEqtMD__FieldAccessorTable; }
    }
    
    public const int EOFFieldNumber = 1;
    private bool hasEOF;
    private int eOF_;
    public bool HasEOF {
      get { return hasEOF; }
    }
    public int EOF {
      get { return eOF_; }
    }
    
    public const int SourceFieldNumber = 3;
    private bool hasSource;
    private string source_ = "";
    public bool HasSource {
      get { return hasSource; }
    }
    public string Source {
      get { return source_; }
    }
    
    public const int DataTypeFieldNumber = 4;
    private bool hasDataType;
    private global::PBWrapMsgMDA.DataType dataType_ = global::PBWrapMsgMDA.DataType.EQUITY;
    public bool HasDataType {
      get { return hasDataType; }
    }
    public global::PBWrapMsgMDA.DataType DataType {
      get { return dataType_; }
    }
    
    public const int SymbolFieldNumber = 5;
    private bool hasSymbol;
    private string symbol_ = "";
    public bool HasSymbol {
      get { return hasSymbol; }
    }
    public string Symbol {
      get { return symbol_; }
    }
    
    public const int TimeStampFieldNumber = 6;
    private bool hasTimeStamp;
    private string timeStamp_ = "";
    public bool HasTimeStamp {
      get { return hasTimeStamp; }
    }
    public string TimeStamp {
      get { return timeStamp_; }
    }
    
    public const int PreCloseValueFieldNumber = 7;
    private bool hasPreCloseValue;
    private long preCloseValue_;
    public bool HasPreCloseValue {
      get { return hasPreCloseValue; }
    }
    public long PreCloseValue {
      get { return preCloseValue_; }
    }
    
    public const int OpenValueFieldNumber = 8;
    private bool hasOpenValue;
    private long openValue_;
    public bool HasOpenValue {
      get { return hasOpenValue; }
    }
    public long OpenValue {
      get { return openValue_; }
    }
    
    public const int HighValueFieldNumber = 11;
    private bool hasHighValue;
    private long highValue_;
    public bool HasHighValue {
      get { return hasHighValue; }
    }
    public long HighValue {
      get { return highValue_; }
    }
    
    public const int LowValueFieldNumber = 12;
    private bool hasLowValue;
    private long lowValue_;
    public bool HasLowValue {
      get { return hasLowValue; }
    }
    public long LowValue {
      get { return lowValue_; }
    }
    
    public const int LatestIndexFieldNumber = 13;
    private bool hasLatestIndex;
    private long latestIndex_;
    public bool HasLatestIndex {
      get { return hasLatestIndex; }
    }
    public long LatestIndex {
      get { return latestIndex_; }
    }
    
    public const int MatchPriceFieldNumber = 14;
    private bool hasMatchPrice;
    private long matchPrice_;
    public bool HasMatchPrice {
      get { return hasMatchPrice; }
    }
    public long MatchPrice {
      get { return matchPrice_; }
    }
    
    public const int AskPrice5FieldNumber = 15;
    private bool hasAskPrice5;
    private long askPrice5_;
    public bool HasAskPrice5 {
      get { return hasAskPrice5; }
    }
    public long AskPrice5 {
      get { return askPrice5_; }
    }
    
    public const int AskPrice4FieldNumber = 17;
    private bool hasAskPrice4;
    private long askPrice4_;
    public bool HasAskPrice4 {
      get { return hasAskPrice4; }
    }
    public long AskPrice4 {
      get { return askPrice4_; }
    }
    
    public const int AskPrice3FieldNumber = 19;
    private bool hasAskPrice3;
    private long askPrice3_;
    public bool HasAskPrice3 {
      get { return hasAskPrice3; }
    }
    public long AskPrice3 {
      get { return askPrice3_; }
    }
    
    public const int AskPrice2FieldNumber = 21;
    private bool hasAskPrice2;
    private long askPrice2_;
    public bool HasAskPrice2 {
      get { return hasAskPrice2; }
    }
    public long AskPrice2 {
      get { return askPrice2_; }
    }
    
    public const int AskPrice1FieldNumber = 23;
    private bool hasAskPrice1;
    private long askPrice1_;
    public bool HasAskPrice1 {
      get { return hasAskPrice1; }
    }
    public long AskPrice1 {
      get { return askPrice1_; }
    }
    
    public const int BidPrice1FieldNumber = 25;
    private bool hasBidPrice1;
    private long bidPrice1_;
    public bool HasBidPrice1 {
      get { return hasBidPrice1; }
    }
    public long BidPrice1 {
      get { return bidPrice1_; }
    }
    
    public const int BidPrice2FieldNumber = 27;
    private bool hasBidPrice2;
    private long bidPrice2_;
    public bool HasBidPrice2 {
      get { return hasBidPrice2; }
    }
    public long BidPrice2 {
      get { return bidPrice2_; }
    }
    
    public const int BidPrice3FieldNumber = 29;
    private bool hasBidPrice3;
    private long bidPrice3_;
    public bool HasBidPrice3 {
      get { return hasBidPrice3; }
    }
    public long BidPrice3 {
      get { return bidPrice3_; }
    }
    
    public const int BidPrice4FieldNumber = 31;
    private bool hasBidPrice4;
    private long bidPrice4_;
    public bool HasBidPrice4 {
      get { return hasBidPrice4; }
    }
    public long BidPrice4 {
      get { return bidPrice4_; }
    }
    
    public const int BidPrice5FieldNumber = 33;
    private bool hasBidPrice5;
    private long bidPrice5_;
    public bool HasBidPrice5 {
      get { return hasBidPrice5; }
    }
    public long BidPrice5 {
      get { return bidPrice5_; }
    }
    
    public const int TurnoverFieldNumber = 9;
    private bool hasTurnover;
    private long turnover_;
    public bool HasTurnover {
      get { return hasTurnover; }
    }
    public long Turnover {
      get { return turnover_; }
    }
    
    public const int VolumeFieldNumber = 10;
    private bool hasVolume;
    private long volume_;
    public bool HasVolume {
      get { return hasVolume; }
    }
    public long Volume {
      get { return volume_; }
    }
    
    public const int AskSize5FieldNumber = 16;
    private bool hasAskSize5;
    private long askSize5_;
    public bool HasAskSize5 {
      get { return hasAskSize5; }
    }
    public long AskSize5 {
      get { return askSize5_; }
    }
    
    public const int AskSize4FieldNumber = 18;
    private bool hasAskSize4;
    private long askSize4_;
    public bool HasAskSize4 {
      get { return hasAskSize4; }
    }
    public long AskSize4 {
      get { return askSize4_; }
    }
    
    public const int AskSize3FieldNumber = 20;
    private bool hasAskSize3;
    private long askSize3_;
    public bool HasAskSize3 {
      get { return hasAskSize3; }
    }
    public long AskSize3 {
      get { return askSize3_; }
    }
    
    public const int AskSize2FieldNumber = 22;
    private bool hasAskSize2;
    private long askSize2_;
    public bool HasAskSize2 {
      get { return hasAskSize2; }
    }
    public long AskSize2 {
      get { return askSize2_; }
    }
    
    public const int AskSize1FieldNumber = 24;
    private bool hasAskSize1;
    private long askSize1_;
    public bool HasAskSize1 {
      get { return hasAskSize1; }
    }
    public long AskSize1 {
      get { return askSize1_; }
    }
    
    public const int BidSize1FieldNumber = 26;
    private bool hasBidSize1;
    private long bidSize1_;
    public bool HasBidSize1 {
      get { return hasBidSize1; }
    }
    public long BidSize1 {
      get { return bidSize1_; }
    }
    
    public const int BidSize2FieldNumber = 28;
    private bool hasBidSize2;
    private long bidSize2_;
    public bool HasBidSize2 {
      get { return hasBidSize2; }
    }
    public long BidSize2 {
      get { return bidSize2_; }
    }
    
    public const int BidSize3FieldNumber = 30;
    private bool hasBidSize3;
    private long bidSize3_;
    public bool HasBidSize3 {
      get { return hasBidSize3; }
    }
    public long BidSize3 {
      get { return bidSize3_; }
    }
    
    public const int BidSize4FieldNumber = 32;
    private bool hasBidSize4;
    private long bidSize4_;
    public bool HasBidSize4 {
      get { return hasBidSize4; }
    }
    public long BidSize4 {
      get { return bidSize4_; }
    }
    
    public const int BidSize5FieldNumber = 34;
    private bool hasBidSize5;
    private long bidSize5_;
    public bool HasBidSize5 {
      get { return hasBidSize5; }
    }
    public long BidSize5 {
      get { return bidSize5_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasEOF) return false;
        if (!hasSource) return false;
        if (!hasDataType) return false;
        if (!hasSymbol) return false;
        if (!hasTimeStamp) return false;
        if (!hasPreCloseValue) return false;
        if (!hasOpenValue) return false;
        if (!hasHighValue) return false;
        if (!hasLowValue) return false;
        if (!hasTurnover) return false;
        if (!hasVolume) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _pBMsgEqtMDFieldNames;
      if (hasEOF) {
        output.WriteInt32(1, field_names[0], EOF);
      }
      if (hasSource) {
        output.WriteString(3, field_names[28], Source);
      }
      if (hasDataType) {
        output.WriteEnum(4, field_names[21], (int) DataType, DataType);
      }
      if (hasSymbol) {
        output.WriteString(5, field_names[29], Symbol);
      }
      if (hasTimeStamp) {
        output.WriteString(6, field_names[30], TimeStamp);
      }
      if (hasPreCloseValue) {
        output.WriteInt64(7, field_names[27], PreCloseValue);
      }
      if (hasOpenValue) {
        output.WriteInt64(8, field_names[26], OpenValue);
      }
      if (hasTurnover) {
        output.WriteInt64(9, field_names[31], Turnover);
      }
      if (hasVolume) {
        output.WriteInt64(10, field_names[32], Volume);
      }
      if (hasHighValue) {
        output.WriteInt64(11, field_names[22], HighValue);
      }
      if (hasLowValue) {
        output.WriteInt64(12, field_names[24], LowValue);
      }
      if (hasLatestIndex) {
        output.WriteInt64(13, field_names[23], LatestIndex);
      }
      if (hasMatchPrice) {
        output.WriteInt64(14, field_names[25], MatchPrice);
      }
      if (hasAskPrice5) {
        output.WriteInt64(15, field_names[5], AskPrice5);
      }
      if (hasAskSize5) {
        output.WriteInt64(16, field_names[10], AskSize5);
      }
      if (hasAskPrice4) {
        output.WriteInt64(17, field_names[4], AskPrice4);
      }
      if (hasAskSize4) {
        output.WriteInt64(18, field_names[9], AskSize4);
      }
      if (hasAskPrice3) {
        output.WriteInt64(19, field_names[3], AskPrice3);
      }
      if (hasAskSize3) {
        output.WriteInt64(20, field_names[8], AskSize3);
      }
      if (hasAskPrice2) {
        output.WriteInt64(21, field_names[2], AskPrice2);
      }
      if (hasAskSize2) {
        output.WriteInt64(22, field_names[7], AskSize2);
      }
      if (hasAskPrice1) {
        output.WriteInt64(23, field_names[1], AskPrice1);
      }
      if (hasAskSize1) {
        output.WriteInt64(24, field_names[6], AskSize1);
      }
      if (hasBidPrice1) {
        output.WriteInt64(25, field_names[11], BidPrice1);
      }
      if (hasBidSize1) {
        output.WriteInt64(26, field_names[16], BidSize1);
      }
      if (hasBidPrice2) {
        output.WriteInt64(27, field_names[12], BidPrice2);
      }
      if (hasBidSize2) {
        output.WriteInt64(28, field_names[17], BidSize2);
      }
      if (hasBidPrice3) {
        output.WriteInt64(29, field_names[13], BidPrice3);
      }
      if (hasBidSize3) {
        output.WriteInt64(30, field_names[18], BidSize3);
      }
      if (hasBidPrice4) {
        output.WriteInt64(31, field_names[14], BidPrice4);
      }
      if (hasBidSize4) {
        output.WriteInt64(32, field_names[19], BidSize4);
      }
      if (hasBidPrice5) {
        output.WriteInt64(33, field_names[15], BidPrice5);
      }
      if (hasBidSize5) {
        output.WriteInt64(34, field_names[20], BidSize5);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasEOF) {
          size += pb::CodedOutputStream.ComputeInt32Size(1, EOF);
        }
        if (hasSource) {
          size += pb::CodedOutputStream.ComputeStringSize(3, Source);
        }
        if (hasDataType) {
          size += pb::CodedOutputStream.ComputeEnumSize(4, (int) DataType);
        }
        if (hasSymbol) {
          size += pb::CodedOutputStream.ComputeStringSize(5, Symbol);
        }
        if (hasTimeStamp) {
          size += pb::CodedOutputStream.ComputeStringSize(6, TimeStamp);
        }
        if (hasPreCloseValue) {
          size += pb::CodedOutputStream.ComputeInt64Size(7, PreCloseValue);
        }
        if (hasOpenValue) {
          size += pb::CodedOutputStream.ComputeInt64Size(8, OpenValue);
        }
        if (hasHighValue) {
          size += pb::CodedOutputStream.ComputeInt64Size(11, HighValue);
        }
        if (hasLowValue) {
          size += pb::CodedOutputStream.ComputeInt64Size(12, LowValue);
        }
        if (hasLatestIndex) {
          size += pb::CodedOutputStream.ComputeInt64Size(13, LatestIndex);
        }
        if (hasMatchPrice) {
          size += pb::CodedOutputStream.ComputeInt64Size(14, MatchPrice);
        }
        if (hasAskPrice5) {
          size += pb::CodedOutputStream.ComputeInt64Size(15, AskPrice5);
        }
        if (hasAskPrice4) {
          size += pb::CodedOutputStream.ComputeInt64Size(17, AskPrice4);
        }
        if (hasAskPrice3) {
          size += pb::CodedOutputStream.ComputeInt64Size(19, AskPrice3);
        }
        if (hasAskPrice2) {
          size += pb::CodedOutputStream.ComputeInt64Size(21, AskPrice2);
        }
        if (hasAskPrice1) {
          size += pb::CodedOutputStream.ComputeInt64Size(23, AskPrice1);
        }
        if (hasBidPrice1) {
          size += pb::CodedOutputStream.ComputeInt64Size(25, BidPrice1);
        }
        if (hasBidPrice2) {
          size += pb::CodedOutputStream.ComputeInt64Size(27, BidPrice2);
        }
        if (hasBidPrice3) {
          size += pb::CodedOutputStream.ComputeInt64Size(29, BidPrice3);
        }
        if (hasBidPrice4) {
          size += pb::CodedOutputStream.ComputeInt64Size(31, BidPrice4);
        }
        if (hasBidPrice5) {
          size += pb::CodedOutputStream.ComputeInt64Size(33, BidPrice5);
        }
        if (hasTurnover) {
          size += pb::CodedOutputStream.ComputeInt64Size(9, Turnover);
        }
        if (hasVolume) {
          size += pb::CodedOutputStream.ComputeInt64Size(10, Volume);
        }
        if (hasAskSize5) {
          size += pb::CodedOutputStream.ComputeInt64Size(16, AskSize5);
        }
        if (hasAskSize4) {
          size += pb::CodedOutputStream.ComputeInt64Size(18, AskSize4);
        }
        if (hasAskSize3) {
          size += pb::CodedOutputStream.ComputeInt64Size(20, AskSize3);
        }
        if (hasAskSize2) {
          size += pb::CodedOutputStream.ComputeInt64Size(22, AskSize2);
        }
        if (hasAskSize1) {
          size += pb::CodedOutputStream.ComputeInt64Size(24, AskSize1);
        }
        if (hasBidSize1) {
          size += pb::CodedOutputStream.ComputeInt64Size(26, BidSize1);
        }
        if (hasBidSize2) {
          size += pb::CodedOutputStream.ComputeInt64Size(28, BidSize2);
        }
        if (hasBidSize3) {
          size += pb::CodedOutputStream.ComputeInt64Size(30, BidSize3);
        }
        if (hasBidSize4) {
          size += pb::CodedOutputStream.ComputeInt64Size(32, BidSize4);
        }
        if (hasBidSize5) {
          size += pb::CodedOutputStream.ComputeInt64Size(34, BidSize5);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static PBMsgEqtMD ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static PBMsgEqtMD ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static PBMsgEqtMD ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static PBMsgEqtMD ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static PBMsgEqtMD ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static PBMsgEqtMD ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static PBMsgEqtMD ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static PBMsgEqtMD ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static PBMsgEqtMD ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static PBMsgEqtMD ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private PBMsgEqtMD MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(PBMsgEqtMD prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<PBMsgEqtMD, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(PBMsgEqtMD cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private PBMsgEqtMD result;
      
      private PBMsgEqtMD PrepareBuilder() {
        if (resultIsReadOnly) {
          PBMsgEqtMD original = result;
          result = new PBMsgEqtMD();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override PBMsgEqtMD MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::PBWrapMsgMDA.PBMsgEqtMD.Descriptor; }
      }
      
      public override PBMsgEqtMD DefaultInstanceForType {
        get { return global::PBWrapMsgMDA.PBMsgEqtMD.DefaultInstance; }
      }
      
      public override PBMsgEqtMD BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is PBMsgEqtMD) {
          return MergeFrom((PBMsgEqtMD) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(PBMsgEqtMD other) {
        if (other == global::PBWrapMsgMDA.PBMsgEqtMD.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasEOF) {
          EOF = other.EOF;
        }
        if (other.HasSource) {
          Source = other.Source;
        }
        if (other.HasDataType) {
          DataType = other.DataType;
        }
        if (other.HasSymbol) {
          Symbol = other.Symbol;
        }
        if (other.HasTimeStamp) {
          TimeStamp = other.TimeStamp;
        }
        if (other.HasPreCloseValue) {
          PreCloseValue = other.PreCloseValue;
        }
        if (other.HasOpenValue) {
          OpenValue = other.OpenValue;
        }
        if (other.HasHighValue) {
          HighValue = other.HighValue;
        }
        if (other.HasLowValue) {
          LowValue = other.LowValue;
        }
        if (other.HasLatestIndex) {
          LatestIndex = other.LatestIndex;
        }
        if (other.HasMatchPrice) {
          MatchPrice = other.MatchPrice;
        }
        if (other.HasAskPrice5) {
          AskPrice5 = other.AskPrice5;
        }
        if (other.HasAskPrice4) {
          AskPrice4 = other.AskPrice4;
        }
        if (other.HasAskPrice3) {
          AskPrice3 = other.AskPrice3;
        }
        if (other.HasAskPrice2) {
          AskPrice2 = other.AskPrice2;
        }
        if (other.HasAskPrice1) {
          AskPrice1 = other.AskPrice1;
        }
        if (other.HasBidPrice1) {
          BidPrice1 = other.BidPrice1;
        }
        if (other.HasBidPrice2) {
          BidPrice2 = other.BidPrice2;
        }
        if (other.HasBidPrice3) {
          BidPrice3 = other.BidPrice3;
        }
        if (other.HasBidPrice4) {
          BidPrice4 = other.BidPrice4;
        }
        if (other.HasBidPrice5) {
          BidPrice5 = other.BidPrice5;
        }
        if (other.HasTurnover) {
          Turnover = other.Turnover;
        }
        if (other.HasVolume) {
          Volume = other.Volume;
        }
        if (other.HasAskSize5) {
          AskSize5 = other.AskSize5;
        }
        if (other.HasAskSize4) {
          AskSize4 = other.AskSize4;
        }
        if (other.HasAskSize3) {
          AskSize3 = other.AskSize3;
        }
        if (other.HasAskSize2) {
          AskSize2 = other.AskSize2;
        }
        if (other.HasAskSize1) {
          AskSize1 = other.AskSize1;
        }
        if (other.HasBidSize1) {
          BidSize1 = other.BidSize1;
        }
        if (other.HasBidSize2) {
          BidSize2 = other.BidSize2;
        }
        if (other.HasBidSize3) {
          BidSize3 = other.BidSize3;
        }
        if (other.HasBidSize4) {
          BidSize4 = other.BidSize4;
        }
        if (other.HasBidSize5) {
          BidSize5 = other.BidSize5;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_pBMsgEqtMDFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _pBMsgEqtMDFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasEOF = input.ReadInt32(ref result.eOF_);
              break;
            }
            case 26: {
              result.hasSource = input.ReadString(ref result.source_);
              break;
            }
            case 32: {
              object unknown;
              if(input.ReadEnum(ref result.dataType_, out unknown)) {
                result.hasDataType = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(4, (ulong)(int)unknown);
              }
              break;
            }
            case 42: {
              result.hasSymbol = input.ReadString(ref result.symbol_);
              break;
            }
            case 50: {
              result.hasTimeStamp = input.ReadString(ref result.timeStamp_);
              break;
            }
            case 56: {
              result.hasPreCloseValue = input.ReadInt64(ref result.preCloseValue_);
              break;
            }
            case 64: {
              result.hasOpenValue = input.ReadInt64(ref result.openValue_);
              break;
            }
            case 72: {
              result.hasTurnover = input.ReadInt64(ref result.turnover_);
              break;
            }
            case 80: {
              result.hasVolume = input.ReadInt64(ref result.volume_);
              break;
            }
            case 88: {
              result.hasHighValue = input.ReadInt64(ref result.highValue_);
              break;
            }
            case 96: {
              result.hasLowValue = input.ReadInt64(ref result.lowValue_);
              break;
            }
            case 104: {
              result.hasLatestIndex = input.ReadInt64(ref result.latestIndex_);
              break;
            }
            case 112: {
              result.hasMatchPrice = input.ReadInt64(ref result.matchPrice_);
              break;
            }
            case 120: {
              result.hasAskPrice5 = input.ReadInt64(ref result.askPrice5_);
              break;
            }
            case 128: {
              result.hasAskSize5 = input.ReadInt64(ref result.askSize5_);
              break;
            }
            case 136: {
              result.hasAskPrice4 = input.ReadInt64(ref result.askPrice4_);
              break;
            }
            case 144: {
              result.hasAskSize4 = input.ReadInt64(ref result.askSize4_);
              break;
            }
            case 152: {
              result.hasAskPrice3 = input.ReadInt64(ref result.askPrice3_);
              break;
            }
            case 160: {
              result.hasAskSize3 = input.ReadInt64(ref result.askSize3_);
              break;
            }
            case 168: {
              result.hasAskPrice2 = input.ReadInt64(ref result.askPrice2_);
              break;
            }
            case 176: {
              result.hasAskSize2 = input.ReadInt64(ref result.askSize2_);
              break;
            }
            case 184: {
              result.hasAskPrice1 = input.ReadInt64(ref result.askPrice1_);
              break;
            }
            case 192: {
              result.hasAskSize1 = input.ReadInt64(ref result.askSize1_);
              break;
            }
            case 200: {
              result.hasBidPrice1 = input.ReadInt64(ref result.bidPrice1_);
              break;
            }
            case 208: {
              result.hasBidSize1 = input.ReadInt64(ref result.bidSize1_);
              break;
            }
            case 216: {
              result.hasBidPrice2 = input.ReadInt64(ref result.bidPrice2_);
              break;
            }
            case 224: {
              result.hasBidSize2 = input.ReadInt64(ref result.bidSize2_);
              break;
            }
            case 232: {
              result.hasBidPrice3 = input.ReadInt64(ref result.bidPrice3_);
              break;
            }
            case 240: {
              result.hasBidSize3 = input.ReadInt64(ref result.bidSize3_);
              break;
            }
            case 248: {
              result.hasBidPrice4 = input.ReadInt64(ref result.bidPrice4_);
              break;
            }
            case 256: {
              result.hasBidSize4 = input.ReadInt64(ref result.bidSize4_);
              break;
            }
            case 264: {
              result.hasBidPrice5 = input.ReadInt64(ref result.bidPrice5_);
              break;
            }
            case 272: {
              result.hasBidSize5 = input.ReadInt64(ref result.bidSize5_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasEOF {
        get { return result.hasEOF; }
      }
      public int EOF {
        get { return result.EOF; }
        set { SetEOF(value); }
      }
      public Builder SetEOF(int value) {
        PrepareBuilder();
        result.hasEOF = true;
        result.eOF_ = value;
        return this;
      }
      public Builder ClearEOF() {
        PrepareBuilder();
        result.hasEOF = false;
        result.eOF_ = 0;
        return this;
      }
      
      public bool HasSource {
        get { return result.hasSource; }
      }
      public string Source {
        get { return result.Source; }
        set { SetSource(value); }
      }
      public Builder SetSource(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSource = true;
        result.source_ = value;
        return this;
      }
      public Builder ClearSource() {
        PrepareBuilder();
        result.hasSource = false;
        result.source_ = "";
        return this;
      }
      
      public bool HasDataType {
       get { return result.hasDataType; }
      }
      public global::PBWrapMsgMDA.DataType DataType {
        get { return result.DataType; }
        set { SetDataType(value); }
      }
      public Builder SetDataType(global::PBWrapMsgMDA.DataType value) {
        PrepareBuilder();
        result.hasDataType = true;
        result.dataType_ = value;
        return this;
      }
      public Builder ClearDataType() {
        PrepareBuilder();
        result.hasDataType = false;
        result.dataType_ = global::PBWrapMsgMDA.DataType.EQUITY;
        return this;
      }
      
      public bool HasSymbol {
        get { return result.hasSymbol; }
      }
      public string Symbol {
        get { return result.Symbol; }
        set { SetSymbol(value); }
      }
      public Builder SetSymbol(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSymbol = true;
        result.symbol_ = value;
        return this;
      }
      public Builder ClearSymbol() {
        PrepareBuilder();
        result.hasSymbol = false;
        result.symbol_ = "";
        return this;
      }
      
      public bool HasTimeStamp {
        get { return result.hasTimeStamp; }
      }
      public string TimeStamp {
        get { return result.TimeStamp; }
        set { SetTimeStamp(value); }
      }
      public Builder SetTimeStamp(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTimeStamp = true;
        result.timeStamp_ = value;
        return this;
      }
      public Builder ClearTimeStamp() {
        PrepareBuilder();
        result.hasTimeStamp = false;
        result.timeStamp_ = "";
        return this;
      }
      
      public bool HasPreCloseValue {
        get { return result.hasPreCloseValue; }
      }
      public long PreCloseValue {
        get { return result.PreCloseValue; }
        set { SetPreCloseValue(value); }
      }
      public Builder SetPreCloseValue(long value) {
        PrepareBuilder();
        result.hasPreCloseValue = true;
        result.preCloseValue_ = value;
        return this;
      }
      public Builder ClearPreCloseValue() {
        PrepareBuilder();
        result.hasPreCloseValue = false;
        result.preCloseValue_ = 0L;
        return this;
      }
      
      public bool HasOpenValue {
        get { return result.hasOpenValue; }
      }
      public long OpenValue {
        get { return result.OpenValue; }
        set { SetOpenValue(value); }
      }
      public Builder SetOpenValue(long value) {
        PrepareBuilder();
        result.hasOpenValue = true;
        result.openValue_ = value;
        return this;
      }
      public Builder ClearOpenValue() {
        PrepareBuilder();
        result.hasOpenValue = false;
        result.openValue_ = 0L;
        return this;
      }
      
      public bool HasHighValue {
        get { return result.hasHighValue; }
      }
      public long HighValue {
        get { return result.HighValue; }
        set { SetHighValue(value); }
      }
      public Builder SetHighValue(long value) {
        PrepareBuilder();
        result.hasHighValue = true;
        result.highValue_ = value;
        return this;
      }
      public Builder ClearHighValue() {
        PrepareBuilder();
        result.hasHighValue = false;
        result.highValue_ = 0L;
        return this;
      }
      
      public bool HasLowValue {
        get { return result.hasLowValue; }
      }
      public long LowValue {
        get { return result.LowValue; }
        set { SetLowValue(value); }
      }
      public Builder SetLowValue(long value) {
        PrepareBuilder();
        result.hasLowValue = true;
        result.lowValue_ = value;
        return this;
      }
      public Builder ClearLowValue() {
        PrepareBuilder();
        result.hasLowValue = false;
        result.lowValue_ = 0L;
        return this;
      }
      
      public bool HasLatestIndex {
        get { return result.hasLatestIndex; }
      }
      public long LatestIndex {
        get { return result.LatestIndex; }
        set { SetLatestIndex(value); }
      }
      public Builder SetLatestIndex(long value) {
        PrepareBuilder();
        result.hasLatestIndex = true;
        result.latestIndex_ = value;
        return this;
      }
      public Builder ClearLatestIndex() {
        PrepareBuilder();
        result.hasLatestIndex = false;
        result.latestIndex_ = 0L;
        return this;
      }
      
      public bool HasMatchPrice {
        get { return result.hasMatchPrice; }
      }
      public long MatchPrice {
        get { return result.MatchPrice; }
        set { SetMatchPrice(value); }
      }
      public Builder SetMatchPrice(long value) {
        PrepareBuilder();
        result.hasMatchPrice = true;
        result.matchPrice_ = value;
        return this;
      }
      public Builder ClearMatchPrice() {
        PrepareBuilder();
        result.hasMatchPrice = false;
        result.matchPrice_ = 0L;
        return this;
      }
      
      public bool HasAskPrice5 {
        get { return result.hasAskPrice5; }
      }
      public long AskPrice5 {
        get { return result.AskPrice5; }
        set { SetAskPrice5(value); }
      }
      public Builder SetAskPrice5(long value) {
        PrepareBuilder();
        result.hasAskPrice5 = true;
        result.askPrice5_ = value;
        return this;
      }
      public Builder ClearAskPrice5() {
        PrepareBuilder();
        result.hasAskPrice5 = false;
        result.askPrice5_ = 0L;
        return this;
      }
      
      public bool HasAskPrice4 {
        get { return result.hasAskPrice4; }
      }
      public long AskPrice4 {
        get { return result.AskPrice4; }
        set { SetAskPrice4(value); }
      }
      public Builder SetAskPrice4(long value) {
        PrepareBuilder();
        result.hasAskPrice4 = true;
        result.askPrice4_ = value;
        return this;
      }
      public Builder ClearAskPrice4() {
        PrepareBuilder();
        result.hasAskPrice4 = false;
        result.askPrice4_ = 0L;
        return this;
      }
      
      public bool HasAskPrice3 {
        get { return result.hasAskPrice3; }
      }
      public long AskPrice3 {
        get { return result.AskPrice3; }
        set { SetAskPrice3(value); }
      }
      public Builder SetAskPrice3(long value) {
        PrepareBuilder();
        result.hasAskPrice3 = true;
        result.askPrice3_ = value;
        return this;
      }
      public Builder ClearAskPrice3() {
        PrepareBuilder();
        result.hasAskPrice3 = false;
        result.askPrice3_ = 0L;
        return this;
      }
      
      public bool HasAskPrice2 {
        get { return result.hasAskPrice2; }
      }
      public long AskPrice2 {
        get { return result.AskPrice2; }
        set { SetAskPrice2(value); }
      }
      public Builder SetAskPrice2(long value) {
        PrepareBuilder();
        result.hasAskPrice2 = true;
        result.askPrice2_ = value;
        return this;
      }
      public Builder ClearAskPrice2() {
        PrepareBuilder();
        result.hasAskPrice2 = false;
        result.askPrice2_ = 0L;
        return this;
      }
      
      public bool HasAskPrice1 {
        get { return result.hasAskPrice1; }
      }
      public long AskPrice1 {
        get { return result.AskPrice1; }
        set { SetAskPrice1(value); }
      }
      public Builder SetAskPrice1(long value) {
        PrepareBuilder();
        result.hasAskPrice1 = true;
        result.askPrice1_ = value;
        return this;
      }
      public Builder ClearAskPrice1() {
        PrepareBuilder();
        result.hasAskPrice1 = false;
        result.askPrice1_ = 0L;
        return this;
      }
      
      public bool HasBidPrice1 {
        get { return result.hasBidPrice1; }
      }
      public long BidPrice1 {
        get { return result.BidPrice1; }
        set { SetBidPrice1(value); }
      }
      public Builder SetBidPrice1(long value) {
        PrepareBuilder();
        result.hasBidPrice1 = true;
        result.bidPrice1_ = value;
        return this;
      }
      public Builder ClearBidPrice1() {
        PrepareBuilder();
        result.hasBidPrice1 = false;
        result.bidPrice1_ = 0L;
        return this;
      }
      
      public bool HasBidPrice2 {
        get { return result.hasBidPrice2; }
      }
      public long BidPrice2 {
        get { return result.BidPrice2; }
        set { SetBidPrice2(value); }
      }
      public Builder SetBidPrice2(long value) {
        PrepareBuilder();
        result.hasBidPrice2 = true;
        result.bidPrice2_ = value;
        return this;
      }
      public Builder ClearBidPrice2() {
        PrepareBuilder();
        result.hasBidPrice2 = false;
        result.bidPrice2_ = 0L;
        return this;
      }
      
      public bool HasBidPrice3 {
        get { return result.hasBidPrice3; }
      }
      public long BidPrice3 {
        get { return result.BidPrice3; }
        set { SetBidPrice3(value); }
      }
      public Builder SetBidPrice3(long value) {
        PrepareBuilder();
        result.hasBidPrice3 = true;
        result.bidPrice3_ = value;
        return this;
      }
      public Builder ClearBidPrice3() {
        PrepareBuilder();
        result.hasBidPrice3 = false;
        result.bidPrice3_ = 0L;
        return this;
      }
      
      public bool HasBidPrice4 {
        get { return result.hasBidPrice4; }
      }
      public long BidPrice4 {
        get { return result.BidPrice4; }
        set { SetBidPrice4(value); }
      }
      public Builder SetBidPrice4(long value) {
        PrepareBuilder();
        result.hasBidPrice4 = true;
        result.bidPrice4_ = value;
        return this;
      }
      public Builder ClearBidPrice4() {
        PrepareBuilder();
        result.hasBidPrice4 = false;
        result.bidPrice4_ = 0L;
        return this;
      }
      
      public bool HasBidPrice5 {
        get { return result.hasBidPrice5; }
      }
      public long BidPrice5 {
        get { return result.BidPrice5; }
        set { SetBidPrice5(value); }
      }
      public Builder SetBidPrice5(long value) {
        PrepareBuilder();
        result.hasBidPrice5 = true;
        result.bidPrice5_ = value;
        return this;
      }
      public Builder ClearBidPrice5() {
        PrepareBuilder();
        result.hasBidPrice5 = false;
        result.bidPrice5_ = 0L;
        return this;
      }
      
      public bool HasTurnover {
        get { return result.hasTurnover; }
      }
      public long Turnover {
        get { return result.Turnover; }
        set { SetTurnover(value); }
      }
      public Builder SetTurnover(long value) {
        PrepareBuilder();
        result.hasTurnover = true;
        result.turnover_ = value;
        return this;
      }
      public Builder ClearTurnover() {
        PrepareBuilder();
        result.hasTurnover = false;
        result.turnover_ = 0L;
        return this;
      }
      
      public bool HasVolume {
        get { return result.hasVolume; }
      }
      public long Volume {
        get { return result.Volume; }
        set { SetVolume(value); }
      }
      public Builder SetVolume(long value) {
        PrepareBuilder();
        result.hasVolume = true;
        result.volume_ = value;
        return this;
      }
      public Builder ClearVolume() {
        PrepareBuilder();
        result.hasVolume = false;
        result.volume_ = 0L;
        return this;
      }
      
      public bool HasAskSize5 {
        get { return result.hasAskSize5; }
      }
      public long AskSize5 {
        get { return result.AskSize5; }
        set { SetAskSize5(value); }
      }
      public Builder SetAskSize5(long value) {
        PrepareBuilder();
        result.hasAskSize5 = true;
        result.askSize5_ = value;
        return this;
      }
      public Builder ClearAskSize5() {
        PrepareBuilder();
        result.hasAskSize5 = false;
        result.askSize5_ = 0L;
        return this;
      }
      
      public bool HasAskSize4 {
        get { return result.hasAskSize4; }
      }
      public long AskSize4 {
        get { return result.AskSize4; }
        set { SetAskSize4(value); }
      }
      public Builder SetAskSize4(long value) {
        PrepareBuilder();
        result.hasAskSize4 = true;
        result.askSize4_ = value;
        return this;
      }
      public Builder ClearAskSize4() {
        PrepareBuilder();
        result.hasAskSize4 = false;
        result.askSize4_ = 0L;
        return this;
      }
      
      public bool HasAskSize3 {
        get { return result.hasAskSize3; }
      }
      public long AskSize3 {
        get { return result.AskSize3; }
        set { SetAskSize3(value); }
      }
      public Builder SetAskSize3(long value) {
        PrepareBuilder();
        result.hasAskSize3 = true;
        result.askSize3_ = value;
        return this;
      }
      public Builder ClearAskSize3() {
        PrepareBuilder();
        result.hasAskSize3 = false;
        result.askSize3_ = 0L;
        return this;
      }
      
      public bool HasAskSize2 {
        get { return result.hasAskSize2; }
      }
      public long AskSize2 {
        get { return result.AskSize2; }
        set { SetAskSize2(value); }
      }
      public Builder SetAskSize2(long value) {
        PrepareBuilder();
        result.hasAskSize2 = true;
        result.askSize2_ = value;
        return this;
      }
      public Builder ClearAskSize2() {
        PrepareBuilder();
        result.hasAskSize2 = false;
        result.askSize2_ = 0L;
        return this;
      }
      
      public bool HasAskSize1 {
        get { return result.hasAskSize1; }
      }
      public long AskSize1 {
        get { return result.AskSize1; }
        set { SetAskSize1(value); }
      }
      public Builder SetAskSize1(long value) {
        PrepareBuilder();
        result.hasAskSize1 = true;
        result.askSize1_ = value;
        return this;
      }
      public Builder ClearAskSize1() {
        PrepareBuilder();
        result.hasAskSize1 = false;
        result.askSize1_ = 0L;
        return this;
      }
      
      public bool HasBidSize1 {
        get { return result.hasBidSize1; }
      }
      public long BidSize1 {
        get { return result.BidSize1; }
        set { SetBidSize1(value); }
      }
      public Builder SetBidSize1(long value) {
        PrepareBuilder();
        result.hasBidSize1 = true;
        result.bidSize1_ = value;
        return this;
      }
      public Builder ClearBidSize1() {
        PrepareBuilder();
        result.hasBidSize1 = false;
        result.bidSize1_ = 0L;
        return this;
      }
      
      public bool HasBidSize2 {
        get { return result.hasBidSize2; }
      }
      public long BidSize2 {
        get { return result.BidSize2; }
        set { SetBidSize2(value); }
      }
      public Builder SetBidSize2(long value) {
        PrepareBuilder();
        result.hasBidSize2 = true;
        result.bidSize2_ = value;
        return this;
      }
      public Builder ClearBidSize2() {
        PrepareBuilder();
        result.hasBidSize2 = false;
        result.bidSize2_ = 0L;
        return this;
      }
      
      public bool HasBidSize3 {
        get { return result.hasBidSize3; }
      }
      public long BidSize3 {
        get { return result.BidSize3; }
        set { SetBidSize3(value); }
      }
      public Builder SetBidSize3(long value) {
        PrepareBuilder();
        result.hasBidSize3 = true;
        result.bidSize3_ = value;
        return this;
      }
      public Builder ClearBidSize3() {
        PrepareBuilder();
        result.hasBidSize3 = false;
        result.bidSize3_ = 0L;
        return this;
      }
      
      public bool HasBidSize4 {
        get { return result.hasBidSize4; }
      }
      public long BidSize4 {
        get { return result.BidSize4; }
        set { SetBidSize4(value); }
      }
      public Builder SetBidSize4(long value) {
        PrepareBuilder();
        result.hasBidSize4 = true;
        result.bidSize4_ = value;
        return this;
      }
      public Builder ClearBidSize4() {
        PrepareBuilder();
        result.hasBidSize4 = false;
        result.bidSize4_ = 0L;
        return this;
      }
      
      public bool HasBidSize5 {
        get { return result.hasBidSize5; }
      }
      public long BidSize5 {
        get { return result.BidSize5; }
        set { SetBidSize5(value); }
      }
      public Builder SetBidSize5(long value) {
        PrepareBuilder();
        result.hasBidSize5 = true;
        result.bidSize5_ = value;
        return this;
      }
      public Builder ClearBidSize5() {
        PrepareBuilder();
        result.hasBidSize5 = false;
        result.bidSize5_ = 0L;
        return this;
      }
    }
    static PBMsgEqtMD() {
      object.ReferenceEquals(global::PBWrapMsgMDA.Generated.PBMsgMDA.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class PBMsgFutMD : pb::GeneratedMessage<PBMsgFutMD, PBMsgFutMD.Builder> {
    private PBMsgFutMD() { }
    private static readonly PBMsgFutMD defaultInstance = new PBMsgFutMD().MakeReadOnly();
    private static readonly string[] _pBMsgFutMDFieldNames = new string[] { "EOF", "askPrice1", "askSize1", "bidPrice1", "bidSize1", "highLimit", "highPrice", "lowLimit", "lowPrice", "matchPrice", "openPrice", "preClosePrice", "preSettlePrice", "priceChange", "settlePrice", "symbol", "timeStamp", "turnover", "volume" };
    private static readonly uint[] _pBMsgFutMDFieldTags = new uint[] { 8, 56, 64, 72, 80, 168, 112, 176, 120, 128, 104, 88, 96, 136, 160, 42, 50, 152, 144 };
    public static PBMsgFutMD DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override PBMsgFutMD DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override PBMsgFutMD ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::PBWrapMsgMDA.Generated.PBMsgMDA.internal__static_PBWrapMsgMDA_PBMsgFutMD__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<PBMsgFutMD, PBMsgFutMD.Builder> InternalFieldAccessors {
      get { return global::PBWrapMsgMDA.Generated.PBMsgMDA.internal__static_PBWrapMsgMDA_PBMsgFutMD__FieldAccessorTable; }
    }
    
    public const int EOFFieldNumber = 1;
    private bool hasEOF;
    private int eOF_;
    public bool HasEOF {
      get { return hasEOF; }
    }
    public int EOF {
      get { return eOF_; }
    }
    
    public const int SymbolFieldNumber = 5;
    private bool hasSymbol;
    private string symbol_ = "";
    public bool HasSymbol {
      get { return hasSymbol; }
    }
    public string Symbol {
      get { return symbol_; }
    }
    
    public const int TimeStampFieldNumber = 6;
    private bool hasTimeStamp;
    private string timeStamp_ = "";
    public bool HasTimeStamp {
      get { return hasTimeStamp; }
    }
    public string TimeStamp {
      get { return timeStamp_; }
    }
    
    public const int AskPrice1FieldNumber = 7;
    private bool hasAskPrice1;
    private long askPrice1_;
    public bool HasAskPrice1 {
      get { return hasAskPrice1; }
    }
    public long AskPrice1 {
      get { return askPrice1_; }
    }
    
    public const int BidPrice1FieldNumber = 9;
    private bool hasBidPrice1;
    private long bidPrice1_;
    public bool HasBidPrice1 {
      get { return hasBidPrice1; }
    }
    public long BidPrice1 {
      get { return bidPrice1_; }
    }
    
    public const int PreClosePriceFieldNumber = 11;
    private bool hasPreClosePrice;
    private long preClosePrice_;
    public bool HasPreClosePrice {
      get { return hasPreClosePrice; }
    }
    public long PreClosePrice {
      get { return preClosePrice_; }
    }
    
    public const int PreSettlePriceFieldNumber = 12;
    private bool hasPreSettlePrice;
    private long preSettlePrice_;
    public bool HasPreSettlePrice {
      get { return hasPreSettlePrice; }
    }
    public long PreSettlePrice {
      get { return preSettlePrice_; }
    }
    
    public const int OpenPriceFieldNumber = 13;
    private bool hasOpenPrice;
    private long openPrice_;
    public bool HasOpenPrice {
      get { return hasOpenPrice; }
    }
    public long OpenPrice {
      get { return openPrice_; }
    }
    
    public const int HighPriceFieldNumber = 14;
    private bool hasHighPrice;
    private long highPrice_;
    public bool HasHighPrice {
      get { return hasHighPrice; }
    }
    public long HighPrice {
      get { return highPrice_; }
    }
    
    public const int LowPriceFieldNumber = 15;
    private bool hasLowPrice;
    private long lowPrice_;
    public bool HasLowPrice {
      get { return hasLowPrice; }
    }
    public long LowPrice {
      get { return lowPrice_; }
    }
    
    public const int MatchPriceFieldNumber = 16;
    private bool hasMatchPrice;
    private long matchPrice_;
    public bool HasMatchPrice {
      get { return hasMatchPrice; }
    }
    public long MatchPrice {
      get { return matchPrice_; }
    }
    
    public const int PriceChangeFieldNumber = 17;
    private bool hasPriceChange;
    private long priceChange_;
    public bool HasPriceChange {
      get { return hasPriceChange; }
    }
    public long PriceChange {
      get { return priceChange_; }
    }
    
    public const int SettlePriceFieldNumber = 20;
    private bool hasSettlePrice;
    private long settlePrice_;
    public bool HasSettlePrice {
      get { return hasSettlePrice; }
    }
    public long SettlePrice {
      get { return settlePrice_; }
    }
    
    public const int HighLimitFieldNumber = 21;
    private bool hasHighLimit;
    private long highLimit_;
    public bool HasHighLimit {
      get { return hasHighLimit; }
    }
    public long HighLimit {
      get { return highLimit_; }
    }
    
    public const int LowLimitFieldNumber = 22;
    private bool hasLowLimit;
    private long lowLimit_;
    public bool HasLowLimit {
      get { return hasLowLimit; }
    }
    public long LowLimit {
      get { return lowLimit_; }
    }
    
    public const int AskSize1FieldNumber = 8;
    private bool hasAskSize1;
    private long askSize1_;
    public bool HasAskSize1 {
      get { return hasAskSize1; }
    }
    public long AskSize1 {
      get { return askSize1_; }
    }
    
    public const int BidSize1FieldNumber = 10;
    private bool hasBidSize1;
    private long bidSize1_;
    public bool HasBidSize1 {
      get { return hasBidSize1; }
    }
    public long BidSize1 {
      get { return bidSize1_; }
    }
    
    public const int VolumeFieldNumber = 18;
    private bool hasVolume;
    private long volume_;
    public bool HasVolume {
      get { return hasVolume; }
    }
    public long Volume {
      get { return volume_; }
    }
    
    public const int TurnoverFieldNumber = 19;
    private bool hasTurnover;
    private long turnover_;
    public bool HasTurnover {
      get { return hasTurnover; }
    }
    public long Turnover {
      get { return turnover_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasEOF) return false;
        if (!hasSymbol) return false;
        if (!hasTimeStamp) return false;
        if (!hasAskPrice1) return false;
        if (!hasBidPrice1) return false;
        if (!hasPreClosePrice) return false;
        if (!hasPreSettlePrice) return false;
        if (!hasOpenPrice) return false;
        if (!hasHighPrice) return false;
        if (!hasLowPrice) return false;
        if (!hasMatchPrice) return false;
        if (!hasPriceChange) return false;
        if (!hasSettlePrice) return false;
        if (!hasHighLimit) return false;
        if (!hasLowLimit) return false;
        if (!hasAskSize1) return false;
        if (!hasBidSize1) return false;
        if (!hasVolume) return false;
        if (!hasTurnover) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _pBMsgFutMDFieldNames;
      if (hasEOF) {
        output.WriteInt32(1, field_names[0], EOF);
      }
      if (hasSymbol) {
        output.WriteString(5, field_names[15], Symbol);
      }
      if (hasTimeStamp) {
        output.WriteString(6, field_names[16], TimeStamp);
      }
      if (hasAskPrice1) {
        output.WriteInt64(7, field_names[1], AskPrice1);
      }
      if (hasAskSize1) {
        output.WriteInt64(8, field_names[2], AskSize1);
      }
      if (hasBidPrice1) {
        output.WriteInt64(9, field_names[3], BidPrice1);
      }
      if (hasBidSize1) {
        output.WriteInt64(10, field_names[4], BidSize1);
      }
      if (hasPreClosePrice) {
        output.WriteInt64(11, field_names[11], PreClosePrice);
      }
      if (hasPreSettlePrice) {
        output.WriteInt64(12, field_names[12], PreSettlePrice);
      }
      if (hasOpenPrice) {
        output.WriteInt64(13, field_names[10], OpenPrice);
      }
      if (hasHighPrice) {
        output.WriteInt64(14, field_names[6], HighPrice);
      }
      if (hasLowPrice) {
        output.WriteInt64(15, field_names[8], LowPrice);
      }
      if (hasMatchPrice) {
        output.WriteInt64(16, field_names[9], MatchPrice);
      }
      if (hasPriceChange) {
        output.WriteInt64(17, field_names[13], PriceChange);
      }
      if (hasVolume) {
        output.WriteInt64(18, field_names[18], Volume);
      }
      if (hasTurnover) {
        output.WriteInt64(19, field_names[17], Turnover);
      }
      if (hasSettlePrice) {
        output.WriteInt64(20, field_names[14], SettlePrice);
      }
      if (hasHighLimit) {
        output.WriteInt64(21, field_names[5], HighLimit);
      }
      if (hasLowLimit) {
        output.WriteInt64(22, field_names[7], LowLimit);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasEOF) {
          size += pb::CodedOutputStream.ComputeInt32Size(1, EOF);
        }
        if (hasSymbol) {
          size += pb::CodedOutputStream.ComputeStringSize(5, Symbol);
        }
        if (hasTimeStamp) {
          size += pb::CodedOutputStream.ComputeStringSize(6, TimeStamp);
        }
        if (hasAskPrice1) {
          size += pb::CodedOutputStream.ComputeInt64Size(7, AskPrice1);
        }
        if (hasBidPrice1) {
          size += pb::CodedOutputStream.ComputeInt64Size(9, BidPrice1);
        }
        if (hasPreClosePrice) {
          size += pb::CodedOutputStream.ComputeInt64Size(11, PreClosePrice);
        }
        if (hasPreSettlePrice) {
          size += pb::CodedOutputStream.ComputeInt64Size(12, PreSettlePrice);
        }
        if (hasOpenPrice) {
          size += pb::CodedOutputStream.ComputeInt64Size(13, OpenPrice);
        }
        if (hasHighPrice) {
          size += pb::CodedOutputStream.ComputeInt64Size(14, HighPrice);
        }
        if (hasLowPrice) {
          size += pb::CodedOutputStream.ComputeInt64Size(15, LowPrice);
        }
        if (hasMatchPrice) {
          size += pb::CodedOutputStream.ComputeInt64Size(16, MatchPrice);
        }
        if (hasPriceChange) {
          size += pb::CodedOutputStream.ComputeInt64Size(17, PriceChange);
        }
        if (hasSettlePrice) {
          size += pb::CodedOutputStream.ComputeInt64Size(20, SettlePrice);
        }
        if (hasHighLimit) {
          size += pb::CodedOutputStream.ComputeInt64Size(21, HighLimit);
        }
        if (hasLowLimit) {
          size += pb::CodedOutputStream.ComputeInt64Size(22, LowLimit);
        }
        if (hasAskSize1) {
          size += pb::CodedOutputStream.ComputeInt64Size(8, AskSize1);
        }
        if (hasBidSize1) {
          size += pb::CodedOutputStream.ComputeInt64Size(10, BidSize1);
        }
        if (hasVolume) {
          size += pb::CodedOutputStream.ComputeInt64Size(18, Volume);
        }
        if (hasTurnover) {
          size += pb::CodedOutputStream.ComputeInt64Size(19, Turnover);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static PBMsgFutMD ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static PBMsgFutMD ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static PBMsgFutMD ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static PBMsgFutMD ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static PBMsgFutMD ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static PBMsgFutMD ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static PBMsgFutMD ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static PBMsgFutMD ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static PBMsgFutMD ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static PBMsgFutMD ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private PBMsgFutMD MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(PBMsgFutMD prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<PBMsgFutMD, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(PBMsgFutMD cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private PBMsgFutMD result;
      
      private PBMsgFutMD PrepareBuilder() {
        if (resultIsReadOnly) {
          PBMsgFutMD original = result;
          result = new PBMsgFutMD();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override PBMsgFutMD MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::PBWrapMsgMDA.PBMsgFutMD.Descriptor; }
      }
      
      public override PBMsgFutMD DefaultInstanceForType {
        get { return global::PBWrapMsgMDA.PBMsgFutMD.DefaultInstance; }
      }
      
      public override PBMsgFutMD BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is PBMsgFutMD) {
          return MergeFrom((PBMsgFutMD) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(PBMsgFutMD other) {
        if (other == global::PBWrapMsgMDA.PBMsgFutMD.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasEOF) {
          EOF = other.EOF;
        }
        if (other.HasSymbol) {
          Symbol = other.Symbol;
        }
        if (other.HasTimeStamp) {
          TimeStamp = other.TimeStamp;
        }
        if (other.HasAskPrice1) {
          AskPrice1 = other.AskPrice1;
        }
        if (other.HasBidPrice1) {
          BidPrice1 = other.BidPrice1;
        }
        if (other.HasPreClosePrice) {
          PreClosePrice = other.PreClosePrice;
        }
        if (other.HasPreSettlePrice) {
          PreSettlePrice = other.PreSettlePrice;
        }
        if (other.HasOpenPrice) {
          OpenPrice = other.OpenPrice;
        }
        if (other.HasHighPrice) {
          HighPrice = other.HighPrice;
        }
        if (other.HasLowPrice) {
          LowPrice = other.LowPrice;
        }
        if (other.HasMatchPrice) {
          MatchPrice = other.MatchPrice;
        }
        if (other.HasPriceChange) {
          PriceChange = other.PriceChange;
        }
        if (other.HasSettlePrice) {
          SettlePrice = other.SettlePrice;
        }
        if (other.HasHighLimit) {
          HighLimit = other.HighLimit;
        }
        if (other.HasLowLimit) {
          LowLimit = other.LowLimit;
        }
        if (other.HasAskSize1) {
          AskSize1 = other.AskSize1;
        }
        if (other.HasBidSize1) {
          BidSize1 = other.BidSize1;
        }
        if (other.HasVolume) {
          Volume = other.Volume;
        }
        if (other.HasTurnover) {
          Turnover = other.Turnover;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_pBMsgFutMDFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _pBMsgFutMDFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasEOF = input.ReadInt32(ref result.eOF_);
              break;
            }
            case 42: {
              result.hasSymbol = input.ReadString(ref result.symbol_);
              break;
            }
            case 50: {
              result.hasTimeStamp = input.ReadString(ref result.timeStamp_);
              break;
            }
            case 56: {
              result.hasAskPrice1 = input.ReadInt64(ref result.askPrice1_);
              break;
            }
            case 64: {
              result.hasAskSize1 = input.ReadInt64(ref result.askSize1_);
              break;
            }
            case 72: {
              result.hasBidPrice1 = input.ReadInt64(ref result.bidPrice1_);
              break;
            }
            case 80: {
              result.hasBidSize1 = input.ReadInt64(ref result.bidSize1_);
              break;
            }
            case 88: {
              result.hasPreClosePrice = input.ReadInt64(ref result.preClosePrice_);
              break;
            }
            case 96: {
              result.hasPreSettlePrice = input.ReadInt64(ref result.preSettlePrice_);
              break;
            }
            case 104: {
              result.hasOpenPrice = input.ReadInt64(ref result.openPrice_);
              break;
            }
            case 112: {
              result.hasHighPrice = input.ReadInt64(ref result.highPrice_);
              break;
            }
            case 120: {
              result.hasLowPrice = input.ReadInt64(ref result.lowPrice_);
              break;
            }
            case 128: {
              result.hasMatchPrice = input.ReadInt64(ref result.matchPrice_);
              break;
            }
            case 136: {
              result.hasPriceChange = input.ReadInt64(ref result.priceChange_);
              break;
            }
            case 144: {
              result.hasVolume = input.ReadInt64(ref result.volume_);
              break;
            }
            case 152: {
              result.hasTurnover = input.ReadInt64(ref result.turnover_);
              break;
            }
            case 160: {
              result.hasSettlePrice = input.ReadInt64(ref result.settlePrice_);
              break;
            }
            case 168: {
              result.hasHighLimit = input.ReadInt64(ref result.highLimit_);
              break;
            }
            case 176: {
              result.hasLowLimit = input.ReadInt64(ref result.lowLimit_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasEOF {
        get { return result.hasEOF; }
      }
      public int EOF {
        get { return result.EOF; }
        set { SetEOF(value); }
      }
      public Builder SetEOF(int value) {
        PrepareBuilder();
        result.hasEOF = true;
        result.eOF_ = value;
        return this;
      }
      public Builder ClearEOF() {
        PrepareBuilder();
        result.hasEOF = false;
        result.eOF_ = 0;
        return this;
      }
      
      public bool HasSymbol {
        get { return result.hasSymbol; }
      }
      public string Symbol {
        get { return result.Symbol; }
        set { SetSymbol(value); }
      }
      public Builder SetSymbol(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSymbol = true;
        result.symbol_ = value;
        return this;
      }
      public Builder ClearSymbol() {
        PrepareBuilder();
        result.hasSymbol = false;
        result.symbol_ = "";
        return this;
      }
      
      public bool HasTimeStamp {
        get { return result.hasTimeStamp; }
      }
      public string TimeStamp {
        get { return result.TimeStamp; }
        set { SetTimeStamp(value); }
      }
      public Builder SetTimeStamp(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTimeStamp = true;
        result.timeStamp_ = value;
        return this;
      }
      public Builder ClearTimeStamp() {
        PrepareBuilder();
        result.hasTimeStamp = false;
        result.timeStamp_ = "";
        return this;
      }
      
      public bool HasAskPrice1 {
        get { return result.hasAskPrice1; }
      }
      public long AskPrice1 {
        get { return result.AskPrice1; }
        set { SetAskPrice1(value); }
      }
      public Builder SetAskPrice1(long value) {
        PrepareBuilder();
        result.hasAskPrice1 = true;
        result.askPrice1_ = value;
        return this;
      }
      public Builder ClearAskPrice1() {
        PrepareBuilder();
        result.hasAskPrice1 = false;
        result.askPrice1_ = 0L;
        return this;
      }
      
      public bool HasBidPrice1 {
        get { return result.hasBidPrice1; }
      }
      public long BidPrice1 {
        get { return result.BidPrice1; }
        set { SetBidPrice1(value); }
      }
      public Builder SetBidPrice1(long value) {
        PrepareBuilder();
        result.hasBidPrice1 = true;
        result.bidPrice1_ = value;
        return this;
      }
      public Builder ClearBidPrice1() {
        PrepareBuilder();
        result.hasBidPrice1 = false;
        result.bidPrice1_ = 0L;
        return this;
      }
      
      public bool HasPreClosePrice {
        get { return result.hasPreClosePrice; }
      }
      public long PreClosePrice {
        get { return result.PreClosePrice; }
        set { SetPreClosePrice(value); }
      }
      public Builder SetPreClosePrice(long value) {
        PrepareBuilder();
        result.hasPreClosePrice = true;
        result.preClosePrice_ = value;
        return this;
      }
      public Builder ClearPreClosePrice() {
        PrepareBuilder();
        result.hasPreClosePrice = false;
        result.preClosePrice_ = 0L;
        return this;
      }
      
      public bool HasPreSettlePrice {
        get { return result.hasPreSettlePrice; }
      }
      public long PreSettlePrice {
        get { return result.PreSettlePrice; }
        set { SetPreSettlePrice(value); }
      }
      public Builder SetPreSettlePrice(long value) {
        PrepareBuilder();
        result.hasPreSettlePrice = true;
        result.preSettlePrice_ = value;
        return this;
      }
      public Builder ClearPreSettlePrice() {
        PrepareBuilder();
        result.hasPreSettlePrice = false;
        result.preSettlePrice_ = 0L;
        return this;
      }
      
      public bool HasOpenPrice {
        get { return result.hasOpenPrice; }
      }
      public long OpenPrice {
        get { return result.OpenPrice; }
        set { SetOpenPrice(value); }
      }
      public Builder SetOpenPrice(long value) {
        PrepareBuilder();
        result.hasOpenPrice = true;
        result.openPrice_ = value;
        return this;
      }
      public Builder ClearOpenPrice() {
        PrepareBuilder();
        result.hasOpenPrice = false;
        result.openPrice_ = 0L;
        return this;
      }
      
      public bool HasHighPrice {
        get { return result.hasHighPrice; }
      }
      public long HighPrice {
        get { return result.HighPrice; }
        set { SetHighPrice(value); }
      }
      public Builder SetHighPrice(long value) {
        PrepareBuilder();
        result.hasHighPrice = true;
        result.highPrice_ = value;
        return this;
      }
      public Builder ClearHighPrice() {
        PrepareBuilder();
        result.hasHighPrice = false;
        result.highPrice_ = 0L;
        return this;
      }
      
      public bool HasLowPrice {
        get { return result.hasLowPrice; }
      }
      public long LowPrice {
        get { return result.LowPrice; }
        set { SetLowPrice(value); }
      }
      public Builder SetLowPrice(long value) {
        PrepareBuilder();
        result.hasLowPrice = true;
        result.lowPrice_ = value;
        return this;
      }
      public Builder ClearLowPrice() {
        PrepareBuilder();
        result.hasLowPrice = false;
        result.lowPrice_ = 0L;
        return this;
      }
      
      public bool HasMatchPrice {
        get { return result.hasMatchPrice; }
      }
      public long MatchPrice {
        get { return result.MatchPrice; }
        set { SetMatchPrice(value); }
      }
      public Builder SetMatchPrice(long value) {
        PrepareBuilder();
        result.hasMatchPrice = true;
        result.matchPrice_ = value;
        return this;
      }
      public Builder ClearMatchPrice() {
        PrepareBuilder();
        result.hasMatchPrice = false;
        result.matchPrice_ = 0L;
        return this;
      }
      
      public bool HasPriceChange {
        get { return result.hasPriceChange; }
      }
      public long PriceChange {
        get { return result.PriceChange; }
        set { SetPriceChange(value); }
      }
      public Builder SetPriceChange(long value) {
        PrepareBuilder();
        result.hasPriceChange = true;
        result.priceChange_ = value;
        return this;
      }
      public Builder ClearPriceChange() {
        PrepareBuilder();
        result.hasPriceChange = false;
        result.priceChange_ = 0L;
        return this;
      }
      
      public bool HasSettlePrice {
        get { return result.hasSettlePrice; }
      }
      public long SettlePrice {
        get { return result.SettlePrice; }
        set { SetSettlePrice(value); }
      }
      public Builder SetSettlePrice(long value) {
        PrepareBuilder();
        result.hasSettlePrice = true;
        result.settlePrice_ = value;
        return this;
      }
      public Builder ClearSettlePrice() {
        PrepareBuilder();
        result.hasSettlePrice = false;
        result.settlePrice_ = 0L;
        return this;
      }
      
      public bool HasHighLimit {
        get { return result.hasHighLimit; }
      }
      public long HighLimit {
        get { return result.HighLimit; }
        set { SetHighLimit(value); }
      }
      public Builder SetHighLimit(long value) {
        PrepareBuilder();
        result.hasHighLimit = true;
        result.highLimit_ = value;
        return this;
      }
      public Builder ClearHighLimit() {
        PrepareBuilder();
        result.hasHighLimit = false;
        result.highLimit_ = 0L;
        return this;
      }
      
      public bool HasLowLimit {
        get { return result.hasLowLimit; }
      }
      public long LowLimit {
        get { return result.LowLimit; }
        set { SetLowLimit(value); }
      }
      public Builder SetLowLimit(long value) {
        PrepareBuilder();
        result.hasLowLimit = true;
        result.lowLimit_ = value;
        return this;
      }
      public Builder ClearLowLimit() {
        PrepareBuilder();
        result.hasLowLimit = false;
        result.lowLimit_ = 0L;
        return this;
      }
      
      public bool HasAskSize1 {
        get { return result.hasAskSize1; }
      }
      public long AskSize1 {
        get { return result.AskSize1; }
        set { SetAskSize1(value); }
      }
      public Builder SetAskSize1(long value) {
        PrepareBuilder();
        result.hasAskSize1 = true;
        result.askSize1_ = value;
        return this;
      }
      public Builder ClearAskSize1() {
        PrepareBuilder();
        result.hasAskSize1 = false;
        result.askSize1_ = 0L;
        return this;
      }
      
      public bool HasBidSize1 {
        get { return result.hasBidSize1; }
      }
      public long BidSize1 {
        get { return result.BidSize1; }
        set { SetBidSize1(value); }
      }
      public Builder SetBidSize1(long value) {
        PrepareBuilder();
        result.hasBidSize1 = true;
        result.bidSize1_ = value;
        return this;
      }
      public Builder ClearBidSize1() {
        PrepareBuilder();
        result.hasBidSize1 = false;
        result.bidSize1_ = 0L;
        return this;
      }
      
      public bool HasVolume {
        get { return result.hasVolume; }
      }
      public long Volume {
        get { return result.Volume; }
        set { SetVolume(value); }
      }
      public Builder SetVolume(long value) {
        PrepareBuilder();
        result.hasVolume = true;
        result.volume_ = value;
        return this;
      }
      public Builder ClearVolume() {
        PrepareBuilder();
        result.hasVolume = false;
        result.volume_ = 0L;
        return this;
      }
      
      public bool HasTurnover {
        get { return result.hasTurnover; }
      }
      public long Turnover {
        get { return result.Turnover; }
        set { SetTurnover(value); }
      }
      public Builder SetTurnover(long value) {
        PrepareBuilder();
        result.hasTurnover = true;
        result.turnover_ = value;
        return this;
      }
      public Builder ClearTurnover() {
        PrepareBuilder();
        result.hasTurnover = false;
        result.turnover_ = 0L;
        return this;
      }
    }
    static PBMsgFutMD() {
      object.ReferenceEquals(global::PBWrapMsgMDA.Generated.PBMsgMDA.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class PBMsgMDAMD : pb::GeneratedMessage<PBMsgMDAMD, PBMsgMDAMD.Builder> {
    private PBMsgMDAMD() { }
    private static readonly PBMsgMDAMD defaultInstance = new PBMsgMDAMD().MakeReadOnly();
    private static readonly string[] _pBMsgMDAMDFieldNames = new string[] { "EOF", "askPrice1", "askPrice2", "askPrice3", "askPrice4", "askPrice5", "askSize1", "askSize2", "askSize3", "askSize4", "askSize5", "bidPrice1", "bidPrice2", "bidPrice3", "bidPrice4", "bidPrice5", "bidSize1", "bidSize2", "bidSize3", "bidSize4", "bidSize5", "dataType", "highLimit", "highValue", "latestIndex", "lowLimit", "lowValue", "matchPrice", "openValue", "preCloseValue", "preSettlePrice", "priceChange", "requestSymbolList", "settlePrice", "symbol", "timeStamp", "turnover", "volume" };
    private static readonly uint[] _pBMsgMDAMDFieldTags = new uint[] { 8, 200, 184, 168, 152, 136, 208, 192, 176, 160, 144, 216, 232, 248, 264, 280, 224, 240, 256, 272, 288, 48, 320, 104, 120, 328, 112, 128, 80, 72, 296, 304, 42, 312, 58, 66, 88, 96 };
    public static PBMsgMDAMD DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override PBMsgMDAMD DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override PBMsgMDAMD ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::PBWrapMsgMDA.Generated.PBMsgMDA.internal__static_PBWrapMsgMDA_PBMsgMDAMD__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<PBMsgMDAMD, PBMsgMDAMD.Builder> InternalFieldAccessors {
      get { return global::PBWrapMsgMDA.Generated.PBMsgMDA.internal__static_PBWrapMsgMDA_PBMsgMDAMD__FieldAccessorTable; }
    }
    
    public const int EOFFieldNumber = 1;
    private bool hasEOF;
    private int eOF_;
    public bool HasEOF {
      get { return hasEOF; }
    }
    public int EOF {
      get { return eOF_; }
    }
    
    public const int RequestSymbolListFieldNumber = 5;
    private pbc::PopsicleList<string> requestSymbolList_ = new pbc::PopsicleList<string>();
    public scg::IList<string> RequestSymbolListList {
      get { return pbc::Lists.AsReadOnly(requestSymbolList_); }
    }
    public int RequestSymbolListCount {
      get { return requestSymbolList_.Count; }
    }
    public string GetRequestSymbolList(int index) {
      return requestSymbolList_[index];
    }
    
    public const int DataTypeFieldNumber = 6;
    private bool hasDataType;
    private global::PBWrapMsgMDA.DataType dataType_ = global::PBWrapMsgMDA.DataType.EQUITY;
    public bool HasDataType {
      get { return hasDataType; }
    }
    public global::PBWrapMsgMDA.DataType DataType {
      get { return dataType_; }
    }
    
    public const int SymbolFieldNumber = 7;
    private bool hasSymbol;
    private string symbol_ = "";
    public bool HasSymbol {
      get { return hasSymbol; }
    }
    public string Symbol {
      get { return symbol_; }
    }
    
    public const int TimeStampFieldNumber = 8;
    private bool hasTimeStamp;
    private string timeStamp_ = "";
    public bool HasTimeStamp {
      get { return hasTimeStamp; }
    }
    public string TimeStamp {
      get { return timeStamp_; }
    }
    
    public const int PreCloseValueFieldNumber = 9;
    private bool hasPreCloseValue;
    private long preCloseValue_;
    public bool HasPreCloseValue {
      get { return hasPreCloseValue; }
    }
    public long PreCloseValue {
      get { return preCloseValue_; }
    }
    
    public const int OpenValueFieldNumber = 10;
    private bool hasOpenValue;
    private long openValue_;
    public bool HasOpenValue {
      get { return hasOpenValue; }
    }
    public long OpenValue {
      get { return openValue_; }
    }
    
    public const int TurnoverFieldNumber = 11;
    private bool hasTurnover;
    private long turnover_;
    public bool HasTurnover {
      get { return hasTurnover; }
    }
    public long Turnover {
      get { return turnover_; }
    }
    
    public const int VolumeFieldNumber = 12;
    private bool hasVolume;
    private long volume_;
    public bool HasVolume {
      get { return hasVolume; }
    }
    public long Volume {
      get { return volume_; }
    }
    
    public const int HighValueFieldNumber = 13;
    private bool hasHighValue;
    private long highValue_;
    public bool HasHighValue {
      get { return hasHighValue; }
    }
    public long HighValue {
      get { return highValue_; }
    }
    
    public const int LowValueFieldNumber = 14;
    private bool hasLowValue;
    private long lowValue_;
    public bool HasLowValue {
      get { return hasLowValue; }
    }
    public long LowValue {
      get { return lowValue_; }
    }
    
    public const int LatestIndexFieldNumber = 15;
    private bool hasLatestIndex;
    private long latestIndex_;
    public bool HasLatestIndex {
      get { return hasLatestIndex; }
    }
    public long LatestIndex {
      get { return latestIndex_; }
    }
    
    public const int MatchPriceFieldNumber = 16;
    private bool hasMatchPrice;
    private long matchPrice_;
    public bool HasMatchPrice {
      get { return hasMatchPrice; }
    }
    public long MatchPrice {
      get { return matchPrice_; }
    }
    
    public const int AskPrice5FieldNumber = 17;
    private bool hasAskPrice5;
    private long askPrice5_;
    public bool HasAskPrice5 {
      get { return hasAskPrice5; }
    }
    public long AskPrice5 {
      get { return askPrice5_; }
    }
    
    public const int AskSize5FieldNumber = 18;
    private bool hasAskSize5;
    private long askSize5_;
    public bool HasAskSize5 {
      get { return hasAskSize5; }
    }
    public long AskSize5 {
      get { return askSize5_; }
    }
    
    public const int AskPrice4FieldNumber = 19;
    private bool hasAskPrice4;
    private long askPrice4_;
    public bool HasAskPrice4 {
      get { return hasAskPrice4; }
    }
    public long AskPrice4 {
      get { return askPrice4_; }
    }
    
    public const int AskSize4FieldNumber = 20;
    private bool hasAskSize4;
    private long askSize4_;
    public bool HasAskSize4 {
      get { return hasAskSize4; }
    }
    public long AskSize4 {
      get { return askSize4_; }
    }
    
    public const int AskPrice3FieldNumber = 21;
    private bool hasAskPrice3;
    private long askPrice3_;
    public bool HasAskPrice3 {
      get { return hasAskPrice3; }
    }
    public long AskPrice3 {
      get { return askPrice3_; }
    }
    
    public const int AskSize3FieldNumber = 22;
    private bool hasAskSize3;
    private long askSize3_;
    public bool HasAskSize3 {
      get { return hasAskSize3; }
    }
    public long AskSize3 {
      get { return askSize3_; }
    }
    
    public const int AskPrice2FieldNumber = 23;
    private bool hasAskPrice2;
    private long askPrice2_;
    public bool HasAskPrice2 {
      get { return hasAskPrice2; }
    }
    public long AskPrice2 {
      get { return askPrice2_; }
    }
    
    public const int AskSize2FieldNumber = 24;
    private bool hasAskSize2;
    private long askSize2_;
    public bool HasAskSize2 {
      get { return hasAskSize2; }
    }
    public long AskSize2 {
      get { return askSize2_; }
    }
    
    public const int AskPrice1FieldNumber = 25;
    private bool hasAskPrice1;
    private long askPrice1_;
    public bool HasAskPrice1 {
      get { return hasAskPrice1; }
    }
    public long AskPrice1 {
      get { return askPrice1_; }
    }
    
    public const int AskSize1FieldNumber = 26;
    private bool hasAskSize1;
    private long askSize1_;
    public bool HasAskSize1 {
      get { return hasAskSize1; }
    }
    public long AskSize1 {
      get { return askSize1_; }
    }
    
    public const int BidPrice1FieldNumber = 27;
    private bool hasBidPrice1;
    private long bidPrice1_;
    public bool HasBidPrice1 {
      get { return hasBidPrice1; }
    }
    public long BidPrice1 {
      get { return bidPrice1_; }
    }
    
    public const int BidSize1FieldNumber = 28;
    private bool hasBidSize1;
    private long bidSize1_;
    public bool HasBidSize1 {
      get { return hasBidSize1; }
    }
    public long BidSize1 {
      get { return bidSize1_; }
    }
    
    public const int BidPrice2FieldNumber = 29;
    private bool hasBidPrice2;
    private long bidPrice2_;
    public bool HasBidPrice2 {
      get { return hasBidPrice2; }
    }
    public long BidPrice2 {
      get { return bidPrice2_; }
    }
    
    public const int BidSize2FieldNumber = 30;
    private bool hasBidSize2;
    private long bidSize2_;
    public bool HasBidSize2 {
      get { return hasBidSize2; }
    }
    public long BidSize2 {
      get { return bidSize2_; }
    }
    
    public const int BidPrice3FieldNumber = 31;
    private bool hasBidPrice3;
    private long bidPrice3_;
    public bool HasBidPrice3 {
      get { return hasBidPrice3; }
    }
    public long BidPrice3 {
      get { return bidPrice3_; }
    }
    
    public const int BidSize3FieldNumber = 32;
    private bool hasBidSize3;
    private long bidSize3_;
    public bool HasBidSize3 {
      get { return hasBidSize3; }
    }
    public long BidSize3 {
      get { return bidSize3_; }
    }
    
    public const int BidPrice4FieldNumber = 33;
    private bool hasBidPrice4;
    private long bidPrice4_;
    public bool HasBidPrice4 {
      get { return hasBidPrice4; }
    }
    public long BidPrice4 {
      get { return bidPrice4_; }
    }
    
    public const int BidSize4FieldNumber = 34;
    private bool hasBidSize4;
    private long bidSize4_;
    public bool HasBidSize4 {
      get { return hasBidSize4; }
    }
    public long BidSize4 {
      get { return bidSize4_; }
    }
    
    public const int BidPrice5FieldNumber = 35;
    private bool hasBidPrice5;
    private long bidPrice5_;
    public bool HasBidPrice5 {
      get { return hasBidPrice5; }
    }
    public long BidPrice5 {
      get { return bidPrice5_; }
    }
    
    public const int BidSize5FieldNumber = 36;
    private bool hasBidSize5;
    private long bidSize5_;
    public bool HasBidSize5 {
      get { return hasBidSize5; }
    }
    public long BidSize5 {
      get { return bidSize5_; }
    }
    
    public const int PreSettlePriceFieldNumber = 37;
    private bool hasPreSettlePrice;
    private long preSettlePrice_;
    public bool HasPreSettlePrice {
      get { return hasPreSettlePrice; }
    }
    public long PreSettlePrice {
      get { return preSettlePrice_; }
    }
    
    public const int PriceChangeFieldNumber = 38;
    private bool hasPriceChange;
    private long priceChange_;
    public bool HasPriceChange {
      get { return hasPriceChange; }
    }
    public long PriceChange {
      get { return priceChange_; }
    }
    
    public const int SettlePriceFieldNumber = 39;
    private bool hasSettlePrice;
    private long settlePrice_;
    public bool HasSettlePrice {
      get { return hasSettlePrice; }
    }
    public long SettlePrice {
      get { return settlePrice_; }
    }
    
    public const int HighLimitFieldNumber = 40;
    private bool hasHighLimit;
    private long highLimit_;
    public bool HasHighLimit {
      get { return hasHighLimit; }
    }
    public long HighLimit {
      get { return highLimit_; }
    }
    
    public const int LowLimitFieldNumber = 41;
    private bool hasLowLimit;
    private long lowLimit_;
    public bool HasLowLimit {
      get { return hasLowLimit; }
    }
    public long LowLimit {
      get { return lowLimit_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasEOF) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _pBMsgMDAMDFieldNames;
      if (hasEOF) {
        output.WriteInt32(1, field_names[0], EOF);
      }
      if (requestSymbolList_.Count > 0) {
        output.WriteStringArray(5, field_names[32], requestSymbolList_);
      }
      if (hasDataType) {
        output.WriteEnum(6, field_names[21], (int) DataType, DataType);
      }
      if (hasSymbol) {
        output.WriteString(7, field_names[34], Symbol);
      }
      if (hasTimeStamp) {
        output.WriteString(8, field_names[35], TimeStamp);
      }
      if (hasPreCloseValue) {
        output.WriteInt64(9, field_names[29], PreCloseValue);
      }
      if (hasOpenValue) {
        output.WriteInt64(10, field_names[28], OpenValue);
      }
      if (hasTurnover) {
        output.WriteInt64(11, field_names[36], Turnover);
      }
      if (hasVolume) {
        output.WriteInt64(12, field_names[37], Volume);
      }
      if (hasHighValue) {
        output.WriteInt64(13, field_names[23], HighValue);
      }
      if (hasLowValue) {
        output.WriteInt64(14, field_names[26], LowValue);
      }
      if (hasLatestIndex) {
        output.WriteInt64(15, field_names[24], LatestIndex);
      }
      if (hasMatchPrice) {
        output.WriteInt64(16, field_names[27], MatchPrice);
      }
      if (hasAskPrice5) {
        output.WriteInt64(17, field_names[5], AskPrice5);
      }
      if (hasAskSize5) {
        output.WriteInt64(18, field_names[10], AskSize5);
      }
      if (hasAskPrice4) {
        output.WriteInt64(19, field_names[4], AskPrice4);
      }
      if (hasAskSize4) {
        output.WriteInt64(20, field_names[9], AskSize4);
      }
      if (hasAskPrice3) {
        output.WriteInt64(21, field_names[3], AskPrice3);
      }
      if (hasAskSize3) {
        output.WriteInt64(22, field_names[8], AskSize3);
      }
      if (hasAskPrice2) {
        output.WriteInt64(23, field_names[2], AskPrice2);
      }
      if (hasAskSize2) {
        output.WriteInt64(24, field_names[7], AskSize2);
      }
      if (hasAskPrice1) {
        output.WriteInt64(25, field_names[1], AskPrice1);
      }
      if (hasAskSize1) {
        output.WriteInt64(26, field_names[6], AskSize1);
      }
      if (hasBidPrice1) {
        output.WriteInt64(27, field_names[11], BidPrice1);
      }
      if (hasBidSize1) {
        output.WriteInt64(28, field_names[16], BidSize1);
      }
      if (hasBidPrice2) {
        output.WriteInt64(29, field_names[12], BidPrice2);
      }
      if (hasBidSize2) {
        output.WriteInt64(30, field_names[17], BidSize2);
      }
      if (hasBidPrice3) {
        output.WriteInt64(31, field_names[13], BidPrice3);
      }
      if (hasBidSize3) {
        output.WriteInt64(32, field_names[18], BidSize3);
      }
      if (hasBidPrice4) {
        output.WriteInt64(33, field_names[14], BidPrice4);
      }
      if (hasBidSize4) {
        output.WriteInt64(34, field_names[19], BidSize4);
      }
      if (hasBidPrice5) {
        output.WriteInt64(35, field_names[15], BidPrice5);
      }
      if (hasBidSize5) {
        output.WriteInt64(36, field_names[20], BidSize5);
      }
      if (hasPreSettlePrice) {
        output.WriteInt64(37, field_names[30], PreSettlePrice);
      }
      if (hasPriceChange) {
        output.WriteInt64(38, field_names[31], PriceChange);
      }
      if (hasSettlePrice) {
        output.WriteInt64(39, field_names[33], SettlePrice);
      }
      if (hasHighLimit) {
        output.WriteInt64(40, field_names[22], HighLimit);
      }
      if (hasLowLimit) {
        output.WriteInt64(41, field_names[25], LowLimit);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasEOF) {
          size += pb::CodedOutputStream.ComputeInt32Size(1, EOF);
        }
        {
          int dataSize = 0;
          foreach (string element in RequestSymbolListList) {
            dataSize += pb::CodedOutputStream.ComputeStringSizeNoTag(element);
          }
          size += dataSize;
          size += 1 * requestSymbolList_.Count;
        }
        if (hasDataType) {
          size += pb::CodedOutputStream.ComputeEnumSize(6, (int) DataType);
        }
        if (hasSymbol) {
          size += pb::CodedOutputStream.ComputeStringSize(7, Symbol);
        }
        if (hasTimeStamp) {
          size += pb::CodedOutputStream.ComputeStringSize(8, TimeStamp);
        }
        if (hasPreCloseValue) {
          size += pb::CodedOutputStream.ComputeInt64Size(9, PreCloseValue);
        }
        if (hasOpenValue) {
          size += pb::CodedOutputStream.ComputeInt64Size(10, OpenValue);
        }
        if (hasTurnover) {
          size += pb::CodedOutputStream.ComputeInt64Size(11, Turnover);
        }
        if (hasVolume) {
          size += pb::CodedOutputStream.ComputeInt64Size(12, Volume);
        }
        if (hasHighValue) {
          size += pb::CodedOutputStream.ComputeInt64Size(13, HighValue);
        }
        if (hasLowValue) {
          size += pb::CodedOutputStream.ComputeInt64Size(14, LowValue);
        }
        if (hasLatestIndex) {
          size += pb::CodedOutputStream.ComputeInt64Size(15, LatestIndex);
        }
        if (hasMatchPrice) {
          size += pb::CodedOutputStream.ComputeInt64Size(16, MatchPrice);
        }
        if (hasAskPrice5) {
          size += pb::CodedOutputStream.ComputeInt64Size(17, AskPrice5);
        }
        if (hasAskSize5) {
          size += pb::CodedOutputStream.ComputeInt64Size(18, AskSize5);
        }
        if (hasAskPrice4) {
          size += pb::CodedOutputStream.ComputeInt64Size(19, AskPrice4);
        }
        if (hasAskSize4) {
          size += pb::CodedOutputStream.ComputeInt64Size(20, AskSize4);
        }
        if (hasAskPrice3) {
          size += pb::CodedOutputStream.ComputeInt64Size(21, AskPrice3);
        }
        if (hasAskSize3) {
          size += pb::CodedOutputStream.ComputeInt64Size(22, AskSize3);
        }
        if (hasAskPrice2) {
          size += pb::CodedOutputStream.ComputeInt64Size(23, AskPrice2);
        }
        if (hasAskSize2) {
          size += pb::CodedOutputStream.ComputeInt64Size(24, AskSize2);
        }
        if (hasAskPrice1) {
          size += pb::CodedOutputStream.ComputeInt64Size(25, AskPrice1);
        }
        if (hasAskSize1) {
          size += pb::CodedOutputStream.ComputeInt64Size(26, AskSize1);
        }
        if (hasBidPrice1) {
          size += pb::CodedOutputStream.ComputeInt64Size(27, BidPrice1);
        }
        if (hasBidSize1) {
          size += pb::CodedOutputStream.ComputeInt64Size(28, BidSize1);
        }
        if (hasBidPrice2) {
          size += pb::CodedOutputStream.ComputeInt64Size(29, BidPrice2);
        }
        if (hasBidSize2) {
          size += pb::CodedOutputStream.ComputeInt64Size(30, BidSize2);
        }
        if (hasBidPrice3) {
          size += pb::CodedOutputStream.ComputeInt64Size(31, BidPrice3);
        }
        if (hasBidSize3) {
          size += pb::CodedOutputStream.ComputeInt64Size(32, BidSize3);
        }
        if (hasBidPrice4) {
          size += pb::CodedOutputStream.ComputeInt64Size(33, BidPrice4);
        }
        if (hasBidSize4) {
          size += pb::CodedOutputStream.ComputeInt64Size(34, BidSize4);
        }
        if (hasBidPrice5) {
          size += pb::CodedOutputStream.ComputeInt64Size(35, BidPrice5);
        }
        if (hasBidSize5) {
          size += pb::CodedOutputStream.ComputeInt64Size(36, BidSize5);
        }
        if (hasPreSettlePrice) {
          size += pb::CodedOutputStream.ComputeInt64Size(37, PreSettlePrice);
        }
        if (hasPriceChange) {
          size += pb::CodedOutputStream.ComputeInt64Size(38, PriceChange);
        }
        if (hasSettlePrice) {
          size += pb::CodedOutputStream.ComputeInt64Size(39, SettlePrice);
        }
        if (hasHighLimit) {
          size += pb::CodedOutputStream.ComputeInt64Size(40, HighLimit);
        }
        if (hasLowLimit) {
          size += pb::CodedOutputStream.ComputeInt64Size(41, LowLimit);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static PBMsgMDAMD ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static PBMsgMDAMD ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static PBMsgMDAMD ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static PBMsgMDAMD ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static PBMsgMDAMD ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static PBMsgMDAMD ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static PBMsgMDAMD ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static PBMsgMDAMD ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static PBMsgMDAMD ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static PBMsgMDAMD ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private PBMsgMDAMD MakeReadOnly() {
      requestSymbolList_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(PBMsgMDAMD prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<PBMsgMDAMD, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(PBMsgMDAMD cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private PBMsgMDAMD result;
      
      private PBMsgMDAMD PrepareBuilder() {
        if (resultIsReadOnly) {
          PBMsgMDAMD original = result;
          result = new PBMsgMDAMD();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override PBMsgMDAMD MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::PBWrapMsgMDA.PBMsgMDAMD.Descriptor; }
      }
      
      public override PBMsgMDAMD DefaultInstanceForType {
        get { return global::PBWrapMsgMDA.PBMsgMDAMD.DefaultInstance; }
      }
      
      public override PBMsgMDAMD BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is PBMsgMDAMD) {
          return MergeFrom((PBMsgMDAMD) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(PBMsgMDAMD other) {
        if (other == global::PBWrapMsgMDA.PBMsgMDAMD.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasEOF) {
          EOF = other.EOF;
        }
        if (other.requestSymbolList_.Count != 0) {
          result.requestSymbolList_.Add(other.requestSymbolList_);
        }
        if (other.HasDataType) {
          DataType = other.DataType;
        }
        if (other.HasSymbol) {
          Symbol = other.Symbol;
        }
        if (other.HasTimeStamp) {
          TimeStamp = other.TimeStamp;
        }
        if (other.HasPreCloseValue) {
          PreCloseValue = other.PreCloseValue;
        }
        if (other.HasOpenValue) {
          OpenValue = other.OpenValue;
        }
        if (other.HasTurnover) {
          Turnover = other.Turnover;
        }
        if (other.HasVolume) {
          Volume = other.Volume;
        }
        if (other.HasHighValue) {
          HighValue = other.HighValue;
        }
        if (other.HasLowValue) {
          LowValue = other.LowValue;
        }
        if (other.HasLatestIndex) {
          LatestIndex = other.LatestIndex;
        }
        if (other.HasMatchPrice) {
          MatchPrice = other.MatchPrice;
        }
        if (other.HasAskPrice5) {
          AskPrice5 = other.AskPrice5;
        }
        if (other.HasAskSize5) {
          AskSize5 = other.AskSize5;
        }
        if (other.HasAskPrice4) {
          AskPrice4 = other.AskPrice4;
        }
        if (other.HasAskSize4) {
          AskSize4 = other.AskSize4;
        }
        if (other.HasAskPrice3) {
          AskPrice3 = other.AskPrice3;
        }
        if (other.HasAskSize3) {
          AskSize3 = other.AskSize3;
        }
        if (other.HasAskPrice2) {
          AskPrice2 = other.AskPrice2;
        }
        if (other.HasAskSize2) {
          AskSize2 = other.AskSize2;
        }
        if (other.HasAskPrice1) {
          AskPrice1 = other.AskPrice1;
        }
        if (other.HasAskSize1) {
          AskSize1 = other.AskSize1;
        }
        if (other.HasBidPrice1) {
          BidPrice1 = other.BidPrice1;
        }
        if (other.HasBidSize1) {
          BidSize1 = other.BidSize1;
        }
        if (other.HasBidPrice2) {
          BidPrice2 = other.BidPrice2;
        }
        if (other.HasBidSize2) {
          BidSize2 = other.BidSize2;
        }
        if (other.HasBidPrice3) {
          BidPrice3 = other.BidPrice3;
        }
        if (other.HasBidSize3) {
          BidSize3 = other.BidSize3;
        }
        if (other.HasBidPrice4) {
          BidPrice4 = other.BidPrice4;
        }
        if (other.HasBidSize4) {
          BidSize4 = other.BidSize4;
        }
        if (other.HasBidPrice5) {
          BidPrice5 = other.BidPrice5;
        }
        if (other.HasBidSize5) {
          BidSize5 = other.BidSize5;
        }
        if (other.HasPreSettlePrice) {
          PreSettlePrice = other.PreSettlePrice;
        }
        if (other.HasPriceChange) {
          PriceChange = other.PriceChange;
        }
        if (other.HasSettlePrice) {
          SettlePrice = other.SettlePrice;
        }
        if (other.HasHighLimit) {
          HighLimit = other.HighLimit;
        }
        if (other.HasLowLimit) {
          LowLimit = other.LowLimit;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_pBMsgMDAMDFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _pBMsgMDAMDFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasEOF = input.ReadInt32(ref result.eOF_);
              break;
            }
            case 42: {
              input.ReadStringArray(tag, field_name, result.requestSymbolList_);
              break;
            }
            case 48: {
              object unknown;
              if(input.ReadEnum(ref result.dataType_, out unknown)) {
                result.hasDataType = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(6, (ulong)(int)unknown);
              }
              break;
            }
            case 58: {
              result.hasSymbol = input.ReadString(ref result.symbol_);
              break;
            }
            case 66: {
              result.hasTimeStamp = input.ReadString(ref result.timeStamp_);
              break;
            }
            case 72: {
              result.hasPreCloseValue = input.ReadInt64(ref result.preCloseValue_);
              break;
            }
            case 80: {
              result.hasOpenValue = input.ReadInt64(ref result.openValue_);
              break;
            }
            case 88: {
              result.hasTurnover = input.ReadInt64(ref result.turnover_);
              break;
            }
            case 96: {
              result.hasVolume = input.ReadInt64(ref result.volume_);
              break;
            }
            case 104: {
              result.hasHighValue = input.ReadInt64(ref result.highValue_);
              break;
            }
            case 112: {
              result.hasLowValue = input.ReadInt64(ref result.lowValue_);
              break;
            }
            case 120: {
              result.hasLatestIndex = input.ReadInt64(ref result.latestIndex_);
              break;
            }
            case 128: {
              result.hasMatchPrice = input.ReadInt64(ref result.matchPrice_);
              break;
            }
            case 136: {
              result.hasAskPrice5 = input.ReadInt64(ref result.askPrice5_);
              break;
            }
            case 144: {
              result.hasAskSize5 = input.ReadInt64(ref result.askSize5_);
              break;
            }
            case 152: {
              result.hasAskPrice4 = input.ReadInt64(ref result.askPrice4_);
              break;
            }
            case 160: {
              result.hasAskSize4 = input.ReadInt64(ref result.askSize4_);
              break;
            }
            case 168: {
              result.hasAskPrice3 = input.ReadInt64(ref result.askPrice3_);
              break;
            }
            case 176: {
              result.hasAskSize3 = input.ReadInt64(ref result.askSize3_);
              break;
            }
            case 184: {
              result.hasAskPrice2 = input.ReadInt64(ref result.askPrice2_);
              break;
            }
            case 192: {
              result.hasAskSize2 = input.ReadInt64(ref result.askSize2_);
              break;
            }
            case 200: {
              result.hasAskPrice1 = input.ReadInt64(ref result.askPrice1_);
              break;
            }
            case 208: {
              result.hasAskSize1 = input.ReadInt64(ref result.askSize1_);
              break;
            }
            case 216: {
              result.hasBidPrice1 = input.ReadInt64(ref result.bidPrice1_);
              break;
            }
            case 224: {
              result.hasBidSize1 = input.ReadInt64(ref result.bidSize1_);
              break;
            }
            case 232: {
              result.hasBidPrice2 = input.ReadInt64(ref result.bidPrice2_);
              break;
            }
            case 240: {
              result.hasBidSize2 = input.ReadInt64(ref result.bidSize2_);
              break;
            }
            case 248: {
              result.hasBidPrice3 = input.ReadInt64(ref result.bidPrice3_);
              break;
            }
            case 256: {
              result.hasBidSize3 = input.ReadInt64(ref result.bidSize3_);
              break;
            }
            case 264: {
              result.hasBidPrice4 = input.ReadInt64(ref result.bidPrice4_);
              break;
            }
            case 272: {
              result.hasBidSize4 = input.ReadInt64(ref result.bidSize4_);
              break;
            }
            case 280: {
              result.hasBidPrice5 = input.ReadInt64(ref result.bidPrice5_);
              break;
            }
            case 288: {
              result.hasBidSize5 = input.ReadInt64(ref result.bidSize5_);
              break;
            }
            case 296: {
              result.hasPreSettlePrice = input.ReadInt64(ref result.preSettlePrice_);
              break;
            }
            case 304: {
              result.hasPriceChange = input.ReadInt64(ref result.priceChange_);
              break;
            }
            case 312: {
              result.hasSettlePrice = input.ReadInt64(ref result.settlePrice_);
              break;
            }
            case 320: {
              result.hasHighLimit = input.ReadInt64(ref result.highLimit_);
              break;
            }
            case 328: {
              result.hasLowLimit = input.ReadInt64(ref result.lowLimit_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasEOF {
        get { return result.hasEOF; }
      }
      public int EOF {
        get { return result.EOF; }
        set { SetEOF(value); }
      }
      public Builder SetEOF(int value) {
        PrepareBuilder();
        result.hasEOF = true;
        result.eOF_ = value;
        return this;
      }
      public Builder ClearEOF() {
        PrepareBuilder();
        result.hasEOF = false;
        result.eOF_ = 0;
        return this;
      }
      
      public pbc::IPopsicleList<string> RequestSymbolListList {
        get { return PrepareBuilder().requestSymbolList_; }
      }
      public int RequestSymbolListCount {
        get { return result.RequestSymbolListCount; }
      }
      public string GetRequestSymbolList(int index) {
        return result.GetRequestSymbolList(index);
      }
      public Builder SetRequestSymbolList(int index, string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.requestSymbolList_[index] = value;
        return this;
      }
      public Builder AddRequestSymbolList(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.requestSymbolList_.Add(value);
        return this;
      }
      public Builder AddRangeRequestSymbolList(scg::IEnumerable<string> values) {
        PrepareBuilder();
        result.requestSymbolList_.Add(values);
        return this;
      }
      public Builder ClearRequestSymbolList() {
        PrepareBuilder();
        result.requestSymbolList_.Clear();
        return this;
      }
      
      public bool HasDataType {
       get { return result.hasDataType; }
      }
      public global::PBWrapMsgMDA.DataType DataType {
        get { return result.DataType; }
        set { SetDataType(value); }
      }
      public Builder SetDataType(global::PBWrapMsgMDA.DataType value) {
        PrepareBuilder();
        result.hasDataType = true;
        result.dataType_ = value;
        return this;
      }
      public Builder ClearDataType() {
        PrepareBuilder();
        result.hasDataType = false;
        result.dataType_ = global::PBWrapMsgMDA.DataType.EQUITY;
        return this;
      }
      
      public bool HasSymbol {
        get { return result.hasSymbol; }
      }
      public string Symbol {
        get { return result.Symbol; }
        set { SetSymbol(value); }
      }
      public Builder SetSymbol(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSymbol = true;
        result.symbol_ = value;
        return this;
      }
      public Builder ClearSymbol() {
        PrepareBuilder();
        result.hasSymbol = false;
        result.symbol_ = "";
        return this;
      }
      
      public bool HasTimeStamp {
        get { return result.hasTimeStamp; }
      }
      public string TimeStamp {
        get { return result.TimeStamp; }
        set { SetTimeStamp(value); }
      }
      public Builder SetTimeStamp(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTimeStamp = true;
        result.timeStamp_ = value;
        return this;
      }
      public Builder ClearTimeStamp() {
        PrepareBuilder();
        result.hasTimeStamp = false;
        result.timeStamp_ = "";
        return this;
      }
      
      public bool HasPreCloseValue {
        get { return result.hasPreCloseValue; }
      }
      public long PreCloseValue {
        get { return result.PreCloseValue; }
        set { SetPreCloseValue(value); }
      }
      public Builder SetPreCloseValue(long value) {
        PrepareBuilder();
        result.hasPreCloseValue = true;
        result.preCloseValue_ = value;
        return this;
      }
      public Builder ClearPreCloseValue() {
        PrepareBuilder();
        result.hasPreCloseValue = false;
        result.preCloseValue_ = 0L;
        return this;
      }
      
      public bool HasOpenValue {
        get { return result.hasOpenValue; }
      }
      public long OpenValue {
        get { return result.OpenValue; }
        set { SetOpenValue(value); }
      }
      public Builder SetOpenValue(long value) {
        PrepareBuilder();
        result.hasOpenValue = true;
        result.openValue_ = value;
        return this;
      }
      public Builder ClearOpenValue() {
        PrepareBuilder();
        result.hasOpenValue = false;
        result.openValue_ = 0L;
        return this;
      }
      
      public bool HasTurnover {
        get { return result.hasTurnover; }
      }
      public long Turnover {
        get { return result.Turnover; }
        set { SetTurnover(value); }
      }
      public Builder SetTurnover(long value) {
        PrepareBuilder();
        result.hasTurnover = true;
        result.turnover_ = value;
        return this;
      }
      public Builder ClearTurnover() {
        PrepareBuilder();
        result.hasTurnover = false;
        result.turnover_ = 0L;
        return this;
      }
      
      public bool HasVolume {
        get { return result.hasVolume; }
      }
      public long Volume {
        get { return result.Volume; }
        set { SetVolume(value); }
      }
      public Builder SetVolume(long value) {
        PrepareBuilder();
        result.hasVolume = true;
        result.volume_ = value;
        return this;
      }
      public Builder ClearVolume() {
        PrepareBuilder();
        result.hasVolume = false;
        result.volume_ = 0L;
        return this;
      }
      
      public bool HasHighValue {
        get { return result.hasHighValue; }
      }
      public long HighValue {
        get { return result.HighValue; }
        set { SetHighValue(value); }
      }
      public Builder SetHighValue(long value) {
        PrepareBuilder();
        result.hasHighValue = true;
        result.highValue_ = value;
        return this;
      }
      public Builder ClearHighValue() {
        PrepareBuilder();
        result.hasHighValue = false;
        result.highValue_ = 0L;
        return this;
      }
      
      public bool HasLowValue {
        get { return result.hasLowValue; }
      }
      public long LowValue {
        get { return result.LowValue; }
        set { SetLowValue(value); }
      }
      public Builder SetLowValue(long value) {
        PrepareBuilder();
        result.hasLowValue = true;
        result.lowValue_ = value;
        return this;
      }
      public Builder ClearLowValue() {
        PrepareBuilder();
        result.hasLowValue = false;
        result.lowValue_ = 0L;
        return this;
      }
      
      public bool HasLatestIndex {
        get { return result.hasLatestIndex; }
      }
      public long LatestIndex {
        get { return result.LatestIndex; }
        set { SetLatestIndex(value); }
      }
      public Builder SetLatestIndex(long value) {
        PrepareBuilder();
        result.hasLatestIndex = true;
        result.latestIndex_ = value;
        return this;
      }
      public Builder ClearLatestIndex() {
        PrepareBuilder();
        result.hasLatestIndex = false;
        result.latestIndex_ = 0L;
        return this;
      }
      
      public bool HasMatchPrice {
        get { return result.hasMatchPrice; }
      }
      public long MatchPrice {
        get { return result.MatchPrice; }
        set { SetMatchPrice(value); }
      }
      public Builder SetMatchPrice(long value) {
        PrepareBuilder();
        result.hasMatchPrice = true;
        result.matchPrice_ = value;
        return this;
      }
      public Builder ClearMatchPrice() {
        PrepareBuilder();
        result.hasMatchPrice = false;
        result.matchPrice_ = 0L;
        return this;
      }
      
      public bool HasAskPrice5 {
        get { return result.hasAskPrice5; }
      }
      public long AskPrice5 {
        get { return result.AskPrice5; }
        set { SetAskPrice5(value); }
      }
      public Builder SetAskPrice5(long value) {
        PrepareBuilder();
        result.hasAskPrice5 = true;
        result.askPrice5_ = value;
        return this;
      }
      public Builder ClearAskPrice5() {
        PrepareBuilder();
        result.hasAskPrice5 = false;
        result.askPrice5_ = 0L;
        return this;
      }
      
      public bool HasAskSize5 {
        get { return result.hasAskSize5; }
      }
      public long AskSize5 {
        get { return result.AskSize5; }
        set { SetAskSize5(value); }
      }
      public Builder SetAskSize5(long value) {
        PrepareBuilder();
        result.hasAskSize5 = true;
        result.askSize5_ = value;
        return this;
      }
      public Builder ClearAskSize5() {
        PrepareBuilder();
        result.hasAskSize5 = false;
        result.askSize5_ = 0L;
        return this;
      }
      
      public bool HasAskPrice4 {
        get { return result.hasAskPrice4; }
      }
      public long AskPrice4 {
        get { return result.AskPrice4; }
        set { SetAskPrice4(value); }
      }
      public Builder SetAskPrice4(long value) {
        PrepareBuilder();
        result.hasAskPrice4 = true;
        result.askPrice4_ = value;
        return this;
      }
      public Builder ClearAskPrice4() {
        PrepareBuilder();
        result.hasAskPrice4 = false;
        result.askPrice4_ = 0L;
        return this;
      }
      
      public bool HasAskSize4 {
        get { return result.hasAskSize4; }
      }
      public long AskSize4 {
        get { return result.AskSize4; }
        set { SetAskSize4(value); }
      }
      public Builder SetAskSize4(long value) {
        PrepareBuilder();
        result.hasAskSize4 = true;
        result.askSize4_ = value;
        return this;
      }
      public Builder ClearAskSize4() {
        PrepareBuilder();
        result.hasAskSize4 = false;
        result.askSize4_ = 0L;
        return this;
      }
      
      public bool HasAskPrice3 {
        get { return result.hasAskPrice3; }
      }
      public long AskPrice3 {
        get { return result.AskPrice3; }
        set { SetAskPrice3(value); }
      }
      public Builder SetAskPrice3(long value) {
        PrepareBuilder();
        result.hasAskPrice3 = true;
        result.askPrice3_ = value;
        return this;
      }
      public Builder ClearAskPrice3() {
        PrepareBuilder();
        result.hasAskPrice3 = false;
        result.askPrice3_ = 0L;
        return this;
      }
      
      public bool HasAskSize3 {
        get { return result.hasAskSize3; }
      }
      public long AskSize3 {
        get { return result.AskSize3; }
        set { SetAskSize3(value); }
      }
      public Builder SetAskSize3(long value) {
        PrepareBuilder();
        result.hasAskSize3 = true;
        result.askSize3_ = value;
        return this;
      }
      public Builder ClearAskSize3() {
        PrepareBuilder();
        result.hasAskSize3 = false;
        result.askSize3_ = 0L;
        return this;
      }
      
      public bool HasAskPrice2 {
        get { return result.hasAskPrice2; }
      }
      public long AskPrice2 {
        get { return result.AskPrice2; }
        set { SetAskPrice2(value); }
      }
      public Builder SetAskPrice2(long value) {
        PrepareBuilder();
        result.hasAskPrice2 = true;
        result.askPrice2_ = value;
        return this;
      }
      public Builder ClearAskPrice2() {
        PrepareBuilder();
        result.hasAskPrice2 = false;
        result.askPrice2_ = 0L;
        return this;
      }
      
      public bool HasAskSize2 {
        get { return result.hasAskSize2; }
      }
      public long AskSize2 {
        get { return result.AskSize2; }
        set { SetAskSize2(value); }
      }
      public Builder SetAskSize2(long value) {
        PrepareBuilder();
        result.hasAskSize2 = true;
        result.askSize2_ = value;
        return this;
      }
      public Builder ClearAskSize2() {
        PrepareBuilder();
        result.hasAskSize2 = false;
        result.askSize2_ = 0L;
        return this;
      }
      
      public bool HasAskPrice1 {
        get { return result.hasAskPrice1; }
      }
      public long AskPrice1 {
        get { return result.AskPrice1; }
        set { SetAskPrice1(value); }
      }
      public Builder SetAskPrice1(long value) {
        PrepareBuilder();
        result.hasAskPrice1 = true;
        result.askPrice1_ = value;
        return this;
      }
      public Builder ClearAskPrice1() {
        PrepareBuilder();
        result.hasAskPrice1 = false;
        result.askPrice1_ = 0L;
        return this;
      }
      
      public bool HasAskSize1 {
        get { return result.hasAskSize1; }
      }
      public long AskSize1 {
        get { return result.AskSize1; }
        set { SetAskSize1(value); }
      }
      public Builder SetAskSize1(long value) {
        PrepareBuilder();
        result.hasAskSize1 = true;
        result.askSize1_ = value;
        return this;
      }
      public Builder ClearAskSize1() {
        PrepareBuilder();
        result.hasAskSize1 = false;
        result.askSize1_ = 0L;
        return this;
      }
      
      public bool HasBidPrice1 {
        get { return result.hasBidPrice1; }
      }
      public long BidPrice1 {
        get { return result.BidPrice1; }
        set { SetBidPrice1(value); }
      }
      public Builder SetBidPrice1(long value) {
        PrepareBuilder();
        result.hasBidPrice1 = true;
        result.bidPrice1_ = value;
        return this;
      }
      public Builder ClearBidPrice1() {
        PrepareBuilder();
        result.hasBidPrice1 = false;
        result.bidPrice1_ = 0L;
        return this;
      }
      
      public bool HasBidSize1 {
        get { return result.hasBidSize1; }
      }
      public long BidSize1 {
        get { return result.BidSize1; }
        set { SetBidSize1(value); }
      }
      public Builder SetBidSize1(long value) {
        PrepareBuilder();
        result.hasBidSize1 = true;
        result.bidSize1_ = value;
        return this;
      }
      public Builder ClearBidSize1() {
        PrepareBuilder();
        result.hasBidSize1 = false;
        result.bidSize1_ = 0L;
        return this;
      }
      
      public bool HasBidPrice2 {
        get { return result.hasBidPrice2; }
      }
      public long BidPrice2 {
        get { return result.BidPrice2; }
        set { SetBidPrice2(value); }
      }
      public Builder SetBidPrice2(long value) {
        PrepareBuilder();
        result.hasBidPrice2 = true;
        result.bidPrice2_ = value;
        return this;
      }
      public Builder ClearBidPrice2() {
        PrepareBuilder();
        result.hasBidPrice2 = false;
        result.bidPrice2_ = 0L;
        return this;
      }
      
      public bool HasBidSize2 {
        get { return result.hasBidSize2; }
      }
      public long BidSize2 {
        get { return result.BidSize2; }
        set { SetBidSize2(value); }
      }
      public Builder SetBidSize2(long value) {
        PrepareBuilder();
        result.hasBidSize2 = true;
        result.bidSize2_ = value;
        return this;
      }
      public Builder ClearBidSize2() {
        PrepareBuilder();
        result.hasBidSize2 = false;
        result.bidSize2_ = 0L;
        return this;
      }
      
      public bool HasBidPrice3 {
        get { return result.hasBidPrice3; }
      }
      public long BidPrice3 {
        get { return result.BidPrice3; }
        set { SetBidPrice3(value); }
      }
      public Builder SetBidPrice3(long value) {
        PrepareBuilder();
        result.hasBidPrice3 = true;
        result.bidPrice3_ = value;
        return this;
      }
      public Builder ClearBidPrice3() {
        PrepareBuilder();
        result.hasBidPrice3 = false;
        result.bidPrice3_ = 0L;
        return this;
      }
      
      public bool HasBidSize3 {
        get { return result.hasBidSize3; }
      }
      public long BidSize3 {
        get { return result.BidSize3; }
        set { SetBidSize3(value); }
      }
      public Builder SetBidSize3(long value) {
        PrepareBuilder();
        result.hasBidSize3 = true;
        result.bidSize3_ = value;
        return this;
      }
      public Builder ClearBidSize3() {
        PrepareBuilder();
        result.hasBidSize3 = false;
        result.bidSize3_ = 0L;
        return this;
      }
      
      public bool HasBidPrice4 {
        get { return result.hasBidPrice4; }
      }
      public long BidPrice4 {
        get { return result.BidPrice4; }
        set { SetBidPrice4(value); }
      }
      public Builder SetBidPrice4(long value) {
        PrepareBuilder();
        result.hasBidPrice4 = true;
        result.bidPrice4_ = value;
        return this;
      }
      public Builder ClearBidPrice4() {
        PrepareBuilder();
        result.hasBidPrice4 = false;
        result.bidPrice4_ = 0L;
        return this;
      }
      
      public bool HasBidSize4 {
        get { return result.hasBidSize4; }
      }
      public long BidSize4 {
        get { return result.BidSize4; }
        set { SetBidSize4(value); }
      }
      public Builder SetBidSize4(long value) {
        PrepareBuilder();
        result.hasBidSize4 = true;
        result.bidSize4_ = value;
        return this;
      }
      public Builder ClearBidSize4() {
        PrepareBuilder();
        result.hasBidSize4 = false;
        result.bidSize4_ = 0L;
        return this;
      }
      
      public bool HasBidPrice5 {
        get { return result.hasBidPrice5; }
      }
      public long BidPrice5 {
        get { return result.BidPrice5; }
        set { SetBidPrice5(value); }
      }
      public Builder SetBidPrice5(long value) {
        PrepareBuilder();
        result.hasBidPrice5 = true;
        result.bidPrice5_ = value;
        return this;
      }
      public Builder ClearBidPrice5() {
        PrepareBuilder();
        result.hasBidPrice5 = false;
        result.bidPrice5_ = 0L;
        return this;
      }
      
      public bool HasBidSize5 {
        get { return result.hasBidSize5; }
      }
      public long BidSize5 {
        get { return result.BidSize5; }
        set { SetBidSize5(value); }
      }
      public Builder SetBidSize5(long value) {
        PrepareBuilder();
        result.hasBidSize5 = true;
        result.bidSize5_ = value;
        return this;
      }
      public Builder ClearBidSize5() {
        PrepareBuilder();
        result.hasBidSize5 = false;
        result.bidSize5_ = 0L;
        return this;
      }
      
      public bool HasPreSettlePrice {
        get { return result.hasPreSettlePrice; }
      }
      public long PreSettlePrice {
        get { return result.PreSettlePrice; }
        set { SetPreSettlePrice(value); }
      }
      public Builder SetPreSettlePrice(long value) {
        PrepareBuilder();
        result.hasPreSettlePrice = true;
        result.preSettlePrice_ = value;
        return this;
      }
      public Builder ClearPreSettlePrice() {
        PrepareBuilder();
        result.hasPreSettlePrice = false;
        result.preSettlePrice_ = 0L;
        return this;
      }
      
      public bool HasPriceChange {
        get { return result.hasPriceChange; }
      }
      public long PriceChange {
        get { return result.PriceChange; }
        set { SetPriceChange(value); }
      }
      public Builder SetPriceChange(long value) {
        PrepareBuilder();
        result.hasPriceChange = true;
        result.priceChange_ = value;
        return this;
      }
      public Builder ClearPriceChange() {
        PrepareBuilder();
        result.hasPriceChange = false;
        result.priceChange_ = 0L;
        return this;
      }
      
      public bool HasSettlePrice {
        get { return result.hasSettlePrice; }
      }
      public long SettlePrice {
        get { return result.SettlePrice; }
        set { SetSettlePrice(value); }
      }
      public Builder SetSettlePrice(long value) {
        PrepareBuilder();
        result.hasSettlePrice = true;
        result.settlePrice_ = value;
        return this;
      }
      public Builder ClearSettlePrice() {
        PrepareBuilder();
        result.hasSettlePrice = false;
        result.settlePrice_ = 0L;
        return this;
      }
      
      public bool HasHighLimit {
        get { return result.hasHighLimit; }
      }
      public long HighLimit {
        get { return result.HighLimit; }
        set { SetHighLimit(value); }
      }
      public Builder SetHighLimit(long value) {
        PrepareBuilder();
        result.hasHighLimit = true;
        result.highLimit_ = value;
        return this;
      }
      public Builder ClearHighLimit() {
        PrepareBuilder();
        result.hasHighLimit = false;
        result.highLimit_ = 0L;
        return this;
      }
      
      public bool HasLowLimit {
        get { return result.hasLowLimit; }
      }
      public long LowLimit {
        get { return result.LowLimit; }
        set { SetLowLimit(value); }
      }
      public Builder SetLowLimit(long value) {
        PrepareBuilder();
        result.hasLowLimit = true;
        result.lowLimit_ = value;
        return this;
      }
      public Builder ClearLowLimit() {
        PrepareBuilder();
        result.hasLowLimit = false;
        result.lowLimit_ = 0L;
        return this;
      }
    }
    static PBMsgMDAMD() {
      object.ReferenceEquals(global::PBWrapMsgMDA.Generated.PBMsgMDA.Descriptor, null);
    }
  }
  
  #endregion
  
}

#endregion Designer generated code
