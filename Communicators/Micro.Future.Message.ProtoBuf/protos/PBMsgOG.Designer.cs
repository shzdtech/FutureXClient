// Generated by ProtoGen, Version=2.4.1.521, Culture=neutral, PublicKeyToken=55f7125234beb589.  DO NOT EDIT!
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace PBWrapMsgOG {
  
  namespace Generated {
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class PBMsgOG {
    
      #region Extension registration
      public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
      }
      #endregion
      #region Static variables
      internal static pbd::MessageDescriptor internal__static_PBWrapMsgOG_PBMsgOGMC__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::PBWrapMsgOG.PBMsgOGMC, global::PBWrapMsgOG.PBMsgOGMC.Builder> internal__static_PBWrapMsgOG_PBMsgOGMC__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_PBWrapMsgOG_PBMsgOGOrdEqt__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::PBWrapMsgOG.PBMsgOGOrdEqt, global::PBWrapMsgOG.PBMsgOGOrdEqt.Builder> internal__static_PBWrapMsgOG_PBMsgOGOrdEqt__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_PBWrapMsgOG_PBMsgOGOrdFut__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::PBWrapMsgOG.PBMsgOGOrdFut, global::PBWrapMsgOG.PBMsgOGOrdFut.Builder> internal__static_PBWrapMsgOG_PBMsgOGOrdFut__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_PBWrapMsgOG_PBMsgOGOrdEqtList__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::PBWrapMsgOG.PBMsgOGOrdEqtList, global::PBWrapMsgOG.PBMsgOGOrdEqtList.Builder> internal__static_PBWrapMsgOG_PBMsgOGOrdEqtList__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_PBWrapMsgOG_PBMsgOGOrdFutList__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::PBWrapMsgOG.PBMsgOGOrdFutList, global::PBWrapMsgOG.PBMsgOGOrdFutList.Builder> internal__static_PBWrapMsgOG_PBMsgOGOrdFutList__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_PBWrapMsgOG_PBMsgOGOrdList__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::PBWrapMsgOG.PBMsgOGOrdList, global::PBWrapMsgOG.PBMsgOGOrdList.Builder> internal__static_PBWrapMsgOG_PBMsgOGOrdList__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_PBWrapMsgOG_PBMsgExecution__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::PBWrapMsgOG.PBMsgExecution, global::PBWrapMsgOG.PBMsgExecution.Builder> internal__static_PBWrapMsgOG_PBMsgExecution__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_PBWrapMsgOG_PBMsgEntrust__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::PBWrapMsgOG.PBMsgEntrust, global::PBWrapMsgOG.PBMsgEntrust.Builder> internal__static_PBWrapMsgOG_PBMsgEntrust__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_PBWrapMsgOG_PBMsgAccount__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::PBWrapMsgOG.PBMsgAccount, global::PBWrapMsgOG.PBMsgAccount.Builder> internal__static_PBWrapMsgOG_PBMsgAccount__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_PBWrapMsgOG_PBMsgPosition__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::PBWrapMsgOG.PBMsgPosition, global::PBWrapMsgOG.PBMsgPosition.Builder> internal__static_PBWrapMsgOG_PBMsgPosition__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_PBWrapMsgOG_PBMsgOGRpt__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::PBWrapMsgOG.PBMsgOGRpt, global::PBWrapMsgOG.PBMsgOGRpt.Builder> internal__static_PBWrapMsgOG_PBMsgOGRpt__FieldAccessorTable;
      #endregion
      #region Descriptor
      public static pbd::FileDescriptor Descriptor {
        get { return descriptor; }
      }
      private static pbd::FileDescriptor descriptor;
      
      static PBMsgOG() {
        byte[] descriptorData = global::System.Convert.FromBase64String(
            "Cg1QQk1zZ09HLnByb3RvEgtQQldyYXBNc2dPRyLaAQoJUEJNc2dPR01DEhEK" + 
            "CW1lc3NhZ2VJZBgBIAIoBRIWCg5tZXNzYWdlU2VydmljZRgCIAIoCRIPCgdz" + 
            "ZXJ2aWNlGAMgAigJEi0KC21lc3NhZ2VUeXBlGAQgAigOMhguUEJXcmFwTXNn" + 
            "T0cuTWVzc2FnZVR5cGUSFAoMY2hpbGRPcmRlcklkGAUgASgJEhUKDXBhcmVu" + 
            "dE9yZGVySWQYBiABKAkSEAoIc3RyYXRlZ3kYByABKAkSDgoGc3ltYm9sGAgg" + 
            "ASgJEhMKC3BlbmRpbmdTaXplGAkgASgFIpICCg1QQk1zZ09HT3JkRXF0Eg4K" + 
            "BnN5bWJvbBgBIAIoCRIpCglvcmRlclR5cGUYAiACKA4yFi5QQldyYXBNc2dP" + 
            "Ry5PcmRlclR5cGUSLwoMZXF1aXR5TWFya2V0GAMgASgOMhkuUEJXcmFwTXNn" + 
            "T0cuRXF1aXR5TWFya2V0Ei0KC2V4ZWN1dGVUeXBlGAQgASgOMhguUEJXcmFw" + 
            "TXNnT0cuRXhlY3V0ZVR5cGUSMwoOb3JkZXJEaXJlY3Rpb24YBSABKA4yGy5Q" + 
            "QldyYXBNc2dPRy5PcmRlckRpcmVjdGlvbhINCgVwcmljZRgGIAEoARIMCgRz" + 
            "aXplGAcgASgFEhQKDGNoaWxkT3JkZXJJZBgIIAEoCSKcAwoNUEJNc2dPR09y" + 
            "ZEZ1dBIOCgZzeW1ib2wYASACKAkSKQoJb3JkZXJUeXBlGAIgAigOMhYuUEJX" + 
            "cmFwTXNnT0cuT3JkZXJUeXBlEisKCmZ1dHVyZUZsYWcYAyABKA4yFy5QQldy" + 
            "YXBNc2dPRy5GdXR1cmVGbGFnEi0KC2V4ZWN1dGVUeXBlGAQgASgOMhguUEJX" + 
            "cmFwTXNnT0cuRXhlY3V0ZVR5cGUSMwoOb3JkZXJEaXJlY3Rpb24YBSABKA4y" + 
            "Gy5QQldyYXBNc2dPRy5PcmRlckRpcmVjdGlvbhJGChFmdXR1cmVBY2NvdW50" + 
            "VHlwZRgGIAEoDjIeLlBCV3JhcE1zZ09HLkZ1dHVyZUFjY291bnRUeXBlOgtT" + 
            "UEVDVUxBVElPThINCgVwcmljZRgHIAEoARIMCgRzaXplGAggASgFEhQKDGNo" + 
            "aWxkT3JkZXJJZBgJIAEoCRIxCgh0aW1lVHlwZRgKIAEoDjIVLlBCV3JhcE1z" + 
            "Z09HLlRpbWVUeXBlOghXSE9MRURBWRIRCglzdG9wUHJpY2UYCyABKAEimwEK" + 
            "EVBCTXNnT0dPcmRFcXRMaXN0EhEKCW1lc3NhZ2VJZBgBIAEoBRIWCg5tZXNz" + 
            "YWdlU2VydmljZRgCIAEoCRIVCg1wYXJlbnRPcmRlcklkGAMgASgJEjAKDG9n" + 
            "T3JkRXF0TGlzdBgEIAMoCzIaLlBCV3JhcE1zZ09HLlBCTXNnT0dPcmRFcXQS" + 
            "EgoKYmF0Y2hPcmRlchgFIAIoCCKHAQoRUEJNc2dPR09yZEZ1dExpc3QSEQoJ" + 
            "bWVzc2FnZUlkGAEgASgFEhYKDm1lc3NhZ2VTZXJ2aWNlGAIgASgJEhUKDXBh" + 
            "cmVudE9yZGVySWQYAyABKAkSMAoMb2dPcmRGdXRMaXN0GAQgAygLMhouUEJX" + 
            "cmFwTXNnT0cuUEJNc2dPR09yZEZ1dCL5AQoOUEJNc2dPR09yZExpc3QSEQoJ" + 
            "bWVzc2FnZUlkGAEgAigFEhYKDm1lc3NhZ2VTZXJ2aWNlGAIgAigJEhUKDXBh" + 
            "cmVudE9yZGVySWQYAyABKAkSMAoMb2dPcmRFcXRMaXN0GAQgAygLMhouUEJX" + 
            "cmFwTXNnT0cuUEJNc2dPR09yZEVxdBIwCgxvZ09yZEZ1dExpc3QYBSADKAsy" + 
            "Gi5QQldyYXBNc2dPRy5QQk1zZ09HT3JkRnV0EhIKCmJhdGNoT3JkZXIYBiAC" + 
            "KAgSLQoNb3JkZXJMaXN0VHlwZRgHIAEoDjIWLlBCV3JhcE1zZ09HLk9yZGVy" + 
            "VHlwZSKqAwoOUEJNc2dFeGVjdXRpb24SMQoNZXhlY3V0aW9uVHlwZRgBIAIo" + 
            "DjIaLlBCV3JhcE1zZ09HLkV4ZWN1dGlvblR5cGUSFAoMY2hpbGRPcmRlcklk" + 
            "GAIgAigJEhUKDXBhcmVudE9yZGVySWQYAyACKAkSEQoJdGltZVN0YW1wGAQg" + 
            "ASgJEg4KBmRlYWxObxgFIAEoCRIPCgdhY2NvdW50GAYgASgJEg4KBnN5bWJv" + 
            "bBgHIAEoCRIMCgRuYW1lGAggASgMEg0KBXZlbnVlGAkgASgJEjMKDm9yZGVy" + 
            "RGlyZWN0aW9uGAogASgOMhsuUEJXcmFwTXNnT0cuT3JkZXJEaXJlY3Rpb24S" + 
            "EwoLdGFyZ2V0UHJpY2UYCyABKAESFAoMZXhlY3V0ZVByaWNlGAwgASgBEhMK" + 
            "C2V4ZWN1dGVTaXplGA0gASgFEhIKCmNhbmNlbFNpemUYDiABKAUSKwoKZnV0" + 
            "dXJlRmxhZxgPIAEoDjIXLlBCV3JhcE1zZ09HLkZ1dHVyZUZsYWcSEwoLZW50" + 
            "cnVzdFNpemUYECABKAUSDAoEbm90ZRgRIAEoDCKfAwoMUEJNc2dFbnRydXN0" + 
            "EhQKDGNoaWxkT3JkZXJJZBgBIAIoCRIVCg1wYXJlbnRPcmRlcklkGAIgAigJ" + 
            "EhMKC2VudHJ1c3RUaW1lGAMgASgJEhEKCWFwcGx5VGltZRgEIAEoCRIOCgZz" + 
            "dGF0dXMYBSABKAkSEgoKY2FuY2VsU2l6ZRgGIAEoBRITCgtleGVjdXRlU2l6" + 
            "ZRgHIAEoBRIXCg9leGVjdXRlQXZnUHJpY2UYCCABKAESDwoHYWNjb3VudBgJ" + 
            "IAEoCRIOCgZzeW1ib2wYCiABKAkSDAoEbmFtZRgLIAEoDBINCgV2ZW51ZRgM" + 
            "IAEoCRIzCg5vcmRlckRpcmVjdGlvbhgNIAEoDjIbLlBCV3JhcE1zZ09HLk9y" + 
            "ZGVyRGlyZWN0aW9uEisKCmZ1dHVyZUZsYWcYDiABKA4yFy5QQldyYXBNc2dP" + 
            "Ry5GdXR1cmVGbGFnEhMKC2VudHJ1c3RTaXplGA8gASgFEhMKC3RhcmdldFBy" + 
            "aWNlGBAgASgBEgwKBG5vdGUYESABKAwSEAoIc3RhdHVzQ04YEiABKAwiZQoM" + 
            "UEJNc2dBY2NvdW50EhQKDFRvdGFsQ2FwaXRhbBgBIAIoCRIYChBBdmFpbGFi" + 
            "bGVDYXBpdGFsGAIgAigJEhEKCWJ1eU1hcmdpbhgDIAEoCRISCgpzZWxsTWFy" + 
            "Z2luGAQgASgJIrsBCg1QQk1zZ1Bvc2l0aW9uEg4KBnN5bWJvbBgBIAIoCRIM" + 
            "CgRuYW1lGAIgAigMEhQKDGxvbmdQb3NpdGlvbhgDIAIoCRIRCglsb25nUHJp" + 
            "Y2UYBCACKAkSFQoNc2hvcnRQb3NpdGlvbhgFIAIoCRISCgpzaG9ydFByaWNl" + 
            "GAYgAigJEhMKC25ldFBvc2l0aW9uGAcgAigDEhMKC2xhdGVzdFByaWNlGAgg" + 
            "AigJEg4KBnByb2ZpdBgJIAIoCSKgAgoKUEJNc2dPR1JwdBIRCgltZXNzYWdl" + 
            "SWQYASACKAUSFgoObWVzc2FnZVNlcnZpY2UYAiACKAkSMQoNcmVwb3J0U2Vy" + 
            "dmljZRgDIAIoDjIaLlBCV3JhcE1zZ09HLlJlcG9ydFNlcnZpY2USLgoJZXhl" + 
            "Y3V0aW9uGAQgAygLMhsuUEJXcmFwTXNnT0cuUEJNc2dFeGVjdXRpb24SKgoH" + 
            "YWNjb3VudBgFIAEoCzIZLlBCV3JhcE1zZ09HLlBCTXNnQWNjb3VudBIsCghw" + 
            "b3NpdGlvbhgGIAMoCzIaLlBCV3JhcE1zZ09HLlBCTXNnUG9zaXRpb24SKgoH" + 
            "ZW50cnVzdBgHIAMoCzIZLlBCV3JhcE1zZ09HLlBCTXNnRW50cnVzdCpbCgtN" + 
            "ZXNzYWdlVHlwZRIWChJTRU5EX1BFTkRJTkdfT1JERVIQARIaChZSRVRSSUVW" + 
            "RV9QRU5ESU5HX09SREVSEAISGAoUU0VORF9PTVNfSU5GT1JNQVRJT04QAypL" + 
            "Cg5PcmRlckRpcmVjdGlvbhIHCgNCVVkQARIICgRTRUxMEAISCAoEUmVwbxAE" + 
            "Eg8KC3JldmVyc2VSZXBvEAUSCwoHVW5rbm93bhAGKigKCU9yZGVyVHlwZRIH" + 
            "CgNORVcQARIHCgNDQU4QAhIJCgVSRVRSWRADKj0KC0V4ZWN1dGVUeXBlEgoK" + 
            "Bk1BUktFVBABEgkKBUxJTUlUEAISCAoEU1RPUBADEg0KCVNUT1BMSU1JVBAE" + 
            "Kh4KDEVxdWl0eU1hcmtldBIGCgJTSBABEgYKAlNaEAIqMQoKRnV0dXJlRmxh" + 
            "ZxIICgRPUEVOEAESCQoFQ0xPU0UQAhIOCgpDTE9TRVRPREFZEAMqQwoRRnV0" + 
            "dXJlQWNjb3VudFR5cGUSDwoLU1BFQ1VMQVRJT04QARIOCgpJTlZFU1RNRU5U" + 
            "EAISDQoJQVJCSVRSQUdFEAMqKQoIVGltZVR5cGUSDAoIV0hPTEVEQVkQARIP" + 
            "CgtVTlRJTENBTkNFTBACKssBCg1SZXBvcnRTZXJ2aWNlEiAKHEVRVUlUWV9P" + 
            "UkRFUl9BQ0tOT1dMRURHRU1FTlQQARIgChxGVVRVUkVfT1JERVJfQUNLTk9X" + 
            "TEVER0VNRU5UEAISFAoQRVFVSVRZX0VYRUNVVElPThADEhQKEEZVVFVSRV9F" + 
            "WEVDVVRJT04QBBISCg5FUVVJVFlfRU5UUlVTVBAFEhIKDkZVVFVSRV9FTlRS" + 
            "VVNUEAYSEAoMRVFVSVRZX1FVRVJZEAcSEAoMRlVUVVJFX1FVRVJZEAgqyQEK" + 
            "DUV4ZWN1dGlvblR5cGUSGQoVT1JERVJfQUNLTk9XTEVER0VNRU5UEAESEwoP" + 
            "T1JERVJfUkVKRUNUSU9OEAISIAocQ0FOQ0VMTEFUSU9OX0FDS05PV0xFREdF" + 
            "TUVOVBADEhoKFkNBTkNFTExBVElPTl9SRUpFQ1RJT04QBBITCg9PUkRFUl9F" + 
            "WEVDVVRJT04QBRIaChZDQU5DRUxMQVRJT05fRVhFQ1VUSU9OEAYSGQoVUkVU" + 
            "UllfQUNLTk9XTEVER0VNRU5UEAdCHgoPUHJvdG9CdWZNZXNzYWdlQgtQQldy" + 
            "YXBNc2dPRw==");
        pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
          descriptor = root;
          internal__static_PBWrapMsgOG_PBMsgOGMC__Descriptor = Descriptor.MessageTypes[0];
          internal__static_PBWrapMsgOG_PBMsgOGMC__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::PBWrapMsgOG.PBMsgOGMC, global::PBWrapMsgOG.PBMsgOGMC.Builder>(internal__static_PBWrapMsgOG_PBMsgOGMC__Descriptor,
                  new string[] { "MessageId", "MessageService", "Service", "MessageType", "ChildOrderId", "ParentOrderId", "Strategy", "Symbol", "PendingSize", });
          internal__static_PBWrapMsgOG_PBMsgOGOrdEqt__Descriptor = Descriptor.MessageTypes[1];
          internal__static_PBWrapMsgOG_PBMsgOGOrdEqt__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::PBWrapMsgOG.PBMsgOGOrdEqt, global::PBWrapMsgOG.PBMsgOGOrdEqt.Builder>(internal__static_PBWrapMsgOG_PBMsgOGOrdEqt__Descriptor,
                  new string[] { "Symbol", "OrderType", "EquityMarket", "ExecuteType", "OrderDirection", "Price", "Size", "ChildOrderId", });
          internal__static_PBWrapMsgOG_PBMsgOGOrdFut__Descriptor = Descriptor.MessageTypes[2];
          internal__static_PBWrapMsgOG_PBMsgOGOrdFut__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::PBWrapMsgOG.PBMsgOGOrdFut, global::PBWrapMsgOG.PBMsgOGOrdFut.Builder>(internal__static_PBWrapMsgOG_PBMsgOGOrdFut__Descriptor,
                  new string[] { "Symbol", "OrderType", "FutureFlag", "ExecuteType", "OrderDirection", "FutureAccountType", "Price", "Size", "ChildOrderId", "TimeType", "StopPrice", });
          internal__static_PBWrapMsgOG_PBMsgOGOrdEqtList__Descriptor = Descriptor.MessageTypes[3];
          internal__static_PBWrapMsgOG_PBMsgOGOrdEqtList__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::PBWrapMsgOG.PBMsgOGOrdEqtList, global::PBWrapMsgOG.PBMsgOGOrdEqtList.Builder>(internal__static_PBWrapMsgOG_PBMsgOGOrdEqtList__Descriptor,
                  new string[] { "MessageId", "MessageService", "ParentOrderId", "OgOrdEqtList", "BatchOrder", });
          internal__static_PBWrapMsgOG_PBMsgOGOrdFutList__Descriptor = Descriptor.MessageTypes[4];
          internal__static_PBWrapMsgOG_PBMsgOGOrdFutList__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::PBWrapMsgOG.PBMsgOGOrdFutList, global::PBWrapMsgOG.PBMsgOGOrdFutList.Builder>(internal__static_PBWrapMsgOG_PBMsgOGOrdFutList__Descriptor,
                  new string[] { "MessageId", "MessageService", "ParentOrderId", "OgOrdFutList", });
          internal__static_PBWrapMsgOG_PBMsgOGOrdList__Descriptor = Descriptor.MessageTypes[5];
          internal__static_PBWrapMsgOG_PBMsgOGOrdList__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::PBWrapMsgOG.PBMsgOGOrdList, global::PBWrapMsgOG.PBMsgOGOrdList.Builder>(internal__static_PBWrapMsgOG_PBMsgOGOrdList__Descriptor,
                  new string[] { "MessageId", "MessageService", "ParentOrderId", "OgOrdEqtList", "OgOrdFutList", "BatchOrder", "OrderListType", });
          internal__static_PBWrapMsgOG_PBMsgExecution__Descriptor = Descriptor.MessageTypes[6];
          internal__static_PBWrapMsgOG_PBMsgExecution__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::PBWrapMsgOG.PBMsgExecution, global::PBWrapMsgOG.PBMsgExecution.Builder>(internal__static_PBWrapMsgOG_PBMsgExecution__Descriptor,
                  new string[] { "ExecutionType", "ChildOrderId", "ParentOrderId", "TimeStamp", "DealNo", "Account", "Symbol", "Name", "Venue", "OrderDirection", "TargetPrice", "ExecutePrice", "ExecuteSize", "CancelSize", "FutureFlag", "EntrustSize", "Note", });
          internal__static_PBWrapMsgOG_PBMsgEntrust__Descriptor = Descriptor.MessageTypes[7];
          internal__static_PBWrapMsgOG_PBMsgEntrust__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::PBWrapMsgOG.PBMsgEntrust, global::PBWrapMsgOG.PBMsgEntrust.Builder>(internal__static_PBWrapMsgOG_PBMsgEntrust__Descriptor,
                  new string[] { "ChildOrderId", "ParentOrderId", "EntrustTime", "ApplyTime", "Status", "CancelSize", "ExecuteSize", "ExecuteAvgPrice", "Account", "Symbol", "Name", "Venue", "OrderDirection", "FutureFlag", "EntrustSize", "TargetPrice", "Note", "StatusCN", });
          internal__static_PBWrapMsgOG_PBMsgAccount__Descriptor = Descriptor.MessageTypes[8];
          internal__static_PBWrapMsgOG_PBMsgAccount__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::PBWrapMsgOG.PBMsgAccount, global::PBWrapMsgOG.PBMsgAccount.Builder>(internal__static_PBWrapMsgOG_PBMsgAccount__Descriptor,
                  new string[] { "TotalCapital", "AvailableCapital", "BuyMargin", "SellMargin", });
          internal__static_PBWrapMsgOG_PBMsgPosition__Descriptor = Descriptor.MessageTypes[9];
          internal__static_PBWrapMsgOG_PBMsgPosition__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::PBWrapMsgOG.PBMsgPosition, global::PBWrapMsgOG.PBMsgPosition.Builder>(internal__static_PBWrapMsgOG_PBMsgPosition__Descriptor,
                  new string[] { "Symbol", "Name", "LongPosition", "LongPrice", "ShortPosition", "ShortPrice", "NetPosition", "LatestPrice", "Profit", });
          internal__static_PBWrapMsgOG_PBMsgOGRpt__Descriptor = Descriptor.MessageTypes[10];
          internal__static_PBWrapMsgOG_PBMsgOGRpt__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::PBWrapMsgOG.PBMsgOGRpt, global::PBWrapMsgOG.PBMsgOGRpt.Builder>(internal__static_PBWrapMsgOG_PBMsgOGRpt__Descriptor,
                  new string[] { "MessageId", "MessageService", "ReportService", "Execution", "Account", "Position", "Entrust", });
          return null;
        };
        pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
            new pbd::FileDescriptor[] {
            }, assigner);
      }
      #endregion
      
    }
  }
  #region Enums
  public enum MessageType {
    SEND_PENDING_ORDER = 1,
    RETRIEVE_PENDING_ORDER = 2,
    SEND_OMS_INFORMATION = 3,
  }
  
  public enum OrderDirection {
    BUY = 1,
    SELL = 2,
    Repo = 4,
    reverseRepo = 5,
    Unknown = 6,
  }
  
  public enum OrderType {
    NEW = 1,
    CAN = 2,
    RETRY = 3,
  }
  
  public enum ExecuteType {
    MARKET = 1,
    LIMIT = 2,
    STOP = 3,
    STOPLIMIT = 4,
  }
  
  public enum EquityMarket {
    SH = 1,
    SZ = 2,
  }
  
  public enum FutureFlag {
    OPEN = 1,
    CLOSE = 2,
    CLOSETODAY = 3,
  }
  
  public enum FutureAccountType {
    SPECULATION = 1,
    INVESTMENT = 2,
    ARBITRAGE = 3,
  }
  
  public enum TimeType {
    WHOLEDAY = 1,
    UNTILCANCEL = 2,
  }
  
  public enum ReportService {
    EQUITY_ORDER_ACKNOWLEDGEMENT = 1,
    FUTURE_ORDER_ACKNOWLEDGEMENT = 2,
    EQUITY_EXECUTION = 3,
    FUTURE_EXECUTION = 4,
    EQUITY_ENTRUST = 5,
    FUTURE_ENTRUST = 6,
    EQUITY_QUERY = 7,
    FUTURE_QUERY = 8,
  }
  
  public enum ExecutionType {
    ORDER_ACKNOWLEDGEMENT = 1,
    ORDER_REJECTION = 2,
    CANCELLATION_ACKNOWLEDGEMENT = 3,
    CANCELLATION_REJECTION = 4,
    ORDER_EXECUTION = 5,
    CANCELLATION_EXECUTION = 6,
    RETRY_ACKNOWLEDGEMENT = 7,
  }
  
  #endregion
  
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class PBMsgOGMC : pb::GeneratedMessage<PBMsgOGMC, PBMsgOGMC.Builder> {
    private PBMsgOGMC() { }
    private static readonly PBMsgOGMC defaultInstance = new PBMsgOGMC().MakeReadOnly();
    private static readonly string[] _pBMsgOGMCFieldNames = new string[] { "childOrderId", "messageId", "messageService", "messageType", "parentOrderId", "pendingSize", "service", "strategy", "symbol" };
    private static readonly uint[] _pBMsgOGMCFieldTags = new uint[] { 42, 8, 18, 32, 50, 72, 26, 58, 66 };
    public static PBMsgOGMC DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override PBMsgOGMC DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override PBMsgOGMC ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::PBWrapMsgOG.Generated.PBMsgOG.internal__static_PBWrapMsgOG_PBMsgOGMC__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<PBMsgOGMC, PBMsgOGMC.Builder> InternalFieldAccessors {
      get { return global::PBWrapMsgOG.Generated.PBMsgOG.internal__static_PBWrapMsgOG_PBMsgOGMC__FieldAccessorTable; }
    }
    
    public const int MessageIdFieldNumber = 1;
    private bool hasMessageId;
    private int messageId_;
    public bool HasMessageId {
      get { return hasMessageId; }
    }
    public int MessageId {
      get { return messageId_; }
    }
    
    public const int MessageServiceFieldNumber = 2;
    private bool hasMessageService;
    private string messageService_ = "";
    public bool HasMessageService {
      get { return hasMessageService; }
    }
    public string MessageService {
      get { return messageService_; }
    }
    
    public const int ServiceFieldNumber = 3;
    private bool hasService;
    private string service_ = "";
    public bool HasService {
      get { return hasService; }
    }
    public string Service {
      get { return service_; }
    }
    
    public const int MessageTypeFieldNumber = 4;
    private bool hasMessageType;
    private global::PBWrapMsgOG.MessageType messageType_ = global::PBWrapMsgOG.MessageType.SEND_PENDING_ORDER;
    public bool HasMessageType {
      get { return hasMessageType; }
    }
    public global::PBWrapMsgOG.MessageType MessageType {
      get { return messageType_; }
    }
    
    public const int ChildOrderIdFieldNumber = 5;
    private bool hasChildOrderId;
    private string childOrderId_ = "";
    public bool HasChildOrderId {
      get { return hasChildOrderId; }
    }
    public string ChildOrderId {
      get { return childOrderId_; }
    }
    
    public const int ParentOrderIdFieldNumber = 6;
    private bool hasParentOrderId;
    private string parentOrderId_ = "";
    public bool HasParentOrderId {
      get { return hasParentOrderId; }
    }
    public string ParentOrderId {
      get { return parentOrderId_; }
    }
    
    public const int StrategyFieldNumber = 7;
    private bool hasStrategy;
    private string strategy_ = "";
    public bool HasStrategy {
      get { return hasStrategy; }
    }
    public string Strategy {
      get { return strategy_; }
    }
    
    public const int SymbolFieldNumber = 8;
    private bool hasSymbol;
    private string symbol_ = "";
    public bool HasSymbol {
      get { return hasSymbol; }
    }
    public string Symbol {
      get { return symbol_; }
    }
    
    public const int PendingSizeFieldNumber = 9;
    private bool hasPendingSize;
    private int pendingSize_;
    public bool HasPendingSize {
      get { return hasPendingSize; }
    }
    public int PendingSize {
      get { return pendingSize_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasMessageId) return false;
        if (!hasMessageService) return false;
        if (!hasService) return false;
        if (!hasMessageType) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _pBMsgOGMCFieldNames;
      if (hasMessageId) {
        output.WriteInt32(1, field_names[1], MessageId);
      }
      if (hasMessageService) {
        output.WriteString(2, field_names[2], MessageService);
      }
      if (hasService) {
        output.WriteString(3, field_names[6], Service);
      }
      if (hasMessageType) {
        output.WriteEnum(4, field_names[3], (int) MessageType, MessageType);
      }
      if (hasChildOrderId) {
        output.WriteString(5, field_names[0], ChildOrderId);
      }
      if (hasParentOrderId) {
        output.WriteString(6, field_names[4], ParentOrderId);
      }
      if (hasStrategy) {
        output.WriteString(7, field_names[7], Strategy);
      }
      if (hasSymbol) {
        output.WriteString(8, field_names[8], Symbol);
      }
      if (hasPendingSize) {
        output.WriteInt32(9, field_names[5], PendingSize);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasMessageId) {
          size += pb::CodedOutputStream.ComputeInt32Size(1, MessageId);
        }
        if (hasMessageService) {
          size += pb::CodedOutputStream.ComputeStringSize(2, MessageService);
        }
        if (hasService) {
          size += pb::CodedOutputStream.ComputeStringSize(3, Service);
        }
        if (hasMessageType) {
          size += pb::CodedOutputStream.ComputeEnumSize(4, (int) MessageType);
        }
        if (hasChildOrderId) {
          size += pb::CodedOutputStream.ComputeStringSize(5, ChildOrderId);
        }
        if (hasParentOrderId) {
          size += pb::CodedOutputStream.ComputeStringSize(6, ParentOrderId);
        }
        if (hasStrategy) {
          size += pb::CodedOutputStream.ComputeStringSize(7, Strategy);
        }
        if (hasSymbol) {
          size += pb::CodedOutputStream.ComputeStringSize(8, Symbol);
        }
        if (hasPendingSize) {
          size += pb::CodedOutputStream.ComputeInt32Size(9, PendingSize);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static PBMsgOGMC ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static PBMsgOGMC ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static PBMsgOGMC ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static PBMsgOGMC ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static PBMsgOGMC ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static PBMsgOGMC ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static PBMsgOGMC ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static PBMsgOGMC ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static PBMsgOGMC ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static PBMsgOGMC ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private PBMsgOGMC MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(PBMsgOGMC prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<PBMsgOGMC, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(PBMsgOGMC cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private PBMsgOGMC result;
      
      private PBMsgOGMC PrepareBuilder() {
        if (resultIsReadOnly) {
          PBMsgOGMC original = result;
          result = new PBMsgOGMC();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override PBMsgOGMC MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::PBWrapMsgOG.PBMsgOGMC.Descriptor; }
      }
      
      public override PBMsgOGMC DefaultInstanceForType {
        get { return global::PBWrapMsgOG.PBMsgOGMC.DefaultInstance; }
      }
      
      public override PBMsgOGMC BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is PBMsgOGMC) {
          return MergeFrom((PBMsgOGMC) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(PBMsgOGMC other) {
        if (other == global::PBWrapMsgOG.PBMsgOGMC.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasMessageId) {
          MessageId = other.MessageId;
        }
        if (other.HasMessageService) {
          MessageService = other.MessageService;
        }
        if (other.HasService) {
          Service = other.Service;
        }
        if (other.HasMessageType) {
          MessageType = other.MessageType;
        }
        if (other.HasChildOrderId) {
          ChildOrderId = other.ChildOrderId;
        }
        if (other.HasParentOrderId) {
          ParentOrderId = other.ParentOrderId;
        }
        if (other.HasStrategy) {
          Strategy = other.Strategy;
        }
        if (other.HasSymbol) {
          Symbol = other.Symbol;
        }
        if (other.HasPendingSize) {
          PendingSize = other.PendingSize;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_pBMsgOGMCFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _pBMsgOGMCFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasMessageId = input.ReadInt32(ref result.messageId_);
              break;
            }
            case 18: {
              result.hasMessageService = input.ReadString(ref result.messageService_);
              break;
            }
            case 26: {
              result.hasService = input.ReadString(ref result.service_);
              break;
            }
            case 32: {
              object unknown;
              if(input.ReadEnum(ref result.messageType_, out unknown)) {
                result.hasMessageType = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(4, (ulong)(int)unknown);
              }
              break;
            }
            case 42: {
              result.hasChildOrderId = input.ReadString(ref result.childOrderId_);
              break;
            }
            case 50: {
              result.hasParentOrderId = input.ReadString(ref result.parentOrderId_);
              break;
            }
            case 58: {
              result.hasStrategy = input.ReadString(ref result.strategy_);
              break;
            }
            case 66: {
              result.hasSymbol = input.ReadString(ref result.symbol_);
              break;
            }
            case 72: {
              result.hasPendingSize = input.ReadInt32(ref result.pendingSize_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasMessageId {
        get { return result.hasMessageId; }
      }
      public int MessageId {
        get { return result.MessageId; }
        set { SetMessageId(value); }
      }
      public Builder SetMessageId(int value) {
        PrepareBuilder();
        result.hasMessageId = true;
        result.messageId_ = value;
        return this;
      }
      public Builder ClearMessageId() {
        PrepareBuilder();
        result.hasMessageId = false;
        result.messageId_ = 0;
        return this;
      }
      
      public bool HasMessageService {
        get { return result.hasMessageService; }
      }
      public string MessageService {
        get { return result.MessageService; }
        set { SetMessageService(value); }
      }
      public Builder SetMessageService(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasMessageService = true;
        result.messageService_ = value;
        return this;
      }
      public Builder ClearMessageService() {
        PrepareBuilder();
        result.hasMessageService = false;
        result.messageService_ = "";
        return this;
      }
      
      public bool HasService {
        get { return result.hasService; }
      }
      public string Service {
        get { return result.Service; }
        set { SetService(value); }
      }
      public Builder SetService(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasService = true;
        result.service_ = value;
        return this;
      }
      public Builder ClearService() {
        PrepareBuilder();
        result.hasService = false;
        result.service_ = "";
        return this;
      }
      
      public bool HasMessageType {
       get { return result.hasMessageType; }
      }
      public global::PBWrapMsgOG.MessageType MessageType {
        get { return result.MessageType; }
        set { SetMessageType(value); }
      }
      public Builder SetMessageType(global::PBWrapMsgOG.MessageType value) {
        PrepareBuilder();
        result.hasMessageType = true;
        result.messageType_ = value;
        return this;
      }
      public Builder ClearMessageType() {
        PrepareBuilder();
        result.hasMessageType = false;
        result.messageType_ = global::PBWrapMsgOG.MessageType.SEND_PENDING_ORDER;
        return this;
      }
      
      public bool HasChildOrderId {
        get { return result.hasChildOrderId; }
      }
      public string ChildOrderId {
        get { return result.ChildOrderId; }
        set { SetChildOrderId(value); }
      }
      public Builder SetChildOrderId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasChildOrderId = true;
        result.childOrderId_ = value;
        return this;
      }
      public Builder ClearChildOrderId() {
        PrepareBuilder();
        result.hasChildOrderId = false;
        result.childOrderId_ = "";
        return this;
      }
      
      public bool HasParentOrderId {
        get { return result.hasParentOrderId; }
      }
      public string ParentOrderId {
        get { return result.ParentOrderId; }
        set { SetParentOrderId(value); }
      }
      public Builder SetParentOrderId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasParentOrderId = true;
        result.parentOrderId_ = value;
        return this;
      }
      public Builder ClearParentOrderId() {
        PrepareBuilder();
        result.hasParentOrderId = false;
        result.parentOrderId_ = "";
        return this;
      }
      
      public bool HasStrategy {
        get { return result.hasStrategy; }
      }
      public string Strategy {
        get { return result.Strategy; }
        set { SetStrategy(value); }
      }
      public Builder SetStrategy(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasStrategy = true;
        result.strategy_ = value;
        return this;
      }
      public Builder ClearStrategy() {
        PrepareBuilder();
        result.hasStrategy = false;
        result.strategy_ = "";
        return this;
      }
      
      public bool HasSymbol {
        get { return result.hasSymbol; }
      }
      public string Symbol {
        get { return result.Symbol; }
        set { SetSymbol(value); }
      }
      public Builder SetSymbol(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSymbol = true;
        result.symbol_ = value;
        return this;
      }
      public Builder ClearSymbol() {
        PrepareBuilder();
        result.hasSymbol = false;
        result.symbol_ = "";
        return this;
      }
      
      public bool HasPendingSize {
        get { return result.hasPendingSize; }
      }
      public int PendingSize {
        get { return result.PendingSize; }
        set { SetPendingSize(value); }
      }
      public Builder SetPendingSize(int value) {
        PrepareBuilder();
        result.hasPendingSize = true;
        result.pendingSize_ = value;
        return this;
      }
      public Builder ClearPendingSize() {
        PrepareBuilder();
        result.hasPendingSize = false;
        result.pendingSize_ = 0;
        return this;
      }
    }
    static PBMsgOGMC() {
      object.ReferenceEquals(global::PBWrapMsgOG.Generated.PBMsgOG.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class PBMsgOGOrdEqt : pb::GeneratedMessage<PBMsgOGOrdEqt, PBMsgOGOrdEqt.Builder> {
    private PBMsgOGOrdEqt() { }
    private static readonly PBMsgOGOrdEqt defaultInstance = new PBMsgOGOrdEqt().MakeReadOnly();
    private static readonly string[] _pBMsgOGOrdEqtFieldNames = new string[] { "childOrderId", "equityMarket", "executeType", "orderDirection", "orderType", "price", "size", "symbol" };
    private static readonly uint[] _pBMsgOGOrdEqtFieldTags = new uint[] { 66, 24, 32, 40, 16, 49, 56, 10 };
    public static PBMsgOGOrdEqt DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override PBMsgOGOrdEqt DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override PBMsgOGOrdEqt ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::PBWrapMsgOG.Generated.PBMsgOG.internal__static_PBWrapMsgOG_PBMsgOGOrdEqt__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<PBMsgOGOrdEqt, PBMsgOGOrdEqt.Builder> InternalFieldAccessors {
      get { return global::PBWrapMsgOG.Generated.PBMsgOG.internal__static_PBWrapMsgOG_PBMsgOGOrdEqt__FieldAccessorTable; }
    }
    
    public const int SymbolFieldNumber = 1;
    private bool hasSymbol;
    private string symbol_ = "";
    public bool HasSymbol {
      get { return hasSymbol; }
    }
    public string Symbol {
      get { return symbol_; }
    }
    
    public const int OrderTypeFieldNumber = 2;
    private bool hasOrderType;
    private global::PBWrapMsgOG.OrderType orderType_ = global::PBWrapMsgOG.OrderType.NEW;
    public bool HasOrderType {
      get { return hasOrderType; }
    }
    public global::PBWrapMsgOG.OrderType OrderType {
      get { return orderType_; }
    }
    
    public const int EquityMarketFieldNumber = 3;
    private bool hasEquityMarket;
    private global::PBWrapMsgOG.EquityMarket equityMarket_ = global::PBWrapMsgOG.EquityMarket.SH;
    public bool HasEquityMarket {
      get { return hasEquityMarket; }
    }
    public global::PBWrapMsgOG.EquityMarket EquityMarket {
      get { return equityMarket_; }
    }
    
    public const int ExecuteTypeFieldNumber = 4;
    private bool hasExecuteType;
    private global::PBWrapMsgOG.ExecuteType executeType_ = global::PBWrapMsgOG.ExecuteType.MARKET;
    public bool HasExecuteType {
      get { return hasExecuteType; }
    }
    public global::PBWrapMsgOG.ExecuteType ExecuteType {
      get { return executeType_; }
    }
    
    public const int OrderDirectionFieldNumber = 5;
    private bool hasOrderDirection;
    private global::PBWrapMsgOG.OrderDirection orderDirection_ = global::PBWrapMsgOG.OrderDirection.BUY;
    public bool HasOrderDirection {
      get { return hasOrderDirection; }
    }
    public global::PBWrapMsgOG.OrderDirection OrderDirection {
      get { return orderDirection_; }
    }
    
    public const int PriceFieldNumber = 6;
    private bool hasPrice;
    private double price_;
    public bool HasPrice {
      get { return hasPrice; }
    }
    public double Price {
      get { return price_; }
    }
    
    public const int SizeFieldNumber = 7;
    private bool hasSize;
    private int size_;
    public bool HasSize {
      get { return hasSize; }
    }
    public int Size {
      get { return size_; }
    }
    
    public const int ChildOrderIdFieldNumber = 8;
    private bool hasChildOrderId;
    private string childOrderId_ = "";
    public bool HasChildOrderId {
      get { return hasChildOrderId; }
    }
    public string ChildOrderId {
      get { return childOrderId_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasSymbol) return false;
        if (!hasOrderType) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _pBMsgOGOrdEqtFieldNames;
      if (hasSymbol) {
        output.WriteString(1, field_names[7], Symbol);
      }
      if (hasOrderType) {
        output.WriteEnum(2, field_names[4], (int) OrderType, OrderType);
      }
      if (hasEquityMarket) {
        output.WriteEnum(3, field_names[1], (int) EquityMarket, EquityMarket);
      }
      if (hasExecuteType) {
        output.WriteEnum(4, field_names[2], (int) ExecuteType, ExecuteType);
      }
      if (hasOrderDirection) {
        output.WriteEnum(5, field_names[3], (int) OrderDirection, OrderDirection);
      }
      if (hasPrice) {
        output.WriteDouble(6, field_names[5], Price);
      }
      if (hasSize) {
        output.WriteInt32(7, field_names[6], Size);
      }
      if (hasChildOrderId) {
        output.WriteString(8, field_names[0], ChildOrderId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasSymbol) {
          size += pb::CodedOutputStream.ComputeStringSize(1, Symbol);
        }
        if (hasOrderType) {
          size += pb::CodedOutputStream.ComputeEnumSize(2, (int) OrderType);
        }
        if (hasEquityMarket) {
          size += pb::CodedOutputStream.ComputeEnumSize(3, (int) EquityMarket);
        }
        if (hasExecuteType) {
          size += pb::CodedOutputStream.ComputeEnumSize(4, (int) ExecuteType);
        }
        if (hasOrderDirection) {
          size += pb::CodedOutputStream.ComputeEnumSize(5, (int) OrderDirection);
        }
        if (hasPrice) {
          size += pb::CodedOutputStream.ComputeDoubleSize(6, Price);
        }
        if (hasSize) {
          size += pb::CodedOutputStream.ComputeInt32Size(7, Size);
        }
        if (hasChildOrderId) {
          size += pb::CodedOutputStream.ComputeStringSize(8, ChildOrderId);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static PBMsgOGOrdEqt ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static PBMsgOGOrdEqt ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static PBMsgOGOrdEqt ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static PBMsgOGOrdEqt ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static PBMsgOGOrdEqt ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static PBMsgOGOrdEqt ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static PBMsgOGOrdEqt ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static PBMsgOGOrdEqt ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static PBMsgOGOrdEqt ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static PBMsgOGOrdEqt ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private PBMsgOGOrdEqt MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(PBMsgOGOrdEqt prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<PBMsgOGOrdEqt, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(PBMsgOGOrdEqt cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private PBMsgOGOrdEqt result;
      
      private PBMsgOGOrdEqt PrepareBuilder() {
        if (resultIsReadOnly) {
          PBMsgOGOrdEqt original = result;
          result = new PBMsgOGOrdEqt();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override PBMsgOGOrdEqt MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::PBWrapMsgOG.PBMsgOGOrdEqt.Descriptor; }
      }
      
      public override PBMsgOGOrdEqt DefaultInstanceForType {
        get { return global::PBWrapMsgOG.PBMsgOGOrdEqt.DefaultInstance; }
      }
      
      public override PBMsgOGOrdEqt BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is PBMsgOGOrdEqt) {
          return MergeFrom((PBMsgOGOrdEqt) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(PBMsgOGOrdEqt other) {
        if (other == global::PBWrapMsgOG.PBMsgOGOrdEqt.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasSymbol) {
          Symbol = other.Symbol;
        }
        if (other.HasOrderType) {
          OrderType = other.OrderType;
        }
        if (other.HasEquityMarket) {
          EquityMarket = other.EquityMarket;
        }
        if (other.HasExecuteType) {
          ExecuteType = other.ExecuteType;
        }
        if (other.HasOrderDirection) {
          OrderDirection = other.OrderDirection;
        }
        if (other.HasPrice) {
          Price = other.Price;
        }
        if (other.HasSize) {
          Size = other.Size;
        }
        if (other.HasChildOrderId) {
          ChildOrderId = other.ChildOrderId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_pBMsgOGOrdEqtFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _pBMsgOGOrdEqtFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasSymbol = input.ReadString(ref result.symbol_);
              break;
            }
            case 16: {
              object unknown;
              if(input.ReadEnum(ref result.orderType_, out unknown)) {
                result.hasOrderType = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(2, (ulong)(int)unknown);
              }
              break;
            }
            case 24: {
              object unknown;
              if(input.ReadEnum(ref result.equityMarket_, out unknown)) {
                result.hasEquityMarket = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(3, (ulong)(int)unknown);
              }
              break;
            }
            case 32: {
              object unknown;
              if(input.ReadEnum(ref result.executeType_, out unknown)) {
                result.hasExecuteType = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(4, (ulong)(int)unknown);
              }
              break;
            }
            case 40: {
              object unknown;
              if(input.ReadEnum(ref result.orderDirection_, out unknown)) {
                result.hasOrderDirection = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(5, (ulong)(int)unknown);
              }
              break;
            }
            case 49: {
              result.hasPrice = input.ReadDouble(ref result.price_);
              break;
            }
            case 56: {
              result.hasSize = input.ReadInt32(ref result.size_);
              break;
            }
            case 66: {
              result.hasChildOrderId = input.ReadString(ref result.childOrderId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasSymbol {
        get { return result.hasSymbol; }
      }
      public string Symbol {
        get { return result.Symbol; }
        set { SetSymbol(value); }
      }
      public Builder SetSymbol(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSymbol = true;
        result.symbol_ = value;
        return this;
      }
      public Builder ClearSymbol() {
        PrepareBuilder();
        result.hasSymbol = false;
        result.symbol_ = "";
        return this;
      }
      
      public bool HasOrderType {
       get { return result.hasOrderType; }
      }
      public global::PBWrapMsgOG.OrderType OrderType {
        get { return result.OrderType; }
        set { SetOrderType(value); }
      }
      public Builder SetOrderType(global::PBWrapMsgOG.OrderType value) {
        PrepareBuilder();
        result.hasOrderType = true;
        result.orderType_ = value;
        return this;
      }
      public Builder ClearOrderType() {
        PrepareBuilder();
        result.hasOrderType = false;
        result.orderType_ = global::PBWrapMsgOG.OrderType.NEW;
        return this;
      }
      
      public bool HasEquityMarket {
       get { return result.hasEquityMarket; }
      }
      public global::PBWrapMsgOG.EquityMarket EquityMarket {
        get { return result.EquityMarket; }
        set { SetEquityMarket(value); }
      }
      public Builder SetEquityMarket(global::PBWrapMsgOG.EquityMarket value) {
        PrepareBuilder();
        result.hasEquityMarket = true;
        result.equityMarket_ = value;
        return this;
      }
      public Builder ClearEquityMarket() {
        PrepareBuilder();
        result.hasEquityMarket = false;
        result.equityMarket_ = global::PBWrapMsgOG.EquityMarket.SH;
        return this;
      }
      
      public bool HasExecuteType {
       get { return result.hasExecuteType; }
      }
      public global::PBWrapMsgOG.ExecuteType ExecuteType {
        get { return result.ExecuteType; }
        set { SetExecuteType(value); }
      }
      public Builder SetExecuteType(global::PBWrapMsgOG.ExecuteType value) {
        PrepareBuilder();
        result.hasExecuteType = true;
        result.executeType_ = value;
        return this;
      }
      public Builder ClearExecuteType() {
        PrepareBuilder();
        result.hasExecuteType = false;
        result.executeType_ = global::PBWrapMsgOG.ExecuteType.MARKET;
        return this;
      }
      
      public bool HasOrderDirection {
       get { return result.hasOrderDirection; }
      }
      public global::PBWrapMsgOG.OrderDirection OrderDirection {
        get { return result.OrderDirection; }
        set { SetOrderDirection(value); }
      }
      public Builder SetOrderDirection(global::PBWrapMsgOG.OrderDirection value) {
        PrepareBuilder();
        result.hasOrderDirection = true;
        result.orderDirection_ = value;
        return this;
      }
      public Builder ClearOrderDirection() {
        PrepareBuilder();
        result.hasOrderDirection = false;
        result.orderDirection_ = global::PBWrapMsgOG.OrderDirection.BUY;
        return this;
      }
      
      public bool HasPrice {
        get { return result.hasPrice; }
      }
      public double Price {
        get { return result.Price; }
        set { SetPrice(value); }
      }
      public Builder SetPrice(double value) {
        PrepareBuilder();
        result.hasPrice = true;
        result.price_ = value;
        return this;
      }
      public Builder ClearPrice() {
        PrepareBuilder();
        result.hasPrice = false;
        result.price_ = 0D;
        return this;
      }
      
      public bool HasSize {
        get { return result.hasSize; }
      }
      public int Size {
        get { return result.Size; }
        set { SetSize(value); }
      }
      public Builder SetSize(int value) {
        PrepareBuilder();
        result.hasSize = true;
        result.size_ = value;
        return this;
      }
      public Builder ClearSize() {
        PrepareBuilder();
        result.hasSize = false;
        result.size_ = 0;
        return this;
      }
      
      public bool HasChildOrderId {
        get { return result.hasChildOrderId; }
      }
      public string ChildOrderId {
        get { return result.ChildOrderId; }
        set { SetChildOrderId(value); }
      }
      public Builder SetChildOrderId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasChildOrderId = true;
        result.childOrderId_ = value;
        return this;
      }
      public Builder ClearChildOrderId() {
        PrepareBuilder();
        result.hasChildOrderId = false;
        result.childOrderId_ = "";
        return this;
      }
    }
    static PBMsgOGOrdEqt() {
      object.ReferenceEquals(global::PBWrapMsgOG.Generated.PBMsgOG.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class PBMsgOGOrdFut : pb::GeneratedMessage<PBMsgOGOrdFut, PBMsgOGOrdFut.Builder> {
    private PBMsgOGOrdFut() { }
    private static readonly PBMsgOGOrdFut defaultInstance = new PBMsgOGOrdFut().MakeReadOnly();
    private static readonly string[] _pBMsgOGOrdFutFieldNames = new string[] { "childOrderId", "executeType", "futureAccountType", "futureFlag", "orderDirection", "orderType", "price", "size", "stopPrice", "symbol", "timeType" };
    private static readonly uint[] _pBMsgOGOrdFutFieldTags = new uint[] { 74, 32, 48, 24, 40, 16, 57, 64, 89, 10, 80 };
    public static PBMsgOGOrdFut DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override PBMsgOGOrdFut DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override PBMsgOGOrdFut ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::PBWrapMsgOG.Generated.PBMsgOG.internal__static_PBWrapMsgOG_PBMsgOGOrdFut__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<PBMsgOGOrdFut, PBMsgOGOrdFut.Builder> InternalFieldAccessors {
      get { return global::PBWrapMsgOG.Generated.PBMsgOG.internal__static_PBWrapMsgOG_PBMsgOGOrdFut__FieldAccessorTable; }
    }
    
    public const int SymbolFieldNumber = 1;
    private bool hasSymbol;
    private string symbol_ = "";
    public bool HasSymbol {
      get { return hasSymbol; }
    }
    public string Symbol {
      get { return symbol_; }
    }
    
    public const int OrderTypeFieldNumber = 2;
    private bool hasOrderType;
    private global::PBWrapMsgOG.OrderType orderType_ = global::PBWrapMsgOG.OrderType.NEW;
    public bool HasOrderType {
      get { return hasOrderType; }
    }
    public global::PBWrapMsgOG.OrderType OrderType {
      get { return orderType_; }
    }
    
    public const int FutureFlagFieldNumber = 3;
    private bool hasFutureFlag;
    private global::PBWrapMsgOG.FutureFlag futureFlag_ = global::PBWrapMsgOG.FutureFlag.OPEN;
    public bool HasFutureFlag {
      get { return hasFutureFlag; }
    }
    public global::PBWrapMsgOG.FutureFlag FutureFlag {
      get { return futureFlag_; }
    }
    
    public const int ExecuteTypeFieldNumber = 4;
    private bool hasExecuteType;
    private global::PBWrapMsgOG.ExecuteType executeType_ = global::PBWrapMsgOG.ExecuteType.MARKET;
    public bool HasExecuteType {
      get { return hasExecuteType; }
    }
    public global::PBWrapMsgOG.ExecuteType ExecuteType {
      get { return executeType_; }
    }
    
    public const int OrderDirectionFieldNumber = 5;
    private bool hasOrderDirection;
    private global::PBWrapMsgOG.OrderDirection orderDirection_ = global::PBWrapMsgOG.OrderDirection.BUY;
    public bool HasOrderDirection {
      get { return hasOrderDirection; }
    }
    public global::PBWrapMsgOG.OrderDirection OrderDirection {
      get { return orderDirection_; }
    }
    
    public const int FutureAccountTypeFieldNumber = 6;
    private bool hasFutureAccountType;
    private global::PBWrapMsgOG.FutureAccountType futureAccountType_ = global::PBWrapMsgOG.FutureAccountType.SPECULATION;
    public bool HasFutureAccountType {
      get { return hasFutureAccountType; }
    }
    public global::PBWrapMsgOG.FutureAccountType FutureAccountType {
      get { return futureAccountType_; }
    }
    
    public const int PriceFieldNumber = 7;
    private bool hasPrice;
    private double price_;
    public bool HasPrice {
      get { return hasPrice; }
    }
    public double Price {
      get { return price_; }
    }
    
    public const int SizeFieldNumber = 8;
    private bool hasSize;
    private int size_;
    public bool HasSize {
      get { return hasSize; }
    }
    public int Size {
      get { return size_; }
    }
    
    public const int ChildOrderIdFieldNumber = 9;
    private bool hasChildOrderId;
    private string childOrderId_ = "";
    public bool HasChildOrderId {
      get { return hasChildOrderId; }
    }
    public string ChildOrderId {
      get { return childOrderId_; }
    }
    
    public const int TimeTypeFieldNumber = 10;
    private bool hasTimeType;
    private global::PBWrapMsgOG.TimeType timeType_ = global::PBWrapMsgOG.TimeType.WHOLEDAY;
    public bool HasTimeType {
      get { return hasTimeType; }
    }
    public global::PBWrapMsgOG.TimeType TimeType {
      get { return timeType_; }
    }
    
    public const int StopPriceFieldNumber = 11;
    private bool hasStopPrice;
    private double stopPrice_;
    public bool HasStopPrice {
      get { return hasStopPrice; }
    }
    public double StopPrice {
      get { return stopPrice_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasSymbol) return false;
        if (!hasOrderType) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _pBMsgOGOrdFutFieldNames;
      if (hasSymbol) {
        output.WriteString(1, field_names[9], Symbol);
      }
      if (hasOrderType) {
        output.WriteEnum(2, field_names[5], (int) OrderType, OrderType);
      }
      if (hasFutureFlag) {
        output.WriteEnum(3, field_names[3], (int) FutureFlag, FutureFlag);
      }
      if (hasExecuteType) {
        output.WriteEnum(4, field_names[1], (int) ExecuteType, ExecuteType);
      }
      if (hasOrderDirection) {
        output.WriteEnum(5, field_names[4], (int) OrderDirection, OrderDirection);
      }
      if (hasFutureAccountType) {
        output.WriteEnum(6, field_names[2], (int) FutureAccountType, FutureAccountType);
      }
      if (hasPrice) {
        output.WriteDouble(7, field_names[6], Price);
      }
      if (hasSize) {
        output.WriteInt32(8, field_names[7], Size);
      }
      if (hasChildOrderId) {
        output.WriteString(9, field_names[0], ChildOrderId);
      }
      if (hasTimeType) {
        output.WriteEnum(10, field_names[10], (int) TimeType, TimeType);
      }
      if (hasStopPrice) {
        output.WriteDouble(11, field_names[8], StopPrice);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasSymbol) {
          size += pb::CodedOutputStream.ComputeStringSize(1, Symbol);
        }
        if (hasOrderType) {
          size += pb::CodedOutputStream.ComputeEnumSize(2, (int) OrderType);
        }
        if (hasFutureFlag) {
          size += pb::CodedOutputStream.ComputeEnumSize(3, (int) FutureFlag);
        }
        if (hasExecuteType) {
          size += pb::CodedOutputStream.ComputeEnumSize(4, (int) ExecuteType);
        }
        if (hasOrderDirection) {
          size += pb::CodedOutputStream.ComputeEnumSize(5, (int) OrderDirection);
        }
        if (hasFutureAccountType) {
          size += pb::CodedOutputStream.ComputeEnumSize(6, (int) FutureAccountType);
        }
        if (hasPrice) {
          size += pb::CodedOutputStream.ComputeDoubleSize(7, Price);
        }
        if (hasSize) {
          size += pb::CodedOutputStream.ComputeInt32Size(8, Size);
        }
        if (hasChildOrderId) {
          size += pb::CodedOutputStream.ComputeStringSize(9, ChildOrderId);
        }
        if (hasTimeType) {
          size += pb::CodedOutputStream.ComputeEnumSize(10, (int) TimeType);
        }
        if (hasStopPrice) {
          size += pb::CodedOutputStream.ComputeDoubleSize(11, StopPrice);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static PBMsgOGOrdFut ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static PBMsgOGOrdFut ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static PBMsgOGOrdFut ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static PBMsgOGOrdFut ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static PBMsgOGOrdFut ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static PBMsgOGOrdFut ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static PBMsgOGOrdFut ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static PBMsgOGOrdFut ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static PBMsgOGOrdFut ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static PBMsgOGOrdFut ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private PBMsgOGOrdFut MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(PBMsgOGOrdFut prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<PBMsgOGOrdFut, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(PBMsgOGOrdFut cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private PBMsgOGOrdFut result;
      
      private PBMsgOGOrdFut PrepareBuilder() {
        if (resultIsReadOnly) {
          PBMsgOGOrdFut original = result;
          result = new PBMsgOGOrdFut();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override PBMsgOGOrdFut MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::PBWrapMsgOG.PBMsgOGOrdFut.Descriptor; }
      }
      
      public override PBMsgOGOrdFut DefaultInstanceForType {
        get { return global::PBWrapMsgOG.PBMsgOGOrdFut.DefaultInstance; }
      }
      
      public override PBMsgOGOrdFut BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is PBMsgOGOrdFut) {
          return MergeFrom((PBMsgOGOrdFut) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(PBMsgOGOrdFut other) {
        if (other == global::PBWrapMsgOG.PBMsgOGOrdFut.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasSymbol) {
          Symbol = other.Symbol;
        }
        if (other.HasOrderType) {
          OrderType = other.OrderType;
        }
        if (other.HasFutureFlag) {
          FutureFlag = other.FutureFlag;
        }
        if (other.HasExecuteType) {
          ExecuteType = other.ExecuteType;
        }
        if (other.HasOrderDirection) {
          OrderDirection = other.OrderDirection;
        }
        if (other.HasFutureAccountType) {
          FutureAccountType = other.FutureAccountType;
        }
        if (other.HasPrice) {
          Price = other.Price;
        }
        if (other.HasSize) {
          Size = other.Size;
        }
        if (other.HasChildOrderId) {
          ChildOrderId = other.ChildOrderId;
        }
        if (other.HasTimeType) {
          TimeType = other.TimeType;
        }
        if (other.HasStopPrice) {
          StopPrice = other.StopPrice;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_pBMsgOGOrdFutFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _pBMsgOGOrdFutFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasSymbol = input.ReadString(ref result.symbol_);
              break;
            }
            case 16: {
              object unknown;
              if(input.ReadEnum(ref result.orderType_, out unknown)) {
                result.hasOrderType = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(2, (ulong)(int)unknown);
              }
              break;
            }
            case 24: {
              object unknown;
              if(input.ReadEnum(ref result.futureFlag_, out unknown)) {
                result.hasFutureFlag = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(3, (ulong)(int)unknown);
              }
              break;
            }
            case 32: {
              object unknown;
              if(input.ReadEnum(ref result.executeType_, out unknown)) {
                result.hasExecuteType = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(4, (ulong)(int)unknown);
              }
              break;
            }
            case 40: {
              object unknown;
              if(input.ReadEnum(ref result.orderDirection_, out unknown)) {
                result.hasOrderDirection = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(5, (ulong)(int)unknown);
              }
              break;
            }
            case 48: {
              object unknown;
              if(input.ReadEnum(ref result.futureAccountType_, out unknown)) {
                result.hasFutureAccountType = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(6, (ulong)(int)unknown);
              }
              break;
            }
            case 57: {
              result.hasPrice = input.ReadDouble(ref result.price_);
              break;
            }
            case 64: {
              result.hasSize = input.ReadInt32(ref result.size_);
              break;
            }
            case 74: {
              result.hasChildOrderId = input.ReadString(ref result.childOrderId_);
              break;
            }
            case 80: {
              object unknown;
              if(input.ReadEnum(ref result.timeType_, out unknown)) {
                result.hasTimeType = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(10, (ulong)(int)unknown);
              }
              break;
            }
            case 89: {
              result.hasStopPrice = input.ReadDouble(ref result.stopPrice_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasSymbol {
        get { return result.hasSymbol; }
      }
      public string Symbol {
        get { return result.Symbol; }
        set { SetSymbol(value); }
      }
      public Builder SetSymbol(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSymbol = true;
        result.symbol_ = value;
        return this;
      }
      public Builder ClearSymbol() {
        PrepareBuilder();
        result.hasSymbol = false;
        result.symbol_ = "";
        return this;
      }
      
      public bool HasOrderType {
       get { return result.hasOrderType; }
      }
      public global::PBWrapMsgOG.OrderType OrderType {
        get { return result.OrderType; }
        set { SetOrderType(value); }
      }
      public Builder SetOrderType(global::PBWrapMsgOG.OrderType value) {
        PrepareBuilder();
        result.hasOrderType = true;
        result.orderType_ = value;
        return this;
      }
      public Builder ClearOrderType() {
        PrepareBuilder();
        result.hasOrderType = false;
        result.orderType_ = global::PBWrapMsgOG.OrderType.NEW;
        return this;
      }
      
      public bool HasFutureFlag {
       get { return result.hasFutureFlag; }
      }
      public global::PBWrapMsgOG.FutureFlag FutureFlag {
        get { return result.FutureFlag; }
        set { SetFutureFlag(value); }
      }
      public Builder SetFutureFlag(global::PBWrapMsgOG.FutureFlag value) {
        PrepareBuilder();
        result.hasFutureFlag = true;
        result.futureFlag_ = value;
        return this;
      }
      public Builder ClearFutureFlag() {
        PrepareBuilder();
        result.hasFutureFlag = false;
        result.futureFlag_ = global::PBWrapMsgOG.FutureFlag.OPEN;
        return this;
      }
      
      public bool HasExecuteType {
       get { return result.hasExecuteType; }
      }
      public global::PBWrapMsgOG.ExecuteType ExecuteType {
        get { return result.ExecuteType; }
        set { SetExecuteType(value); }
      }
      public Builder SetExecuteType(global::PBWrapMsgOG.ExecuteType value) {
        PrepareBuilder();
        result.hasExecuteType = true;
        result.executeType_ = value;
        return this;
      }
      public Builder ClearExecuteType() {
        PrepareBuilder();
        result.hasExecuteType = false;
        result.executeType_ = global::PBWrapMsgOG.ExecuteType.MARKET;
        return this;
      }
      
      public bool HasOrderDirection {
       get { return result.hasOrderDirection; }
      }
      public global::PBWrapMsgOG.OrderDirection OrderDirection {
        get { return result.OrderDirection; }
        set { SetOrderDirection(value); }
      }
      public Builder SetOrderDirection(global::PBWrapMsgOG.OrderDirection value) {
        PrepareBuilder();
        result.hasOrderDirection = true;
        result.orderDirection_ = value;
        return this;
      }
      public Builder ClearOrderDirection() {
        PrepareBuilder();
        result.hasOrderDirection = false;
        result.orderDirection_ = global::PBWrapMsgOG.OrderDirection.BUY;
        return this;
      }
      
      public bool HasFutureAccountType {
       get { return result.hasFutureAccountType; }
      }
      public global::PBWrapMsgOG.FutureAccountType FutureAccountType {
        get { return result.FutureAccountType; }
        set { SetFutureAccountType(value); }
      }
      public Builder SetFutureAccountType(global::PBWrapMsgOG.FutureAccountType value) {
        PrepareBuilder();
        result.hasFutureAccountType = true;
        result.futureAccountType_ = value;
        return this;
      }
      public Builder ClearFutureAccountType() {
        PrepareBuilder();
        result.hasFutureAccountType = false;
        result.futureAccountType_ = global::PBWrapMsgOG.FutureAccountType.SPECULATION;
        return this;
      }
      
      public bool HasPrice {
        get { return result.hasPrice; }
      }
      public double Price {
        get { return result.Price; }
        set { SetPrice(value); }
      }
      public Builder SetPrice(double value) {
        PrepareBuilder();
        result.hasPrice = true;
        result.price_ = value;
        return this;
      }
      public Builder ClearPrice() {
        PrepareBuilder();
        result.hasPrice = false;
        result.price_ = 0D;
        return this;
      }
      
      public bool HasSize {
        get { return result.hasSize; }
      }
      public int Size {
        get { return result.Size; }
        set { SetSize(value); }
      }
      public Builder SetSize(int value) {
        PrepareBuilder();
        result.hasSize = true;
        result.size_ = value;
        return this;
      }
      public Builder ClearSize() {
        PrepareBuilder();
        result.hasSize = false;
        result.size_ = 0;
        return this;
      }
      
      public bool HasChildOrderId {
        get { return result.hasChildOrderId; }
      }
      public string ChildOrderId {
        get { return result.ChildOrderId; }
        set { SetChildOrderId(value); }
      }
      public Builder SetChildOrderId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasChildOrderId = true;
        result.childOrderId_ = value;
        return this;
      }
      public Builder ClearChildOrderId() {
        PrepareBuilder();
        result.hasChildOrderId = false;
        result.childOrderId_ = "";
        return this;
      }
      
      public bool HasTimeType {
       get { return result.hasTimeType; }
      }
      public global::PBWrapMsgOG.TimeType TimeType {
        get { return result.TimeType; }
        set { SetTimeType(value); }
      }
      public Builder SetTimeType(global::PBWrapMsgOG.TimeType value) {
        PrepareBuilder();
        result.hasTimeType = true;
        result.timeType_ = value;
        return this;
      }
      public Builder ClearTimeType() {
        PrepareBuilder();
        result.hasTimeType = false;
        result.timeType_ = global::PBWrapMsgOG.TimeType.WHOLEDAY;
        return this;
      }
      
      public bool HasStopPrice {
        get { return result.hasStopPrice; }
      }
      public double StopPrice {
        get { return result.StopPrice; }
        set { SetStopPrice(value); }
      }
      public Builder SetStopPrice(double value) {
        PrepareBuilder();
        result.hasStopPrice = true;
        result.stopPrice_ = value;
        return this;
      }
      public Builder ClearStopPrice() {
        PrepareBuilder();
        result.hasStopPrice = false;
        result.stopPrice_ = 0D;
        return this;
      }
    }
    static PBMsgOGOrdFut() {
      object.ReferenceEquals(global::PBWrapMsgOG.Generated.PBMsgOG.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class PBMsgOGOrdEqtList : pb::GeneratedMessage<PBMsgOGOrdEqtList, PBMsgOGOrdEqtList.Builder> {
    private PBMsgOGOrdEqtList() { }
    private static readonly PBMsgOGOrdEqtList defaultInstance = new PBMsgOGOrdEqtList().MakeReadOnly();
    private static readonly string[] _pBMsgOGOrdEqtListFieldNames = new string[] { "batchOrder", "messageId", "messageService", "ogOrdEqtList", "parentOrderId" };
    private static readonly uint[] _pBMsgOGOrdEqtListFieldTags = new uint[] { 40, 8, 18, 34, 26 };
    public static PBMsgOGOrdEqtList DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override PBMsgOGOrdEqtList DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override PBMsgOGOrdEqtList ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::PBWrapMsgOG.Generated.PBMsgOG.internal__static_PBWrapMsgOG_PBMsgOGOrdEqtList__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<PBMsgOGOrdEqtList, PBMsgOGOrdEqtList.Builder> InternalFieldAccessors {
      get { return global::PBWrapMsgOG.Generated.PBMsgOG.internal__static_PBWrapMsgOG_PBMsgOGOrdEqtList__FieldAccessorTable; }
    }
    
    public const int MessageIdFieldNumber = 1;
    private bool hasMessageId;
    private int messageId_;
    public bool HasMessageId {
      get { return hasMessageId; }
    }
    public int MessageId {
      get { return messageId_; }
    }
    
    public const int MessageServiceFieldNumber = 2;
    private bool hasMessageService;
    private string messageService_ = "";
    public bool HasMessageService {
      get { return hasMessageService; }
    }
    public string MessageService {
      get { return messageService_; }
    }
    
    public const int ParentOrderIdFieldNumber = 3;
    private bool hasParentOrderId;
    private string parentOrderId_ = "";
    public bool HasParentOrderId {
      get { return hasParentOrderId; }
    }
    public string ParentOrderId {
      get { return parentOrderId_; }
    }
    
    public const int OgOrdEqtListFieldNumber = 4;
    private pbc::PopsicleList<global::PBWrapMsgOG.PBMsgOGOrdEqt> ogOrdEqtList_ = new pbc::PopsicleList<global::PBWrapMsgOG.PBMsgOGOrdEqt>();
    public scg::IList<global::PBWrapMsgOG.PBMsgOGOrdEqt> OgOrdEqtListList {
      get { return ogOrdEqtList_; }
    }
    public int OgOrdEqtListCount {
      get { return ogOrdEqtList_.Count; }
    }
    public global::PBWrapMsgOG.PBMsgOGOrdEqt GetOgOrdEqtList(int index) {
      return ogOrdEqtList_[index];
    }
    
    public const int BatchOrderFieldNumber = 5;
    private bool hasBatchOrder;
    private bool batchOrder_;
    public bool HasBatchOrder {
      get { return hasBatchOrder; }
    }
    public bool BatchOrder {
      get { return batchOrder_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasBatchOrder) return false;
        foreach (global::PBWrapMsgOG.PBMsgOGOrdEqt element in OgOrdEqtListList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _pBMsgOGOrdEqtListFieldNames;
      if (hasMessageId) {
        output.WriteInt32(1, field_names[1], MessageId);
      }
      if (hasMessageService) {
        output.WriteString(2, field_names[2], MessageService);
      }
      if (hasParentOrderId) {
        output.WriteString(3, field_names[4], ParentOrderId);
      }
      if (ogOrdEqtList_.Count > 0) {
        output.WriteMessageArray(4, field_names[3], ogOrdEqtList_);
      }
      if (hasBatchOrder) {
        output.WriteBool(5, field_names[0], BatchOrder);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasMessageId) {
          size += pb::CodedOutputStream.ComputeInt32Size(1, MessageId);
        }
        if (hasMessageService) {
          size += pb::CodedOutputStream.ComputeStringSize(2, MessageService);
        }
        if (hasParentOrderId) {
          size += pb::CodedOutputStream.ComputeStringSize(3, ParentOrderId);
        }
        foreach (global::PBWrapMsgOG.PBMsgOGOrdEqt element in OgOrdEqtListList) {
          size += pb::CodedOutputStream.ComputeMessageSize(4, element);
        }
        if (hasBatchOrder) {
          size += pb::CodedOutputStream.ComputeBoolSize(5, BatchOrder);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static PBMsgOGOrdEqtList ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static PBMsgOGOrdEqtList ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static PBMsgOGOrdEqtList ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static PBMsgOGOrdEqtList ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static PBMsgOGOrdEqtList ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static PBMsgOGOrdEqtList ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static PBMsgOGOrdEqtList ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static PBMsgOGOrdEqtList ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static PBMsgOGOrdEqtList ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static PBMsgOGOrdEqtList ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private PBMsgOGOrdEqtList MakeReadOnly() {
      ogOrdEqtList_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(PBMsgOGOrdEqtList prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<PBMsgOGOrdEqtList, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(PBMsgOGOrdEqtList cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private PBMsgOGOrdEqtList result;
      
      private PBMsgOGOrdEqtList PrepareBuilder() {
        if (resultIsReadOnly) {
          PBMsgOGOrdEqtList original = result;
          result = new PBMsgOGOrdEqtList();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override PBMsgOGOrdEqtList MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::PBWrapMsgOG.PBMsgOGOrdEqtList.Descriptor; }
      }
      
      public override PBMsgOGOrdEqtList DefaultInstanceForType {
        get { return global::PBWrapMsgOG.PBMsgOGOrdEqtList.DefaultInstance; }
      }
      
      public override PBMsgOGOrdEqtList BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is PBMsgOGOrdEqtList) {
          return MergeFrom((PBMsgOGOrdEqtList) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(PBMsgOGOrdEqtList other) {
        if (other == global::PBWrapMsgOG.PBMsgOGOrdEqtList.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasMessageId) {
          MessageId = other.MessageId;
        }
        if (other.HasMessageService) {
          MessageService = other.MessageService;
        }
        if (other.HasParentOrderId) {
          ParentOrderId = other.ParentOrderId;
        }
        if (other.ogOrdEqtList_.Count != 0) {
          result.ogOrdEqtList_.Add(other.ogOrdEqtList_);
        }
        if (other.HasBatchOrder) {
          BatchOrder = other.BatchOrder;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_pBMsgOGOrdEqtListFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _pBMsgOGOrdEqtListFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasMessageId = input.ReadInt32(ref result.messageId_);
              break;
            }
            case 18: {
              result.hasMessageService = input.ReadString(ref result.messageService_);
              break;
            }
            case 26: {
              result.hasParentOrderId = input.ReadString(ref result.parentOrderId_);
              break;
            }
            case 34: {
              input.ReadMessageArray(tag, field_name, result.ogOrdEqtList_, global::PBWrapMsgOG.PBMsgOGOrdEqt.DefaultInstance, extensionRegistry);
              break;
            }
            case 40: {
              result.hasBatchOrder = input.ReadBool(ref result.batchOrder_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasMessageId {
        get { return result.hasMessageId; }
      }
      public int MessageId {
        get { return result.MessageId; }
        set { SetMessageId(value); }
      }
      public Builder SetMessageId(int value) {
        PrepareBuilder();
        result.hasMessageId = true;
        result.messageId_ = value;
        return this;
      }
      public Builder ClearMessageId() {
        PrepareBuilder();
        result.hasMessageId = false;
        result.messageId_ = 0;
        return this;
      }
      
      public bool HasMessageService {
        get { return result.hasMessageService; }
      }
      public string MessageService {
        get { return result.MessageService; }
        set { SetMessageService(value); }
      }
      public Builder SetMessageService(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasMessageService = true;
        result.messageService_ = value;
        return this;
      }
      public Builder ClearMessageService() {
        PrepareBuilder();
        result.hasMessageService = false;
        result.messageService_ = "";
        return this;
      }
      
      public bool HasParentOrderId {
        get { return result.hasParentOrderId; }
      }
      public string ParentOrderId {
        get { return result.ParentOrderId; }
        set { SetParentOrderId(value); }
      }
      public Builder SetParentOrderId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasParentOrderId = true;
        result.parentOrderId_ = value;
        return this;
      }
      public Builder ClearParentOrderId() {
        PrepareBuilder();
        result.hasParentOrderId = false;
        result.parentOrderId_ = "";
        return this;
      }
      
      public pbc::IPopsicleList<global::PBWrapMsgOG.PBMsgOGOrdEqt> OgOrdEqtListList {
        get { return PrepareBuilder().ogOrdEqtList_; }
      }
      public int OgOrdEqtListCount {
        get { return result.OgOrdEqtListCount; }
      }
      public global::PBWrapMsgOG.PBMsgOGOrdEqt GetOgOrdEqtList(int index) {
        return result.GetOgOrdEqtList(index);
      }
      public Builder SetOgOrdEqtList(int index, global::PBWrapMsgOG.PBMsgOGOrdEqt value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.ogOrdEqtList_[index] = value;
        return this;
      }
      public Builder SetOgOrdEqtList(int index, global::PBWrapMsgOG.PBMsgOGOrdEqt.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.ogOrdEqtList_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddOgOrdEqtList(global::PBWrapMsgOG.PBMsgOGOrdEqt value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.ogOrdEqtList_.Add(value);
        return this;
      }
      public Builder AddOgOrdEqtList(global::PBWrapMsgOG.PBMsgOGOrdEqt.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.ogOrdEqtList_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeOgOrdEqtList(scg::IEnumerable<global::PBWrapMsgOG.PBMsgOGOrdEqt> values) {
        PrepareBuilder();
        result.ogOrdEqtList_.Add(values);
        return this;
      }
      public Builder ClearOgOrdEqtList() {
        PrepareBuilder();
        result.ogOrdEqtList_.Clear();
        return this;
      }
      
      public bool HasBatchOrder {
        get { return result.hasBatchOrder; }
      }
      public bool BatchOrder {
        get { return result.BatchOrder; }
        set { SetBatchOrder(value); }
      }
      public Builder SetBatchOrder(bool value) {
        PrepareBuilder();
        result.hasBatchOrder = true;
        result.batchOrder_ = value;
        return this;
      }
      public Builder ClearBatchOrder() {
        PrepareBuilder();
        result.hasBatchOrder = false;
        result.batchOrder_ = false;
        return this;
      }
    }
    static PBMsgOGOrdEqtList() {
      object.ReferenceEquals(global::PBWrapMsgOG.Generated.PBMsgOG.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class PBMsgOGOrdFutList : pb::GeneratedMessage<PBMsgOGOrdFutList, PBMsgOGOrdFutList.Builder> {
    private PBMsgOGOrdFutList() { }
    private static readonly PBMsgOGOrdFutList defaultInstance = new PBMsgOGOrdFutList().MakeReadOnly();
    private static readonly string[] _pBMsgOGOrdFutListFieldNames = new string[] { "messageId", "messageService", "ogOrdFutList", "parentOrderId" };
    private static readonly uint[] _pBMsgOGOrdFutListFieldTags = new uint[] { 8, 18, 34, 26 };
    public static PBMsgOGOrdFutList DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override PBMsgOGOrdFutList DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override PBMsgOGOrdFutList ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::PBWrapMsgOG.Generated.PBMsgOG.internal__static_PBWrapMsgOG_PBMsgOGOrdFutList__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<PBMsgOGOrdFutList, PBMsgOGOrdFutList.Builder> InternalFieldAccessors {
      get { return global::PBWrapMsgOG.Generated.PBMsgOG.internal__static_PBWrapMsgOG_PBMsgOGOrdFutList__FieldAccessorTable; }
    }
    
    public const int MessageIdFieldNumber = 1;
    private bool hasMessageId;
    private int messageId_;
    public bool HasMessageId {
      get { return hasMessageId; }
    }
    public int MessageId {
      get { return messageId_; }
    }
    
    public const int MessageServiceFieldNumber = 2;
    private bool hasMessageService;
    private string messageService_ = "";
    public bool HasMessageService {
      get { return hasMessageService; }
    }
    public string MessageService {
      get { return messageService_; }
    }
    
    public const int ParentOrderIdFieldNumber = 3;
    private bool hasParentOrderId;
    private string parentOrderId_ = "";
    public bool HasParentOrderId {
      get { return hasParentOrderId; }
    }
    public string ParentOrderId {
      get { return parentOrderId_; }
    }
    
    public const int OgOrdFutListFieldNumber = 4;
    private pbc::PopsicleList<global::PBWrapMsgOG.PBMsgOGOrdFut> ogOrdFutList_ = new pbc::PopsicleList<global::PBWrapMsgOG.PBMsgOGOrdFut>();
    public scg::IList<global::PBWrapMsgOG.PBMsgOGOrdFut> OgOrdFutListList {
      get { return ogOrdFutList_; }
    }
    public int OgOrdFutListCount {
      get { return ogOrdFutList_.Count; }
    }
    public global::PBWrapMsgOG.PBMsgOGOrdFut GetOgOrdFutList(int index) {
      return ogOrdFutList_[index];
    }
    
    public override bool IsInitialized {
      get {
        foreach (global::PBWrapMsgOG.PBMsgOGOrdFut element in OgOrdFutListList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _pBMsgOGOrdFutListFieldNames;
      if (hasMessageId) {
        output.WriteInt32(1, field_names[0], MessageId);
      }
      if (hasMessageService) {
        output.WriteString(2, field_names[1], MessageService);
      }
      if (hasParentOrderId) {
        output.WriteString(3, field_names[3], ParentOrderId);
      }
      if (ogOrdFutList_.Count > 0) {
        output.WriteMessageArray(4, field_names[2], ogOrdFutList_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasMessageId) {
          size += pb::CodedOutputStream.ComputeInt32Size(1, MessageId);
        }
        if (hasMessageService) {
          size += pb::CodedOutputStream.ComputeStringSize(2, MessageService);
        }
        if (hasParentOrderId) {
          size += pb::CodedOutputStream.ComputeStringSize(3, ParentOrderId);
        }
        foreach (global::PBWrapMsgOG.PBMsgOGOrdFut element in OgOrdFutListList) {
          size += pb::CodedOutputStream.ComputeMessageSize(4, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static PBMsgOGOrdFutList ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static PBMsgOGOrdFutList ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static PBMsgOGOrdFutList ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static PBMsgOGOrdFutList ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static PBMsgOGOrdFutList ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static PBMsgOGOrdFutList ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static PBMsgOGOrdFutList ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static PBMsgOGOrdFutList ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static PBMsgOGOrdFutList ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static PBMsgOGOrdFutList ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private PBMsgOGOrdFutList MakeReadOnly() {
      ogOrdFutList_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(PBMsgOGOrdFutList prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<PBMsgOGOrdFutList, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(PBMsgOGOrdFutList cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private PBMsgOGOrdFutList result;
      
      private PBMsgOGOrdFutList PrepareBuilder() {
        if (resultIsReadOnly) {
          PBMsgOGOrdFutList original = result;
          result = new PBMsgOGOrdFutList();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override PBMsgOGOrdFutList MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::PBWrapMsgOG.PBMsgOGOrdFutList.Descriptor; }
      }
      
      public override PBMsgOGOrdFutList DefaultInstanceForType {
        get { return global::PBWrapMsgOG.PBMsgOGOrdFutList.DefaultInstance; }
      }
      
      public override PBMsgOGOrdFutList BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is PBMsgOGOrdFutList) {
          return MergeFrom((PBMsgOGOrdFutList) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(PBMsgOGOrdFutList other) {
        if (other == global::PBWrapMsgOG.PBMsgOGOrdFutList.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasMessageId) {
          MessageId = other.MessageId;
        }
        if (other.HasMessageService) {
          MessageService = other.MessageService;
        }
        if (other.HasParentOrderId) {
          ParentOrderId = other.ParentOrderId;
        }
        if (other.ogOrdFutList_.Count != 0) {
          result.ogOrdFutList_.Add(other.ogOrdFutList_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_pBMsgOGOrdFutListFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _pBMsgOGOrdFutListFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasMessageId = input.ReadInt32(ref result.messageId_);
              break;
            }
            case 18: {
              result.hasMessageService = input.ReadString(ref result.messageService_);
              break;
            }
            case 26: {
              result.hasParentOrderId = input.ReadString(ref result.parentOrderId_);
              break;
            }
            case 34: {
              input.ReadMessageArray(tag, field_name, result.ogOrdFutList_, global::PBWrapMsgOG.PBMsgOGOrdFut.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasMessageId {
        get { return result.hasMessageId; }
      }
      public int MessageId {
        get { return result.MessageId; }
        set { SetMessageId(value); }
      }
      public Builder SetMessageId(int value) {
        PrepareBuilder();
        result.hasMessageId = true;
        result.messageId_ = value;
        return this;
      }
      public Builder ClearMessageId() {
        PrepareBuilder();
        result.hasMessageId = false;
        result.messageId_ = 0;
        return this;
      }
      
      public bool HasMessageService {
        get { return result.hasMessageService; }
      }
      public string MessageService {
        get { return result.MessageService; }
        set { SetMessageService(value); }
      }
      public Builder SetMessageService(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasMessageService = true;
        result.messageService_ = value;
        return this;
      }
      public Builder ClearMessageService() {
        PrepareBuilder();
        result.hasMessageService = false;
        result.messageService_ = "";
        return this;
      }
      
      public bool HasParentOrderId {
        get { return result.hasParentOrderId; }
      }
      public string ParentOrderId {
        get { return result.ParentOrderId; }
        set { SetParentOrderId(value); }
      }
      public Builder SetParentOrderId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasParentOrderId = true;
        result.parentOrderId_ = value;
        return this;
      }
      public Builder ClearParentOrderId() {
        PrepareBuilder();
        result.hasParentOrderId = false;
        result.parentOrderId_ = "";
        return this;
      }
      
      public pbc::IPopsicleList<global::PBWrapMsgOG.PBMsgOGOrdFut> OgOrdFutListList {
        get { return PrepareBuilder().ogOrdFutList_; }
      }
      public int OgOrdFutListCount {
        get { return result.OgOrdFutListCount; }
      }
      public global::PBWrapMsgOG.PBMsgOGOrdFut GetOgOrdFutList(int index) {
        return result.GetOgOrdFutList(index);
      }
      public Builder SetOgOrdFutList(int index, global::PBWrapMsgOG.PBMsgOGOrdFut value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.ogOrdFutList_[index] = value;
        return this;
      }
      public Builder SetOgOrdFutList(int index, global::PBWrapMsgOG.PBMsgOGOrdFut.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.ogOrdFutList_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddOgOrdFutList(global::PBWrapMsgOG.PBMsgOGOrdFut value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.ogOrdFutList_.Add(value);
        return this;
      }
      public Builder AddOgOrdFutList(global::PBWrapMsgOG.PBMsgOGOrdFut.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.ogOrdFutList_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeOgOrdFutList(scg::IEnumerable<global::PBWrapMsgOG.PBMsgOGOrdFut> values) {
        PrepareBuilder();
        result.ogOrdFutList_.Add(values);
        return this;
      }
      public Builder ClearOgOrdFutList() {
        PrepareBuilder();
        result.ogOrdFutList_.Clear();
        return this;
      }
    }
    static PBMsgOGOrdFutList() {
      object.ReferenceEquals(global::PBWrapMsgOG.Generated.PBMsgOG.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class PBMsgOGOrdList : pb::GeneratedMessage<PBMsgOGOrdList, PBMsgOGOrdList.Builder> {
    private PBMsgOGOrdList() { }
    private static readonly PBMsgOGOrdList defaultInstance = new PBMsgOGOrdList().MakeReadOnly();
    private static readonly string[] _pBMsgOGOrdListFieldNames = new string[] { "batchOrder", "messageId", "messageService", "ogOrdEqtList", "ogOrdFutList", "orderListType", "parentOrderId" };
    private static readonly uint[] _pBMsgOGOrdListFieldTags = new uint[] { 48, 8, 18, 34, 42, 56, 26 };
    public static PBMsgOGOrdList DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override PBMsgOGOrdList DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override PBMsgOGOrdList ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::PBWrapMsgOG.Generated.PBMsgOG.internal__static_PBWrapMsgOG_PBMsgOGOrdList__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<PBMsgOGOrdList, PBMsgOGOrdList.Builder> InternalFieldAccessors {
      get { return global::PBWrapMsgOG.Generated.PBMsgOG.internal__static_PBWrapMsgOG_PBMsgOGOrdList__FieldAccessorTable; }
    }
    
    public const int MessageIdFieldNumber = 1;
    private bool hasMessageId;
    private int messageId_;
    public bool HasMessageId {
      get { return hasMessageId; }
    }
    public int MessageId {
      get { return messageId_; }
    }
    
    public const int MessageServiceFieldNumber = 2;
    private bool hasMessageService;
    private string messageService_ = "";
    public bool HasMessageService {
      get { return hasMessageService; }
    }
    public string MessageService {
      get { return messageService_; }
    }
    
    public const int ParentOrderIdFieldNumber = 3;
    private bool hasParentOrderId;
    private string parentOrderId_ = "";
    public bool HasParentOrderId {
      get { return hasParentOrderId; }
    }
    public string ParentOrderId {
      get { return parentOrderId_; }
    }
    
    public const int OgOrdEqtListFieldNumber = 4;
    private pbc::PopsicleList<global::PBWrapMsgOG.PBMsgOGOrdEqt> ogOrdEqtList_ = new pbc::PopsicleList<global::PBWrapMsgOG.PBMsgOGOrdEqt>();
    public scg::IList<global::PBWrapMsgOG.PBMsgOGOrdEqt> OgOrdEqtListList {
      get { return ogOrdEqtList_; }
    }
    public int OgOrdEqtListCount {
      get { return ogOrdEqtList_.Count; }
    }
    public global::PBWrapMsgOG.PBMsgOGOrdEqt GetOgOrdEqtList(int index) {
      return ogOrdEqtList_[index];
    }
    
    public const int OgOrdFutListFieldNumber = 5;
    private pbc::PopsicleList<global::PBWrapMsgOG.PBMsgOGOrdFut> ogOrdFutList_ = new pbc::PopsicleList<global::PBWrapMsgOG.PBMsgOGOrdFut>();
    public scg::IList<global::PBWrapMsgOG.PBMsgOGOrdFut> OgOrdFutListList {
      get { return ogOrdFutList_; }
    }
    public int OgOrdFutListCount {
      get { return ogOrdFutList_.Count; }
    }
    public global::PBWrapMsgOG.PBMsgOGOrdFut GetOgOrdFutList(int index) {
      return ogOrdFutList_[index];
    }
    
    public const int BatchOrderFieldNumber = 6;
    private bool hasBatchOrder;
    private bool batchOrder_;
    public bool HasBatchOrder {
      get { return hasBatchOrder; }
    }
    public bool BatchOrder {
      get { return batchOrder_; }
    }
    
    public const int OrderListTypeFieldNumber = 7;
    private bool hasOrderListType;
    private global::PBWrapMsgOG.OrderType orderListType_ = global::PBWrapMsgOG.OrderType.NEW;
    public bool HasOrderListType {
      get { return hasOrderListType; }
    }
    public global::PBWrapMsgOG.OrderType OrderListType {
      get { return orderListType_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasMessageId) return false;
        if (!hasMessageService) return false;
        if (!hasBatchOrder) return false;
        foreach (global::PBWrapMsgOG.PBMsgOGOrdEqt element in OgOrdEqtListList) {
          if (!element.IsInitialized) return false;
        }
        foreach (global::PBWrapMsgOG.PBMsgOGOrdFut element in OgOrdFutListList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _pBMsgOGOrdListFieldNames;
      if (hasMessageId) {
        output.WriteInt32(1, field_names[1], MessageId);
      }
      if (hasMessageService) {
        output.WriteString(2, field_names[2], MessageService);
      }
      if (hasParentOrderId) {
        output.WriteString(3, field_names[6], ParentOrderId);
      }
      if (ogOrdEqtList_.Count > 0) {
        output.WriteMessageArray(4, field_names[3], ogOrdEqtList_);
      }
      if (ogOrdFutList_.Count > 0) {
        output.WriteMessageArray(5, field_names[4], ogOrdFutList_);
      }
      if (hasBatchOrder) {
        output.WriteBool(6, field_names[0], BatchOrder);
      }
      if (hasOrderListType) {
        output.WriteEnum(7, field_names[5], (int) OrderListType, OrderListType);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasMessageId) {
          size += pb::CodedOutputStream.ComputeInt32Size(1, MessageId);
        }
        if (hasMessageService) {
          size += pb::CodedOutputStream.ComputeStringSize(2, MessageService);
        }
        if (hasParentOrderId) {
          size += pb::CodedOutputStream.ComputeStringSize(3, ParentOrderId);
        }
        foreach (global::PBWrapMsgOG.PBMsgOGOrdEqt element in OgOrdEqtListList) {
          size += pb::CodedOutputStream.ComputeMessageSize(4, element);
        }
        foreach (global::PBWrapMsgOG.PBMsgOGOrdFut element in OgOrdFutListList) {
          size += pb::CodedOutputStream.ComputeMessageSize(5, element);
        }
        if (hasBatchOrder) {
          size += pb::CodedOutputStream.ComputeBoolSize(6, BatchOrder);
        }
        if (hasOrderListType) {
          size += pb::CodedOutputStream.ComputeEnumSize(7, (int) OrderListType);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static PBMsgOGOrdList ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static PBMsgOGOrdList ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static PBMsgOGOrdList ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static PBMsgOGOrdList ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static PBMsgOGOrdList ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static PBMsgOGOrdList ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static PBMsgOGOrdList ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static PBMsgOGOrdList ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static PBMsgOGOrdList ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static PBMsgOGOrdList ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private PBMsgOGOrdList MakeReadOnly() {
      ogOrdEqtList_.MakeReadOnly();
      ogOrdFutList_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(PBMsgOGOrdList prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<PBMsgOGOrdList, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(PBMsgOGOrdList cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private PBMsgOGOrdList result;
      
      private PBMsgOGOrdList PrepareBuilder() {
        if (resultIsReadOnly) {
          PBMsgOGOrdList original = result;
          result = new PBMsgOGOrdList();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override PBMsgOGOrdList MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::PBWrapMsgOG.PBMsgOGOrdList.Descriptor; }
      }
      
      public override PBMsgOGOrdList DefaultInstanceForType {
        get { return global::PBWrapMsgOG.PBMsgOGOrdList.DefaultInstance; }
      }
      
      public override PBMsgOGOrdList BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is PBMsgOGOrdList) {
          return MergeFrom((PBMsgOGOrdList) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(PBMsgOGOrdList other) {
        if (other == global::PBWrapMsgOG.PBMsgOGOrdList.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasMessageId) {
          MessageId = other.MessageId;
        }
        if (other.HasMessageService) {
          MessageService = other.MessageService;
        }
        if (other.HasParentOrderId) {
          ParentOrderId = other.ParentOrderId;
        }
        if (other.ogOrdEqtList_.Count != 0) {
          result.ogOrdEqtList_.Add(other.ogOrdEqtList_);
        }
        if (other.ogOrdFutList_.Count != 0) {
          result.ogOrdFutList_.Add(other.ogOrdFutList_);
        }
        if (other.HasBatchOrder) {
          BatchOrder = other.BatchOrder;
        }
        if (other.HasOrderListType) {
          OrderListType = other.OrderListType;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_pBMsgOGOrdListFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _pBMsgOGOrdListFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasMessageId = input.ReadInt32(ref result.messageId_);
              break;
            }
            case 18: {
              result.hasMessageService = input.ReadString(ref result.messageService_);
              break;
            }
            case 26: {
              result.hasParentOrderId = input.ReadString(ref result.parentOrderId_);
              break;
            }
            case 34: {
              input.ReadMessageArray(tag, field_name, result.ogOrdEqtList_, global::PBWrapMsgOG.PBMsgOGOrdEqt.DefaultInstance, extensionRegistry);
              break;
            }
            case 42: {
              input.ReadMessageArray(tag, field_name, result.ogOrdFutList_, global::PBWrapMsgOG.PBMsgOGOrdFut.DefaultInstance, extensionRegistry);
              break;
            }
            case 48: {
              result.hasBatchOrder = input.ReadBool(ref result.batchOrder_);
              break;
            }
            case 56: {
              object unknown;
              if(input.ReadEnum(ref result.orderListType_, out unknown)) {
                result.hasOrderListType = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(7, (ulong)(int)unknown);
              }
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasMessageId {
        get { return result.hasMessageId; }
      }
      public int MessageId {
        get { return result.MessageId; }
        set { SetMessageId(value); }
      }
      public Builder SetMessageId(int value) {
        PrepareBuilder();
        result.hasMessageId = true;
        result.messageId_ = value;
        return this;
      }
      public Builder ClearMessageId() {
        PrepareBuilder();
        result.hasMessageId = false;
        result.messageId_ = 0;
        return this;
      }
      
      public bool HasMessageService {
        get { return result.hasMessageService; }
      }
      public string MessageService {
        get { return result.MessageService; }
        set { SetMessageService(value); }
      }
      public Builder SetMessageService(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasMessageService = true;
        result.messageService_ = value;
        return this;
      }
      public Builder ClearMessageService() {
        PrepareBuilder();
        result.hasMessageService = false;
        result.messageService_ = "";
        return this;
      }
      
      public bool HasParentOrderId {
        get { return result.hasParentOrderId; }
      }
      public string ParentOrderId {
        get { return result.ParentOrderId; }
        set { SetParentOrderId(value); }
      }
      public Builder SetParentOrderId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasParentOrderId = true;
        result.parentOrderId_ = value;
        return this;
      }
      public Builder ClearParentOrderId() {
        PrepareBuilder();
        result.hasParentOrderId = false;
        result.parentOrderId_ = "";
        return this;
      }
      
      public pbc::IPopsicleList<global::PBWrapMsgOG.PBMsgOGOrdEqt> OgOrdEqtListList {
        get { return PrepareBuilder().ogOrdEqtList_; }
      }
      public int OgOrdEqtListCount {
        get { return result.OgOrdEqtListCount; }
      }
      public global::PBWrapMsgOG.PBMsgOGOrdEqt GetOgOrdEqtList(int index) {
        return result.GetOgOrdEqtList(index);
      }
      public Builder SetOgOrdEqtList(int index, global::PBWrapMsgOG.PBMsgOGOrdEqt value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.ogOrdEqtList_[index] = value;
        return this;
      }
      public Builder SetOgOrdEqtList(int index, global::PBWrapMsgOG.PBMsgOGOrdEqt.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.ogOrdEqtList_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddOgOrdEqtList(global::PBWrapMsgOG.PBMsgOGOrdEqt value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.ogOrdEqtList_.Add(value);
        return this;
      }
      public Builder AddOgOrdEqtList(global::PBWrapMsgOG.PBMsgOGOrdEqt.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.ogOrdEqtList_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeOgOrdEqtList(scg::IEnumerable<global::PBWrapMsgOG.PBMsgOGOrdEqt> values) {
        PrepareBuilder();
        result.ogOrdEqtList_.Add(values);
        return this;
      }
      public Builder ClearOgOrdEqtList() {
        PrepareBuilder();
        result.ogOrdEqtList_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<global::PBWrapMsgOG.PBMsgOGOrdFut> OgOrdFutListList {
        get { return PrepareBuilder().ogOrdFutList_; }
      }
      public int OgOrdFutListCount {
        get { return result.OgOrdFutListCount; }
      }
      public global::PBWrapMsgOG.PBMsgOGOrdFut GetOgOrdFutList(int index) {
        return result.GetOgOrdFutList(index);
      }
      public Builder SetOgOrdFutList(int index, global::PBWrapMsgOG.PBMsgOGOrdFut value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.ogOrdFutList_[index] = value;
        return this;
      }
      public Builder SetOgOrdFutList(int index, global::PBWrapMsgOG.PBMsgOGOrdFut.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.ogOrdFutList_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddOgOrdFutList(global::PBWrapMsgOG.PBMsgOGOrdFut value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.ogOrdFutList_.Add(value);
        return this;
      }
      public Builder AddOgOrdFutList(global::PBWrapMsgOG.PBMsgOGOrdFut.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.ogOrdFutList_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeOgOrdFutList(scg::IEnumerable<global::PBWrapMsgOG.PBMsgOGOrdFut> values) {
        PrepareBuilder();
        result.ogOrdFutList_.Add(values);
        return this;
      }
      public Builder ClearOgOrdFutList() {
        PrepareBuilder();
        result.ogOrdFutList_.Clear();
        return this;
      }
      
      public bool HasBatchOrder {
        get { return result.hasBatchOrder; }
      }
      public bool BatchOrder {
        get { return result.BatchOrder; }
        set { SetBatchOrder(value); }
      }
      public Builder SetBatchOrder(bool value) {
        PrepareBuilder();
        result.hasBatchOrder = true;
        result.batchOrder_ = value;
        return this;
      }
      public Builder ClearBatchOrder() {
        PrepareBuilder();
        result.hasBatchOrder = false;
        result.batchOrder_ = false;
        return this;
      }
      
      public bool HasOrderListType {
       get { return result.hasOrderListType; }
      }
      public global::PBWrapMsgOG.OrderType OrderListType {
        get { return result.OrderListType; }
        set { SetOrderListType(value); }
      }
      public Builder SetOrderListType(global::PBWrapMsgOG.OrderType value) {
        PrepareBuilder();
        result.hasOrderListType = true;
        result.orderListType_ = value;
        return this;
      }
      public Builder ClearOrderListType() {
        PrepareBuilder();
        result.hasOrderListType = false;
        result.orderListType_ = global::PBWrapMsgOG.OrderType.NEW;
        return this;
      }
    }
    static PBMsgOGOrdList() {
      object.ReferenceEquals(global::PBWrapMsgOG.Generated.PBMsgOG.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class PBMsgExecution : pb::GeneratedMessage<PBMsgExecution, PBMsgExecution.Builder> {
    private PBMsgExecution() { }
    private static readonly PBMsgExecution defaultInstance = new PBMsgExecution().MakeReadOnly();
    private static readonly string[] _pBMsgExecutionFieldNames = new string[] { "account", "cancelSize", "childOrderId", "dealNo", "entrustSize", "executePrice", "executeSize", "executionType", "futureFlag", "name", "note", "orderDirection", "parentOrderId", "symbol", "targetPrice", "timeStamp", "venue" };
    private static readonly uint[] _pBMsgExecutionFieldTags = new uint[] { 50, 112, 18, 42, 128, 97, 104, 8, 120, 66, 138, 80, 26, 58, 89, 34, 74 };
    public static PBMsgExecution DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override PBMsgExecution DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override PBMsgExecution ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::PBWrapMsgOG.Generated.PBMsgOG.internal__static_PBWrapMsgOG_PBMsgExecution__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<PBMsgExecution, PBMsgExecution.Builder> InternalFieldAccessors {
      get { return global::PBWrapMsgOG.Generated.PBMsgOG.internal__static_PBWrapMsgOG_PBMsgExecution__FieldAccessorTable; }
    }
    
    public const int ExecutionTypeFieldNumber = 1;
    private bool hasExecutionType;
    private global::PBWrapMsgOG.ExecutionType executionType_ = global::PBWrapMsgOG.ExecutionType.ORDER_ACKNOWLEDGEMENT;
    public bool HasExecutionType {
      get { return hasExecutionType; }
    }
    public global::PBWrapMsgOG.ExecutionType ExecutionType {
      get { return executionType_; }
    }
    
    public const int ChildOrderIdFieldNumber = 2;
    private bool hasChildOrderId;
    private string childOrderId_ = "";
    public bool HasChildOrderId {
      get { return hasChildOrderId; }
    }
    public string ChildOrderId {
      get { return childOrderId_; }
    }
    
    public const int ParentOrderIdFieldNumber = 3;
    private bool hasParentOrderId;
    private string parentOrderId_ = "";
    public bool HasParentOrderId {
      get { return hasParentOrderId; }
    }
    public string ParentOrderId {
      get { return parentOrderId_; }
    }
    
    public const int TimeStampFieldNumber = 4;
    private bool hasTimeStamp;
    private string timeStamp_ = "";
    public bool HasTimeStamp {
      get { return hasTimeStamp; }
    }
    public string TimeStamp {
      get { return timeStamp_; }
    }
    
    public const int DealNoFieldNumber = 5;
    private bool hasDealNo;
    private string dealNo_ = "";
    public bool HasDealNo {
      get { return hasDealNo; }
    }
    public string DealNo {
      get { return dealNo_; }
    }
    
    public const int AccountFieldNumber = 6;
    private bool hasAccount;
    private string account_ = "";
    public bool HasAccount {
      get { return hasAccount; }
    }
    public string Account {
      get { return account_; }
    }
    
    public const int SymbolFieldNumber = 7;
    private bool hasSymbol;
    private string symbol_ = "";
    public bool HasSymbol {
      get { return hasSymbol; }
    }
    public string Symbol {
      get { return symbol_; }
    }
    
    public const int NameFieldNumber = 8;
    private bool hasName;
    private pb::ByteString name_ = pb::ByteString.Empty;
    public bool HasName {
      get { return hasName; }
    }
    public pb::ByteString Name {
      get { return name_; }
    }
    
    public const int VenueFieldNumber = 9;
    private bool hasVenue;
    private string venue_ = "";
    public bool HasVenue {
      get { return hasVenue; }
    }
    public string Venue {
      get { return venue_; }
    }
    
    public const int OrderDirectionFieldNumber = 10;
    private bool hasOrderDirection;
    private global::PBWrapMsgOG.OrderDirection orderDirection_ = global::PBWrapMsgOG.OrderDirection.BUY;
    public bool HasOrderDirection {
      get { return hasOrderDirection; }
    }
    public global::PBWrapMsgOG.OrderDirection OrderDirection {
      get { return orderDirection_; }
    }
    
    public const int TargetPriceFieldNumber = 11;
    private bool hasTargetPrice;
    private double targetPrice_;
    public bool HasTargetPrice {
      get { return hasTargetPrice; }
    }
    public double TargetPrice {
      get { return targetPrice_; }
    }
    
    public const int ExecutePriceFieldNumber = 12;
    private bool hasExecutePrice;
    private double executePrice_;
    public bool HasExecutePrice {
      get { return hasExecutePrice; }
    }
    public double ExecutePrice {
      get { return executePrice_; }
    }
    
    public const int ExecuteSizeFieldNumber = 13;
    private bool hasExecuteSize;
    private int executeSize_;
    public bool HasExecuteSize {
      get { return hasExecuteSize; }
    }
    public int ExecuteSize {
      get { return executeSize_; }
    }
    
    public const int CancelSizeFieldNumber = 14;
    private bool hasCancelSize;
    private int cancelSize_;
    public bool HasCancelSize {
      get { return hasCancelSize; }
    }
    public int CancelSize {
      get { return cancelSize_; }
    }
    
    public const int FutureFlagFieldNumber = 15;
    private bool hasFutureFlag;
    private global::PBWrapMsgOG.FutureFlag futureFlag_ = global::PBWrapMsgOG.FutureFlag.OPEN;
    public bool HasFutureFlag {
      get { return hasFutureFlag; }
    }
    public global::PBWrapMsgOG.FutureFlag FutureFlag {
      get { return futureFlag_; }
    }
    
    public const int EntrustSizeFieldNumber = 16;
    private bool hasEntrustSize;
    private int entrustSize_;
    public bool HasEntrustSize {
      get { return hasEntrustSize; }
    }
    public int EntrustSize {
      get { return entrustSize_; }
    }
    
    public const int NoteFieldNumber = 17;
    private bool hasNote;
    private pb::ByteString note_ = pb::ByteString.Empty;
    public bool HasNote {
      get { return hasNote; }
    }
    public pb::ByteString Note {
      get { return note_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasExecutionType) return false;
        if (!hasChildOrderId) return false;
        if (!hasParentOrderId) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _pBMsgExecutionFieldNames;
      if (hasExecutionType) {
        output.WriteEnum(1, field_names[7], (int) ExecutionType, ExecutionType);
      }
      if (hasChildOrderId) {
        output.WriteString(2, field_names[2], ChildOrderId);
      }
      if (hasParentOrderId) {
        output.WriteString(3, field_names[12], ParentOrderId);
      }
      if (hasTimeStamp) {
        output.WriteString(4, field_names[15], TimeStamp);
      }
      if (hasDealNo) {
        output.WriteString(5, field_names[3], DealNo);
      }
      if (hasAccount) {
        output.WriteString(6, field_names[0], Account);
      }
      if (hasSymbol) {
        output.WriteString(7, field_names[13], Symbol);
      }
      if (hasName) {
        output.WriteBytes(8, field_names[9], Name);
      }
      if (hasVenue) {
        output.WriteString(9, field_names[16], Venue);
      }
      if (hasOrderDirection) {
        output.WriteEnum(10, field_names[11], (int) OrderDirection, OrderDirection);
      }
      if (hasTargetPrice) {
        output.WriteDouble(11, field_names[14], TargetPrice);
      }
      if (hasExecutePrice) {
        output.WriteDouble(12, field_names[5], ExecutePrice);
      }
      if (hasExecuteSize) {
        output.WriteInt32(13, field_names[6], ExecuteSize);
      }
      if (hasCancelSize) {
        output.WriteInt32(14, field_names[1], CancelSize);
      }
      if (hasFutureFlag) {
        output.WriteEnum(15, field_names[8], (int) FutureFlag, FutureFlag);
      }
      if (hasEntrustSize) {
        output.WriteInt32(16, field_names[4], EntrustSize);
      }
      if (hasNote) {
        output.WriteBytes(17, field_names[10], Note);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasExecutionType) {
          size += pb::CodedOutputStream.ComputeEnumSize(1, (int) ExecutionType);
        }
        if (hasChildOrderId) {
          size += pb::CodedOutputStream.ComputeStringSize(2, ChildOrderId);
        }
        if (hasParentOrderId) {
          size += pb::CodedOutputStream.ComputeStringSize(3, ParentOrderId);
        }
        if (hasTimeStamp) {
          size += pb::CodedOutputStream.ComputeStringSize(4, TimeStamp);
        }
        if (hasDealNo) {
          size += pb::CodedOutputStream.ComputeStringSize(5, DealNo);
        }
        if (hasAccount) {
          size += pb::CodedOutputStream.ComputeStringSize(6, Account);
        }
        if (hasSymbol) {
          size += pb::CodedOutputStream.ComputeStringSize(7, Symbol);
        }
        if (hasName) {
          size += pb::CodedOutputStream.ComputeBytesSize(8, Name);
        }
        if (hasVenue) {
          size += pb::CodedOutputStream.ComputeStringSize(9, Venue);
        }
        if (hasOrderDirection) {
          size += pb::CodedOutputStream.ComputeEnumSize(10, (int) OrderDirection);
        }
        if (hasTargetPrice) {
          size += pb::CodedOutputStream.ComputeDoubleSize(11, TargetPrice);
        }
        if (hasExecutePrice) {
          size += pb::CodedOutputStream.ComputeDoubleSize(12, ExecutePrice);
        }
        if (hasExecuteSize) {
          size += pb::CodedOutputStream.ComputeInt32Size(13, ExecuteSize);
        }
        if (hasCancelSize) {
          size += pb::CodedOutputStream.ComputeInt32Size(14, CancelSize);
        }
        if (hasFutureFlag) {
          size += pb::CodedOutputStream.ComputeEnumSize(15, (int) FutureFlag);
        }
        if (hasEntrustSize) {
          size += pb::CodedOutputStream.ComputeInt32Size(16, EntrustSize);
        }
        if (hasNote) {
          size += pb::CodedOutputStream.ComputeBytesSize(17, Note);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static PBMsgExecution ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static PBMsgExecution ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static PBMsgExecution ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static PBMsgExecution ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static PBMsgExecution ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static PBMsgExecution ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static PBMsgExecution ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static PBMsgExecution ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static PBMsgExecution ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static PBMsgExecution ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private PBMsgExecution MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(PBMsgExecution prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<PBMsgExecution, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(PBMsgExecution cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private PBMsgExecution result;
      
      private PBMsgExecution PrepareBuilder() {
        if (resultIsReadOnly) {
          PBMsgExecution original = result;
          result = new PBMsgExecution();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override PBMsgExecution MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::PBWrapMsgOG.PBMsgExecution.Descriptor; }
      }
      
      public override PBMsgExecution DefaultInstanceForType {
        get { return global::PBWrapMsgOG.PBMsgExecution.DefaultInstance; }
      }
      
      public override PBMsgExecution BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is PBMsgExecution) {
          return MergeFrom((PBMsgExecution) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(PBMsgExecution other) {
        if (other == global::PBWrapMsgOG.PBMsgExecution.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasExecutionType) {
          ExecutionType = other.ExecutionType;
        }
        if (other.HasChildOrderId) {
          ChildOrderId = other.ChildOrderId;
        }
        if (other.HasParentOrderId) {
          ParentOrderId = other.ParentOrderId;
        }
        if (other.HasTimeStamp) {
          TimeStamp = other.TimeStamp;
        }
        if (other.HasDealNo) {
          DealNo = other.DealNo;
        }
        if (other.HasAccount) {
          Account = other.Account;
        }
        if (other.HasSymbol) {
          Symbol = other.Symbol;
        }
        if (other.HasName) {
          Name = other.Name;
        }
        if (other.HasVenue) {
          Venue = other.Venue;
        }
        if (other.HasOrderDirection) {
          OrderDirection = other.OrderDirection;
        }
        if (other.HasTargetPrice) {
          TargetPrice = other.TargetPrice;
        }
        if (other.HasExecutePrice) {
          ExecutePrice = other.ExecutePrice;
        }
        if (other.HasExecuteSize) {
          ExecuteSize = other.ExecuteSize;
        }
        if (other.HasCancelSize) {
          CancelSize = other.CancelSize;
        }
        if (other.HasFutureFlag) {
          FutureFlag = other.FutureFlag;
        }
        if (other.HasEntrustSize) {
          EntrustSize = other.EntrustSize;
        }
        if (other.HasNote) {
          Note = other.Note;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_pBMsgExecutionFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _pBMsgExecutionFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              object unknown;
              if(input.ReadEnum(ref result.executionType_, out unknown)) {
                result.hasExecutionType = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(1, (ulong)(int)unknown);
              }
              break;
            }
            case 18: {
              result.hasChildOrderId = input.ReadString(ref result.childOrderId_);
              break;
            }
            case 26: {
              result.hasParentOrderId = input.ReadString(ref result.parentOrderId_);
              break;
            }
            case 34: {
              result.hasTimeStamp = input.ReadString(ref result.timeStamp_);
              break;
            }
            case 42: {
              result.hasDealNo = input.ReadString(ref result.dealNo_);
              break;
            }
            case 50: {
              result.hasAccount = input.ReadString(ref result.account_);
              break;
            }
            case 58: {
              result.hasSymbol = input.ReadString(ref result.symbol_);
              break;
            }
            case 66: {
              result.hasName = input.ReadBytes(ref result.name_);
              break;
            }
            case 74: {
              result.hasVenue = input.ReadString(ref result.venue_);
              break;
            }
            case 80: {
              object unknown;
              if(input.ReadEnum(ref result.orderDirection_, out unknown)) {
                result.hasOrderDirection = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(10, (ulong)(int)unknown);
              }
              break;
            }
            case 89: {
              result.hasTargetPrice = input.ReadDouble(ref result.targetPrice_);
              break;
            }
            case 97: {
              result.hasExecutePrice = input.ReadDouble(ref result.executePrice_);
              break;
            }
            case 104: {
              result.hasExecuteSize = input.ReadInt32(ref result.executeSize_);
              break;
            }
            case 112: {
              result.hasCancelSize = input.ReadInt32(ref result.cancelSize_);
              break;
            }
            case 120: {
              object unknown;
              if(input.ReadEnum(ref result.futureFlag_, out unknown)) {
                result.hasFutureFlag = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(15, (ulong)(int)unknown);
              }
              break;
            }
            case 128: {
              result.hasEntrustSize = input.ReadInt32(ref result.entrustSize_);
              break;
            }
            case 138: {
              result.hasNote = input.ReadBytes(ref result.note_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasExecutionType {
       get { return result.hasExecutionType; }
      }
      public global::PBWrapMsgOG.ExecutionType ExecutionType {
        get { return result.ExecutionType; }
        set { SetExecutionType(value); }
      }
      public Builder SetExecutionType(global::PBWrapMsgOG.ExecutionType value) {
        PrepareBuilder();
        result.hasExecutionType = true;
        result.executionType_ = value;
        return this;
      }
      public Builder ClearExecutionType() {
        PrepareBuilder();
        result.hasExecutionType = false;
        result.executionType_ = global::PBWrapMsgOG.ExecutionType.ORDER_ACKNOWLEDGEMENT;
        return this;
      }
      
      public bool HasChildOrderId {
        get { return result.hasChildOrderId; }
      }
      public string ChildOrderId {
        get { return result.ChildOrderId; }
        set { SetChildOrderId(value); }
      }
      public Builder SetChildOrderId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasChildOrderId = true;
        result.childOrderId_ = value;
        return this;
      }
      public Builder ClearChildOrderId() {
        PrepareBuilder();
        result.hasChildOrderId = false;
        result.childOrderId_ = "";
        return this;
      }
      
      public bool HasParentOrderId {
        get { return result.hasParentOrderId; }
      }
      public string ParentOrderId {
        get { return result.ParentOrderId; }
        set { SetParentOrderId(value); }
      }
      public Builder SetParentOrderId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasParentOrderId = true;
        result.parentOrderId_ = value;
        return this;
      }
      public Builder ClearParentOrderId() {
        PrepareBuilder();
        result.hasParentOrderId = false;
        result.parentOrderId_ = "";
        return this;
      }
      
      public bool HasTimeStamp {
        get { return result.hasTimeStamp; }
      }
      public string TimeStamp {
        get { return result.TimeStamp; }
        set { SetTimeStamp(value); }
      }
      public Builder SetTimeStamp(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTimeStamp = true;
        result.timeStamp_ = value;
        return this;
      }
      public Builder ClearTimeStamp() {
        PrepareBuilder();
        result.hasTimeStamp = false;
        result.timeStamp_ = "";
        return this;
      }
      
      public bool HasDealNo {
        get { return result.hasDealNo; }
      }
      public string DealNo {
        get { return result.DealNo; }
        set { SetDealNo(value); }
      }
      public Builder SetDealNo(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasDealNo = true;
        result.dealNo_ = value;
        return this;
      }
      public Builder ClearDealNo() {
        PrepareBuilder();
        result.hasDealNo = false;
        result.dealNo_ = "";
        return this;
      }
      
      public bool HasAccount {
        get { return result.hasAccount; }
      }
      public string Account {
        get { return result.Account; }
        set { SetAccount(value); }
      }
      public Builder SetAccount(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAccount = true;
        result.account_ = value;
        return this;
      }
      public Builder ClearAccount() {
        PrepareBuilder();
        result.hasAccount = false;
        result.account_ = "";
        return this;
      }
      
      public bool HasSymbol {
        get { return result.hasSymbol; }
      }
      public string Symbol {
        get { return result.Symbol; }
        set { SetSymbol(value); }
      }
      public Builder SetSymbol(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSymbol = true;
        result.symbol_ = value;
        return this;
      }
      public Builder ClearSymbol() {
        PrepareBuilder();
        result.hasSymbol = false;
        result.symbol_ = "";
        return this;
      }
      
      public bool HasName {
        get { return result.hasName; }
      }
      public pb::ByteString Name {
        get { return result.Name; }
        set { SetName(value); }
      }
      public Builder SetName(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasName = true;
        result.name_ = value;
        return this;
      }
      public Builder ClearName() {
        PrepareBuilder();
        result.hasName = false;
        result.name_ = pb::ByteString.Empty;
        return this;
      }
      
      public bool HasVenue {
        get { return result.hasVenue; }
      }
      public string Venue {
        get { return result.Venue; }
        set { SetVenue(value); }
      }
      public Builder SetVenue(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasVenue = true;
        result.venue_ = value;
        return this;
      }
      public Builder ClearVenue() {
        PrepareBuilder();
        result.hasVenue = false;
        result.venue_ = "";
        return this;
      }
      
      public bool HasOrderDirection {
       get { return result.hasOrderDirection; }
      }
      public global::PBWrapMsgOG.OrderDirection OrderDirection {
        get { return result.OrderDirection; }
        set { SetOrderDirection(value); }
      }
      public Builder SetOrderDirection(global::PBWrapMsgOG.OrderDirection value) {
        PrepareBuilder();
        result.hasOrderDirection = true;
        result.orderDirection_ = value;
        return this;
      }
      public Builder ClearOrderDirection() {
        PrepareBuilder();
        result.hasOrderDirection = false;
        result.orderDirection_ = global::PBWrapMsgOG.OrderDirection.BUY;
        return this;
      }
      
      public bool HasTargetPrice {
        get { return result.hasTargetPrice; }
      }
      public double TargetPrice {
        get { return result.TargetPrice; }
        set { SetTargetPrice(value); }
      }
      public Builder SetTargetPrice(double value) {
        PrepareBuilder();
        result.hasTargetPrice = true;
        result.targetPrice_ = value;
        return this;
      }
      public Builder ClearTargetPrice() {
        PrepareBuilder();
        result.hasTargetPrice = false;
        result.targetPrice_ = 0D;
        return this;
      }
      
      public bool HasExecutePrice {
        get { return result.hasExecutePrice; }
      }
      public double ExecutePrice {
        get { return result.ExecutePrice; }
        set { SetExecutePrice(value); }
      }
      public Builder SetExecutePrice(double value) {
        PrepareBuilder();
        result.hasExecutePrice = true;
        result.executePrice_ = value;
        return this;
      }
      public Builder ClearExecutePrice() {
        PrepareBuilder();
        result.hasExecutePrice = false;
        result.executePrice_ = 0D;
        return this;
      }
      
      public bool HasExecuteSize {
        get { return result.hasExecuteSize; }
      }
      public int ExecuteSize {
        get { return result.ExecuteSize; }
        set { SetExecuteSize(value); }
      }
      public Builder SetExecuteSize(int value) {
        PrepareBuilder();
        result.hasExecuteSize = true;
        result.executeSize_ = value;
        return this;
      }
      public Builder ClearExecuteSize() {
        PrepareBuilder();
        result.hasExecuteSize = false;
        result.executeSize_ = 0;
        return this;
      }
      
      public bool HasCancelSize {
        get { return result.hasCancelSize; }
      }
      public int CancelSize {
        get { return result.CancelSize; }
        set { SetCancelSize(value); }
      }
      public Builder SetCancelSize(int value) {
        PrepareBuilder();
        result.hasCancelSize = true;
        result.cancelSize_ = value;
        return this;
      }
      public Builder ClearCancelSize() {
        PrepareBuilder();
        result.hasCancelSize = false;
        result.cancelSize_ = 0;
        return this;
      }
      
      public bool HasFutureFlag {
       get { return result.hasFutureFlag; }
      }
      public global::PBWrapMsgOG.FutureFlag FutureFlag {
        get { return result.FutureFlag; }
        set { SetFutureFlag(value); }
      }
      public Builder SetFutureFlag(global::PBWrapMsgOG.FutureFlag value) {
        PrepareBuilder();
        result.hasFutureFlag = true;
        result.futureFlag_ = value;
        return this;
      }
      public Builder ClearFutureFlag() {
        PrepareBuilder();
        result.hasFutureFlag = false;
        result.futureFlag_ = global::PBWrapMsgOG.FutureFlag.OPEN;
        return this;
      }
      
      public bool HasEntrustSize {
        get { return result.hasEntrustSize; }
      }
      public int EntrustSize {
        get { return result.EntrustSize; }
        set { SetEntrustSize(value); }
      }
      public Builder SetEntrustSize(int value) {
        PrepareBuilder();
        result.hasEntrustSize = true;
        result.entrustSize_ = value;
        return this;
      }
      public Builder ClearEntrustSize() {
        PrepareBuilder();
        result.hasEntrustSize = false;
        result.entrustSize_ = 0;
        return this;
      }
      
      public bool HasNote {
        get { return result.hasNote; }
      }
      public pb::ByteString Note {
        get { return result.Note; }
        set { SetNote(value); }
      }
      public Builder SetNote(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasNote = true;
        result.note_ = value;
        return this;
      }
      public Builder ClearNote() {
        PrepareBuilder();
        result.hasNote = false;
        result.note_ = pb::ByteString.Empty;
        return this;
      }
    }
    static PBMsgExecution() {
      object.ReferenceEquals(global::PBWrapMsgOG.Generated.PBMsgOG.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class PBMsgEntrust : pb::GeneratedMessage<PBMsgEntrust, PBMsgEntrust.Builder> {
    private PBMsgEntrust() { }
    private static readonly PBMsgEntrust defaultInstance = new PBMsgEntrust().MakeReadOnly();
    private static readonly string[] _pBMsgEntrustFieldNames = new string[] { "account", "applyTime", "cancelSize", "childOrderId", "entrustSize", "entrustTime", "executeAvgPrice", "executeSize", "futureFlag", "name", "note", "orderDirection", "parentOrderId", "status", "statusCN", "symbol", "targetPrice", "venue" };
    private static readonly uint[] _pBMsgEntrustFieldTags = new uint[] { 74, 34, 48, 10, 120, 26, 65, 56, 112, 90, 138, 104, 18, 42, 146, 82, 129, 98 };
    public static PBMsgEntrust DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override PBMsgEntrust DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override PBMsgEntrust ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::PBWrapMsgOG.Generated.PBMsgOG.internal__static_PBWrapMsgOG_PBMsgEntrust__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<PBMsgEntrust, PBMsgEntrust.Builder> InternalFieldAccessors {
      get { return global::PBWrapMsgOG.Generated.PBMsgOG.internal__static_PBWrapMsgOG_PBMsgEntrust__FieldAccessorTable; }
    }
    
    public const int ChildOrderIdFieldNumber = 1;
    private bool hasChildOrderId;
    private string childOrderId_ = "";
    public bool HasChildOrderId {
      get { return hasChildOrderId; }
    }
    public string ChildOrderId {
      get { return childOrderId_; }
    }
    
    public const int ParentOrderIdFieldNumber = 2;
    private bool hasParentOrderId;
    private string parentOrderId_ = "";
    public bool HasParentOrderId {
      get { return hasParentOrderId; }
    }
    public string ParentOrderId {
      get { return parentOrderId_; }
    }
    
    public const int EntrustTimeFieldNumber = 3;
    private bool hasEntrustTime;
    private string entrustTime_ = "";
    public bool HasEntrustTime {
      get { return hasEntrustTime; }
    }
    public string EntrustTime {
      get { return entrustTime_; }
    }
    
    public const int ApplyTimeFieldNumber = 4;
    private bool hasApplyTime;
    private string applyTime_ = "";
    public bool HasApplyTime {
      get { return hasApplyTime; }
    }
    public string ApplyTime {
      get { return applyTime_; }
    }
    
    public const int StatusFieldNumber = 5;
    private bool hasStatus;
    private string status_ = "";
    public bool HasStatus {
      get { return hasStatus; }
    }
    public string Status {
      get { return status_; }
    }
    
    public const int CancelSizeFieldNumber = 6;
    private bool hasCancelSize;
    private int cancelSize_;
    public bool HasCancelSize {
      get { return hasCancelSize; }
    }
    public int CancelSize {
      get { return cancelSize_; }
    }
    
    public const int ExecuteSizeFieldNumber = 7;
    private bool hasExecuteSize;
    private int executeSize_;
    public bool HasExecuteSize {
      get { return hasExecuteSize; }
    }
    public int ExecuteSize {
      get { return executeSize_; }
    }
    
    public const int ExecuteAvgPriceFieldNumber = 8;
    private bool hasExecuteAvgPrice;
    private double executeAvgPrice_;
    public bool HasExecuteAvgPrice {
      get { return hasExecuteAvgPrice; }
    }
    public double ExecuteAvgPrice {
      get { return executeAvgPrice_; }
    }
    
    public const int AccountFieldNumber = 9;
    private bool hasAccount;
    private string account_ = "";
    public bool HasAccount {
      get { return hasAccount; }
    }
    public string Account {
      get { return account_; }
    }
    
    public const int SymbolFieldNumber = 10;
    private bool hasSymbol;
    private string symbol_ = "";
    public bool HasSymbol {
      get { return hasSymbol; }
    }
    public string Symbol {
      get { return symbol_; }
    }
    
    public const int NameFieldNumber = 11;
    private bool hasName;
    private pb::ByteString name_ = pb::ByteString.Empty;
    public bool HasName {
      get { return hasName; }
    }
    public pb::ByteString Name {
      get { return name_; }
    }
    
    public const int VenueFieldNumber = 12;
    private bool hasVenue;
    private string venue_ = "";
    public bool HasVenue {
      get { return hasVenue; }
    }
    public string Venue {
      get { return venue_; }
    }
    
    public const int OrderDirectionFieldNumber = 13;
    private bool hasOrderDirection;
    private global::PBWrapMsgOG.OrderDirection orderDirection_ = global::PBWrapMsgOG.OrderDirection.BUY;
    public bool HasOrderDirection {
      get { return hasOrderDirection; }
    }
    public global::PBWrapMsgOG.OrderDirection OrderDirection {
      get { return orderDirection_; }
    }
    
    public const int FutureFlagFieldNumber = 14;
    private bool hasFutureFlag;
    private global::PBWrapMsgOG.FutureFlag futureFlag_ = global::PBWrapMsgOG.FutureFlag.OPEN;
    public bool HasFutureFlag {
      get { return hasFutureFlag; }
    }
    public global::PBWrapMsgOG.FutureFlag FutureFlag {
      get { return futureFlag_; }
    }
    
    public const int EntrustSizeFieldNumber = 15;
    private bool hasEntrustSize;
    private int entrustSize_;
    public bool HasEntrustSize {
      get { return hasEntrustSize; }
    }
    public int EntrustSize {
      get { return entrustSize_; }
    }
    
    public const int TargetPriceFieldNumber = 16;
    private bool hasTargetPrice;
    private double targetPrice_;
    public bool HasTargetPrice {
      get { return hasTargetPrice; }
    }
    public double TargetPrice {
      get { return targetPrice_; }
    }
    
    public const int NoteFieldNumber = 17;
    private bool hasNote;
    private pb::ByteString note_ = pb::ByteString.Empty;
    public bool HasNote {
      get { return hasNote; }
    }
    public pb::ByteString Note {
      get { return note_; }
    }
    
    public const int StatusCNFieldNumber = 18;
    private bool hasStatusCN;
    private pb::ByteString statusCN_ = pb::ByteString.Empty;
    public bool HasStatusCN {
      get { return hasStatusCN; }
    }
    public pb::ByteString StatusCN {
      get { return statusCN_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasChildOrderId) return false;
        if (!hasParentOrderId) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _pBMsgEntrustFieldNames;
      if (hasChildOrderId) {
        output.WriteString(1, field_names[3], ChildOrderId);
      }
      if (hasParentOrderId) {
        output.WriteString(2, field_names[12], ParentOrderId);
      }
      if (hasEntrustTime) {
        output.WriteString(3, field_names[5], EntrustTime);
      }
      if (hasApplyTime) {
        output.WriteString(4, field_names[1], ApplyTime);
      }
      if (hasStatus) {
        output.WriteString(5, field_names[13], Status);
      }
      if (hasCancelSize) {
        output.WriteInt32(6, field_names[2], CancelSize);
      }
      if (hasExecuteSize) {
        output.WriteInt32(7, field_names[7], ExecuteSize);
      }
      if (hasExecuteAvgPrice) {
        output.WriteDouble(8, field_names[6], ExecuteAvgPrice);
      }
      if (hasAccount) {
        output.WriteString(9, field_names[0], Account);
      }
      if (hasSymbol) {
        output.WriteString(10, field_names[15], Symbol);
      }
      if (hasName) {
        output.WriteBytes(11, field_names[9], Name);
      }
      if (hasVenue) {
        output.WriteString(12, field_names[17], Venue);
      }
      if (hasOrderDirection) {
        output.WriteEnum(13, field_names[11], (int) OrderDirection, OrderDirection);
      }
      if (hasFutureFlag) {
        output.WriteEnum(14, field_names[8], (int) FutureFlag, FutureFlag);
      }
      if (hasEntrustSize) {
        output.WriteInt32(15, field_names[4], EntrustSize);
      }
      if (hasTargetPrice) {
        output.WriteDouble(16, field_names[16], TargetPrice);
      }
      if (hasNote) {
        output.WriteBytes(17, field_names[10], Note);
      }
      if (hasStatusCN) {
        output.WriteBytes(18, field_names[14], StatusCN);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasChildOrderId) {
          size += pb::CodedOutputStream.ComputeStringSize(1, ChildOrderId);
        }
        if (hasParentOrderId) {
          size += pb::CodedOutputStream.ComputeStringSize(2, ParentOrderId);
        }
        if (hasEntrustTime) {
          size += pb::CodedOutputStream.ComputeStringSize(3, EntrustTime);
        }
        if (hasApplyTime) {
          size += pb::CodedOutputStream.ComputeStringSize(4, ApplyTime);
        }
        if (hasStatus) {
          size += pb::CodedOutputStream.ComputeStringSize(5, Status);
        }
        if (hasCancelSize) {
          size += pb::CodedOutputStream.ComputeInt32Size(6, CancelSize);
        }
        if (hasExecuteSize) {
          size += pb::CodedOutputStream.ComputeInt32Size(7, ExecuteSize);
        }
        if (hasExecuteAvgPrice) {
          size += pb::CodedOutputStream.ComputeDoubleSize(8, ExecuteAvgPrice);
        }
        if (hasAccount) {
          size += pb::CodedOutputStream.ComputeStringSize(9, Account);
        }
        if (hasSymbol) {
          size += pb::CodedOutputStream.ComputeStringSize(10, Symbol);
        }
        if (hasName) {
          size += pb::CodedOutputStream.ComputeBytesSize(11, Name);
        }
        if (hasVenue) {
          size += pb::CodedOutputStream.ComputeStringSize(12, Venue);
        }
        if (hasOrderDirection) {
          size += pb::CodedOutputStream.ComputeEnumSize(13, (int) OrderDirection);
        }
        if (hasFutureFlag) {
          size += pb::CodedOutputStream.ComputeEnumSize(14, (int) FutureFlag);
        }
        if (hasEntrustSize) {
          size += pb::CodedOutputStream.ComputeInt32Size(15, EntrustSize);
        }
        if (hasTargetPrice) {
          size += pb::CodedOutputStream.ComputeDoubleSize(16, TargetPrice);
        }
        if (hasNote) {
          size += pb::CodedOutputStream.ComputeBytesSize(17, Note);
        }
        if (hasStatusCN) {
          size += pb::CodedOutputStream.ComputeBytesSize(18, StatusCN);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static PBMsgEntrust ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static PBMsgEntrust ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static PBMsgEntrust ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static PBMsgEntrust ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static PBMsgEntrust ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static PBMsgEntrust ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static PBMsgEntrust ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static PBMsgEntrust ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static PBMsgEntrust ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static PBMsgEntrust ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private PBMsgEntrust MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(PBMsgEntrust prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<PBMsgEntrust, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(PBMsgEntrust cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private PBMsgEntrust result;
      
      private PBMsgEntrust PrepareBuilder() {
        if (resultIsReadOnly) {
          PBMsgEntrust original = result;
          result = new PBMsgEntrust();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override PBMsgEntrust MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::PBWrapMsgOG.PBMsgEntrust.Descriptor; }
      }
      
      public override PBMsgEntrust DefaultInstanceForType {
        get { return global::PBWrapMsgOG.PBMsgEntrust.DefaultInstance; }
      }
      
      public override PBMsgEntrust BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is PBMsgEntrust) {
          return MergeFrom((PBMsgEntrust) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(PBMsgEntrust other) {
        if (other == global::PBWrapMsgOG.PBMsgEntrust.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasChildOrderId) {
          ChildOrderId = other.ChildOrderId;
        }
        if (other.HasParentOrderId) {
          ParentOrderId = other.ParentOrderId;
        }
        if (other.HasEntrustTime) {
          EntrustTime = other.EntrustTime;
        }
        if (other.HasApplyTime) {
          ApplyTime = other.ApplyTime;
        }
        if (other.HasStatus) {
          Status = other.Status;
        }
        if (other.HasCancelSize) {
          CancelSize = other.CancelSize;
        }
        if (other.HasExecuteSize) {
          ExecuteSize = other.ExecuteSize;
        }
        if (other.HasExecuteAvgPrice) {
          ExecuteAvgPrice = other.ExecuteAvgPrice;
        }
        if (other.HasAccount) {
          Account = other.Account;
        }
        if (other.HasSymbol) {
          Symbol = other.Symbol;
        }
        if (other.HasName) {
          Name = other.Name;
        }
        if (other.HasVenue) {
          Venue = other.Venue;
        }
        if (other.HasOrderDirection) {
          OrderDirection = other.OrderDirection;
        }
        if (other.HasFutureFlag) {
          FutureFlag = other.FutureFlag;
        }
        if (other.HasEntrustSize) {
          EntrustSize = other.EntrustSize;
        }
        if (other.HasTargetPrice) {
          TargetPrice = other.TargetPrice;
        }
        if (other.HasNote) {
          Note = other.Note;
        }
        if (other.HasStatusCN) {
          StatusCN = other.StatusCN;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_pBMsgEntrustFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _pBMsgEntrustFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasChildOrderId = input.ReadString(ref result.childOrderId_);
              break;
            }
            case 18: {
              result.hasParentOrderId = input.ReadString(ref result.parentOrderId_);
              break;
            }
            case 26: {
              result.hasEntrustTime = input.ReadString(ref result.entrustTime_);
              break;
            }
            case 34: {
              result.hasApplyTime = input.ReadString(ref result.applyTime_);
              break;
            }
            case 42: {
              result.hasStatus = input.ReadString(ref result.status_);
              break;
            }
            case 48: {
              result.hasCancelSize = input.ReadInt32(ref result.cancelSize_);
              break;
            }
            case 56: {
              result.hasExecuteSize = input.ReadInt32(ref result.executeSize_);
              break;
            }
            case 65: {
              result.hasExecuteAvgPrice = input.ReadDouble(ref result.executeAvgPrice_);
              break;
            }
            case 74: {
              result.hasAccount = input.ReadString(ref result.account_);
              break;
            }
            case 82: {
              result.hasSymbol = input.ReadString(ref result.symbol_);
              break;
            }
            case 90: {
              result.hasName = input.ReadBytes(ref result.name_);
              break;
            }
            case 98: {
              result.hasVenue = input.ReadString(ref result.venue_);
              break;
            }
            case 104: {
              object unknown;
              if(input.ReadEnum(ref result.orderDirection_, out unknown)) {
                result.hasOrderDirection = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(13, (ulong)(int)unknown);
              }
              break;
            }
            case 112: {
              object unknown;
              if(input.ReadEnum(ref result.futureFlag_, out unknown)) {
                result.hasFutureFlag = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(14, (ulong)(int)unknown);
              }
              break;
            }
            case 120: {
              result.hasEntrustSize = input.ReadInt32(ref result.entrustSize_);
              break;
            }
            case 129: {
              result.hasTargetPrice = input.ReadDouble(ref result.targetPrice_);
              break;
            }
            case 138: {
              result.hasNote = input.ReadBytes(ref result.note_);
              break;
            }
            case 146: {
              result.hasStatusCN = input.ReadBytes(ref result.statusCN_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasChildOrderId {
        get { return result.hasChildOrderId; }
      }
      public string ChildOrderId {
        get { return result.ChildOrderId; }
        set { SetChildOrderId(value); }
      }
      public Builder SetChildOrderId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasChildOrderId = true;
        result.childOrderId_ = value;
        return this;
      }
      public Builder ClearChildOrderId() {
        PrepareBuilder();
        result.hasChildOrderId = false;
        result.childOrderId_ = "";
        return this;
      }
      
      public bool HasParentOrderId {
        get { return result.hasParentOrderId; }
      }
      public string ParentOrderId {
        get { return result.ParentOrderId; }
        set { SetParentOrderId(value); }
      }
      public Builder SetParentOrderId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasParentOrderId = true;
        result.parentOrderId_ = value;
        return this;
      }
      public Builder ClearParentOrderId() {
        PrepareBuilder();
        result.hasParentOrderId = false;
        result.parentOrderId_ = "";
        return this;
      }
      
      public bool HasEntrustTime {
        get { return result.hasEntrustTime; }
      }
      public string EntrustTime {
        get { return result.EntrustTime; }
        set { SetEntrustTime(value); }
      }
      public Builder SetEntrustTime(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasEntrustTime = true;
        result.entrustTime_ = value;
        return this;
      }
      public Builder ClearEntrustTime() {
        PrepareBuilder();
        result.hasEntrustTime = false;
        result.entrustTime_ = "";
        return this;
      }
      
      public bool HasApplyTime {
        get { return result.hasApplyTime; }
      }
      public string ApplyTime {
        get { return result.ApplyTime; }
        set { SetApplyTime(value); }
      }
      public Builder SetApplyTime(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasApplyTime = true;
        result.applyTime_ = value;
        return this;
      }
      public Builder ClearApplyTime() {
        PrepareBuilder();
        result.hasApplyTime = false;
        result.applyTime_ = "";
        return this;
      }
      
      public bool HasStatus {
        get { return result.hasStatus; }
      }
      public string Status {
        get { return result.Status; }
        set { SetStatus(value); }
      }
      public Builder SetStatus(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasStatus = true;
        result.status_ = value;
        return this;
      }
      public Builder ClearStatus() {
        PrepareBuilder();
        result.hasStatus = false;
        result.status_ = "";
        return this;
      }
      
      public bool HasCancelSize {
        get { return result.hasCancelSize; }
      }
      public int CancelSize {
        get { return result.CancelSize; }
        set { SetCancelSize(value); }
      }
      public Builder SetCancelSize(int value) {
        PrepareBuilder();
        result.hasCancelSize = true;
        result.cancelSize_ = value;
        return this;
      }
      public Builder ClearCancelSize() {
        PrepareBuilder();
        result.hasCancelSize = false;
        result.cancelSize_ = 0;
        return this;
      }
      
      public bool HasExecuteSize {
        get { return result.hasExecuteSize; }
      }
      public int ExecuteSize {
        get { return result.ExecuteSize; }
        set { SetExecuteSize(value); }
      }
      public Builder SetExecuteSize(int value) {
        PrepareBuilder();
        result.hasExecuteSize = true;
        result.executeSize_ = value;
        return this;
      }
      public Builder ClearExecuteSize() {
        PrepareBuilder();
        result.hasExecuteSize = false;
        result.executeSize_ = 0;
        return this;
      }
      
      public bool HasExecuteAvgPrice {
        get { return result.hasExecuteAvgPrice; }
      }
      public double ExecuteAvgPrice {
        get { return result.ExecuteAvgPrice; }
        set { SetExecuteAvgPrice(value); }
      }
      public Builder SetExecuteAvgPrice(double value) {
        PrepareBuilder();
        result.hasExecuteAvgPrice = true;
        result.executeAvgPrice_ = value;
        return this;
      }
      public Builder ClearExecuteAvgPrice() {
        PrepareBuilder();
        result.hasExecuteAvgPrice = false;
        result.executeAvgPrice_ = 0D;
        return this;
      }
      
      public bool HasAccount {
        get { return result.hasAccount; }
      }
      public string Account {
        get { return result.Account; }
        set { SetAccount(value); }
      }
      public Builder SetAccount(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAccount = true;
        result.account_ = value;
        return this;
      }
      public Builder ClearAccount() {
        PrepareBuilder();
        result.hasAccount = false;
        result.account_ = "";
        return this;
      }
      
      public bool HasSymbol {
        get { return result.hasSymbol; }
      }
      public string Symbol {
        get { return result.Symbol; }
        set { SetSymbol(value); }
      }
      public Builder SetSymbol(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSymbol = true;
        result.symbol_ = value;
        return this;
      }
      public Builder ClearSymbol() {
        PrepareBuilder();
        result.hasSymbol = false;
        result.symbol_ = "";
        return this;
      }
      
      public bool HasName {
        get { return result.hasName; }
      }
      public pb::ByteString Name {
        get { return result.Name; }
        set { SetName(value); }
      }
      public Builder SetName(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasName = true;
        result.name_ = value;
        return this;
      }
      public Builder ClearName() {
        PrepareBuilder();
        result.hasName = false;
        result.name_ = pb::ByteString.Empty;
        return this;
      }
      
      public bool HasVenue {
        get { return result.hasVenue; }
      }
      public string Venue {
        get { return result.Venue; }
        set { SetVenue(value); }
      }
      public Builder SetVenue(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasVenue = true;
        result.venue_ = value;
        return this;
      }
      public Builder ClearVenue() {
        PrepareBuilder();
        result.hasVenue = false;
        result.venue_ = "";
        return this;
      }
      
      public bool HasOrderDirection {
       get { return result.hasOrderDirection; }
      }
      public global::PBWrapMsgOG.OrderDirection OrderDirection {
        get { return result.OrderDirection; }
        set { SetOrderDirection(value); }
      }
      public Builder SetOrderDirection(global::PBWrapMsgOG.OrderDirection value) {
        PrepareBuilder();
        result.hasOrderDirection = true;
        result.orderDirection_ = value;
        return this;
      }
      public Builder ClearOrderDirection() {
        PrepareBuilder();
        result.hasOrderDirection = false;
        result.orderDirection_ = global::PBWrapMsgOG.OrderDirection.BUY;
        return this;
      }
      
      public bool HasFutureFlag {
       get { return result.hasFutureFlag; }
      }
      public global::PBWrapMsgOG.FutureFlag FutureFlag {
        get { return result.FutureFlag; }
        set { SetFutureFlag(value); }
      }
      public Builder SetFutureFlag(global::PBWrapMsgOG.FutureFlag value) {
        PrepareBuilder();
        result.hasFutureFlag = true;
        result.futureFlag_ = value;
        return this;
      }
      public Builder ClearFutureFlag() {
        PrepareBuilder();
        result.hasFutureFlag = false;
        result.futureFlag_ = global::PBWrapMsgOG.FutureFlag.OPEN;
        return this;
      }
      
      public bool HasEntrustSize {
        get { return result.hasEntrustSize; }
      }
      public int EntrustSize {
        get { return result.EntrustSize; }
        set { SetEntrustSize(value); }
      }
      public Builder SetEntrustSize(int value) {
        PrepareBuilder();
        result.hasEntrustSize = true;
        result.entrustSize_ = value;
        return this;
      }
      public Builder ClearEntrustSize() {
        PrepareBuilder();
        result.hasEntrustSize = false;
        result.entrustSize_ = 0;
        return this;
      }
      
      public bool HasTargetPrice {
        get { return result.hasTargetPrice; }
      }
      public double TargetPrice {
        get { return result.TargetPrice; }
        set { SetTargetPrice(value); }
      }
      public Builder SetTargetPrice(double value) {
        PrepareBuilder();
        result.hasTargetPrice = true;
        result.targetPrice_ = value;
        return this;
      }
      public Builder ClearTargetPrice() {
        PrepareBuilder();
        result.hasTargetPrice = false;
        result.targetPrice_ = 0D;
        return this;
      }
      
      public bool HasNote {
        get { return result.hasNote; }
      }
      public pb::ByteString Note {
        get { return result.Note; }
        set { SetNote(value); }
      }
      public Builder SetNote(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasNote = true;
        result.note_ = value;
        return this;
      }
      public Builder ClearNote() {
        PrepareBuilder();
        result.hasNote = false;
        result.note_ = pb::ByteString.Empty;
        return this;
      }
      
      public bool HasStatusCN {
        get { return result.hasStatusCN; }
      }
      public pb::ByteString StatusCN {
        get { return result.StatusCN; }
        set { SetStatusCN(value); }
      }
      public Builder SetStatusCN(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasStatusCN = true;
        result.statusCN_ = value;
        return this;
      }
      public Builder ClearStatusCN() {
        PrepareBuilder();
        result.hasStatusCN = false;
        result.statusCN_ = pb::ByteString.Empty;
        return this;
      }
    }
    static PBMsgEntrust() {
      object.ReferenceEquals(global::PBWrapMsgOG.Generated.PBMsgOG.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class PBMsgAccount : pb::GeneratedMessage<PBMsgAccount, PBMsgAccount.Builder> {
    private PBMsgAccount() { }
    private static readonly PBMsgAccount defaultInstance = new PBMsgAccount().MakeReadOnly();
    private static readonly string[] _pBMsgAccountFieldNames = new string[] { "AvailableCapital", "TotalCapital", "buyMargin", "sellMargin" };
    private static readonly uint[] _pBMsgAccountFieldTags = new uint[] { 18, 10, 26, 34 };
    public static PBMsgAccount DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override PBMsgAccount DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override PBMsgAccount ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::PBWrapMsgOG.Generated.PBMsgOG.internal__static_PBWrapMsgOG_PBMsgAccount__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<PBMsgAccount, PBMsgAccount.Builder> InternalFieldAccessors {
      get { return global::PBWrapMsgOG.Generated.PBMsgOG.internal__static_PBWrapMsgOG_PBMsgAccount__FieldAccessorTable; }
    }
    
    public const int TotalCapitalFieldNumber = 1;
    private bool hasTotalCapital;
    private string totalCapital_ = "";
    public bool HasTotalCapital {
      get { return hasTotalCapital; }
    }
    public string TotalCapital {
      get { return totalCapital_; }
    }
    
    public const int AvailableCapitalFieldNumber = 2;
    private bool hasAvailableCapital;
    private string availableCapital_ = "";
    public bool HasAvailableCapital {
      get { return hasAvailableCapital; }
    }
    public string AvailableCapital {
      get { return availableCapital_; }
    }
    
    public const int BuyMarginFieldNumber = 3;
    private bool hasBuyMargin;
    private string buyMargin_ = "";
    public bool HasBuyMargin {
      get { return hasBuyMargin; }
    }
    public string BuyMargin {
      get { return buyMargin_; }
    }
    
    public const int SellMarginFieldNumber = 4;
    private bool hasSellMargin;
    private string sellMargin_ = "";
    public bool HasSellMargin {
      get { return hasSellMargin; }
    }
    public string SellMargin {
      get { return sellMargin_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasTotalCapital) return false;
        if (!hasAvailableCapital) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _pBMsgAccountFieldNames;
      if (hasTotalCapital) {
        output.WriteString(1, field_names[1], TotalCapital);
      }
      if (hasAvailableCapital) {
        output.WriteString(2, field_names[0], AvailableCapital);
      }
      if (hasBuyMargin) {
        output.WriteString(3, field_names[2], BuyMargin);
      }
      if (hasSellMargin) {
        output.WriteString(4, field_names[3], SellMargin);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasTotalCapital) {
          size += pb::CodedOutputStream.ComputeStringSize(1, TotalCapital);
        }
        if (hasAvailableCapital) {
          size += pb::CodedOutputStream.ComputeStringSize(2, AvailableCapital);
        }
        if (hasBuyMargin) {
          size += pb::CodedOutputStream.ComputeStringSize(3, BuyMargin);
        }
        if (hasSellMargin) {
          size += pb::CodedOutputStream.ComputeStringSize(4, SellMargin);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static PBMsgAccount ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static PBMsgAccount ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static PBMsgAccount ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static PBMsgAccount ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static PBMsgAccount ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static PBMsgAccount ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static PBMsgAccount ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static PBMsgAccount ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static PBMsgAccount ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static PBMsgAccount ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private PBMsgAccount MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(PBMsgAccount prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<PBMsgAccount, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(PBMsgAccount cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private PBMsgAccount result;
      
      private PBMsgAccount PrepareBuilder() {
        if (resultIsReadOnly) {
          PBMsgAccount original = result;
          result = new PBMsgAccount();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override PBMsgAccount MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::PBWrapMsgOG.PBMsgAccount.Descriptor; }
      }
      
      public override PBMsgAccount DefaultInstanceForType {
        get { return global::PBWrapMsgOG.PBMsgAccount.DefaultInstance; }
      }
      
      public override PBMsgAccount BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is PBMsgAccount) {
          return MergeFrom((PBMsgAccount) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(PBMsgAccount other) {
        if (other == global::PBWrapMsgOG.PBMsgAccount.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasTotalCapital) {
          TotalCapital = other.TotalCapital;
        }
        if (other.HasAvailableCapital) {
          AvailableCapital = other.AvailableCapital;
        }
        if (other.HasBuyMargin) {
          BuyMargin = other.BuyMargin;
        }
        if (other.HasSellMargin) {
          SellMargin = other.SellMargin;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_pBMsgAccountFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _pBMsgAccountFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasTotalCapital = input.ReadString(ref result.totalCapital_);
              break;
            }
            case 18: {
              result.hasAvailableCapital = input.ReadString(ref result.availableCapital_);
              break;
            }
            case 26: {
              result.hasBuyMargin = input.ReadString(ref result.buyMargin_);
              break;
            }
            case 34: {
              result.hasSellMargin = input.ReadString(ref result.sellMargin_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasTotalCapital {
        get { return result.hasTotalCapital; }
      }
      public string TotalCapital {
        get { return result.TotalCapital; }
        set { SetTotalCapital(value); }
      }
      public Builder SetTotalCapital(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTotalCapital = true;
        result.totalCapital_ = value;
        return this;
      }
      public Builder ClearTotalCapital() {
        PrepareBuilder();
        result.hasTotalCapital = false;
        result.totalCapital_ = "";
        return this;
      }
      
      public bool HasAvailableCapital {
        get { return result.hasAvailableCapital; }
      }
      public string AvailableCapital {
        get { return result.AvailableCapital; }
        set { SetAvailableCapital(value); }
      }
      public Builder SetAvailableCapital(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAvailableCapital = true;
        result.availableCapital_ = value;
        return this;
      }
      public Builder ClearAvailableCapital() {
        PrepareBuilder();
        result.hasAvailableCapital = false;
        result.availableCapital_ = "";
        return this;
      }
      
      public bool HasBuyMargin {
        get { return result.hasBuyMargin; }
      }
      public string BuyMargin {
        get { return result.BuyMargin; }
        set { SetBuyMargin(value); }
      }
      public Builder SetBuyMargin(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasBuyMargin = true;
        result.buyMargin_ = value;
        return this;
      }
      public Builder ClearBuyMargin() {
        PrepareBuilder();
        result.hasBuyMargin = false;
        result.buyMargin_ = "";
        return this;
      }
      
      public bool HasSellMargin {
        get { return result.hasSellMargin; }
      }
      public string SellMargin {
        get { return result.SellMargin; }
        set { SetSellMargin(value); }
      }
      public Builder SetSellMargin(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSellMargin = true;
        result.sellMargin_ = value;
        return this;
      }
      public Builder ClearSellMargin() {
        PrepareBuilder();
        result.hasSellMargin = false;
        result.sellMargin_ = "";
        return this;
      }
    }
    static PBMsgAccount() {
      object.ReferenceEquals(global::PBWrapMsgOG.Generated.PBMsgOG.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class PBMsgPosition : pb::GeneratedMessage<PBMsgPosition, PBMsgPosition.Builder> {
    private PBMsgPosition() { }
    private static readonly PBMsgPosition defaultInstance = new PBMsgPosition().MakeReadOnly();
    private static readonly string[] _pBMsgPositionFieldNames = new string[] { "latestPrice", "longPosition", "longPrice", "name", "netPosition", "profit", "shortPosition", "shortPrice", "symbol" };
    private static readonly uint[] _pBMsgPositionFieldTags = new uint[] { 66, 26, 34, 18, 56, 74, 42, 50, 10 };
    public static PBMsgPosition DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override PBMsgPosition DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override PBMsgPosition ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::PBWrapMsgOG.Generated.PBMsgOG.internal__static_PBWrapMsgOG_PBMsgPosition__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<PBMsgPosition, PBMsgPosition.Builder> InternalFieldAccessors {
      get { return global::PBWrapMsgOG.Generated.PBMsgOG.internal__static_PBWrapMsgOG_PBMsgPosition__FieldAccessorTable; }
    }
    
    public const int SymbolFieldNumber = 1;
    private bool hasSymbol;
    private string symbol_ = "";
    public bool HasSymbol {
      get { return hasSymbol; }
    }
    public string Symbol {
      get { return symbol_; }
    }
    
    public const int NameFieldNumber = 2;
    private bool hasName;
    private pb::ByteString name_ = pb::ByteString.Empty;
    public bool HasName {
      get { return hasName; }
    }
    public pb::ByteString Name {
      get { return name_; }
    }
    
    public const int LongPositionFieldNumber = 3;
    private bool hasLongPosition;
    private string longPosition_ = "";
    public bool HasLongPosition {
      get { return hasLongPosition; }
    }
    public string LongPosition {
      get { return longPosition_; }
    }
    
    public const int LongPriceFieldNumber = 4;
    private bool hasLongPrice;
    private string longPrice_ = "";
    public bool HasLongPrice {
      get { return hasLongPrice; }
    }
    public string LongPrice {
      get { return longPrice_; }
    }
    
    public const int ShortPositionFieldNumber = 5;
    private bool hasShortPosition;
    private string shortPosition_ = "";
    public bool HasShortPosition {
      get { return hasShortPosition; }
    }
    public string ShortPosition {
      get { return shortPosition_; }
    }
    
    public const int ShortPriceFieldNumber = 6;
    private bool hasShortPrice;
    private string shortPrice_ = "";
    public bool HasShortPrice {
      get { return hasShortPrice; }
    }
    public string ShortPrice {
      get { return shortPrice_; }
    }
    
    public const int NetPositionFieldNumber = 7;
    private bool hasNetPosition;
    private long netPosition_;
    public bool HasNetPosition {
      get { return hasNetPosition; }
    }
    public long NetPosition {
      get { return netPosition_; }
    }
    
    public const int LatestPriceFieldNumber = 8;
    private bool hasLatestPrice;
    private string latestPrice_ = "";
    public bool HasLatestPrice {
      get { return hasLatestPrice; }
    }
    public string LatestPrice {
      get { return latestPrice_; }
    }
    
    public const int ProfitFieldNumber = 9;
    private bool hasProfit;
    private string profit_ = "";
    public bool HasProfit {
      get { return hasProfit; }
    }
    public string Profit {
      get { return profit_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasSymbol) return false;
        if (!hasName) return false;
        if (!hasLongPosition) return false;
        if (!hasLongPrice) return false;
        if (!hasShortPosition) return false;
        if (!hasShortPrice) return false;
        if (!hasNetPosition) return false;
        if (!hasLatestPrice) return false;
        if (!hasProfit) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _pBMsgPositionFieldNames;
      if (hasSymbol) {
        output.WriteString(1, field_names[8], Symbol);
      }
      if (hasName) {
        output.WriteBytes(2, field_names[3], Name);
      }
      if (hasLongPosition) {
        output.WriteString(3, field_names[1], LongPosition);
      }
      if (hasLongPrice) {
        output.WriteString(4, field_names[2], LongPrice);
      }
      if (hasShortPosition) {
        output.WriteString(5, field_names[6], ShortPosition);
      }
      if (hasShortPrice) {
        output.WriteString(6, field_names[7], ShortPrice);
      }
      if (hasNetPosition) {
        output.WriteInt64(7, field_names[4], NetPosition);
      }
      if (hasLatestPrice) {
        output.WriteString(8, field_names[0], LatestPrice);
      }
      if (hasProfit) {
        output.WriteString(9, field_names[5], Profit);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasSymbol) {
          size += pb::CodedOutputStream.ComputeStringSize(1, Symbol);
        }
        if (hasName) {
          size += pb::CodedOutputStream.ComputeBytesSize(2, Name);
        }
        if (hasLongPosition) {
          size += pb::CodedOutputStream.ComputeStringSize(3, LongPosition);
        }
        if (hasLongPrice) {
          size += pb::CodedOutputStream.ComputeStringSize(4, LongPrice);
        }
        if (hasShortPosition) {
          size += pb::CodedOutputStream.ComputeStringSize(5, ShortPosition);
        }
        if (hasShortPrice) {
          size += pb::CodedOutputStream.ComputeStringSize(6, ShortPrice);
        }
        if (hasNetPosition) {
          size += pb::CodedOutputStream.ComputeInt64Size(7, NetPosition);
        }
        if (hasLatestPrice) {
          size += pb::CodedOutputStream.ComputeStringSize(8, LatestPrice);
        }
        if (hasProfit) {
          size += pb::CodedOutputStream.ComputeStringSize(9, Profit);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static PBMsgPosition ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static PBMsgPosition ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static PBMsgPosition ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static PBMsgPosition ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static PBMsgPosition ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static PBMsgPosition ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static PBMsgPosition ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static PBMsgPosition ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static PBMsgPosition ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static PBMsgPosition ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private PBMsgPosition MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(PBMsgPosition prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<PBMsgPosition, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(PBMsgPosition cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private PBMsgPosition result;
      
      private PBMsgPosition PrepareBuilder() {
        if (resultIsReadOnly) {
          PBMsgPosition original = result;
          result = new PBMsgPosition();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override PBMsgPosition MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::PBWrapMsgOG.PBMsgPosition.Descriptor; }
      }
      
      public override PBMsgPosition DefaultInstanceForType {
        get { return global::PBWrapMsgOG.PBMsgPosition.DefaultInstance; }
      }
      
      public override PBMsgPosition BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is PBMsgPosition) {
          return MergeFrom((PBMsgPosition) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(PBMsgPosition other) {
        if (other == global::PBWrapMsgOG.PBMsgPosition.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasSymbol) {
          Symbol = other.Symbol;
        }
        if (other.HasName) {
          Name = other.Name;
        }
        if (other.HasLongPosition) {
          LongPosition = other.LongPosition;
        }
        if (other.HasLongPrice) {
          LongPrice = other.LongPrice;
        }
        if (other.HasShortPosition) {
          ShortPosition = other.ShortPosition;
        }
        if (other.HasShortPrice) {
          ShortPrice = other.ShortPrice;
        }
        if (other.HasNetPosition) {
          NetPosition = other.NetPosition;
        }
        if (other.HasLatestPrice) {
          LatestPrice = other.LatestPrice;
        }
        if (other.HasProfit) {
          Profit = other.Profit;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_pBMsgPositionFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _pBMsgPositionFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasSymbol = input.ReadString(ref result.symbol_);
              break;
            }
            case 18: {
              result.hasName = input.ReadBytes(ref result.name_);
              break;
            }
            case 26: {
              result.hasLongPosition = input.ReadString(ref result.longPosition_);
              break;
            }
            case 34: {
              result.hasLongPrice = input.ReadString(ref result.longPrice_);
              break;
            }
            case 42: {
              result.hasShortPosition = input.ReadString(ref result.shortPosition_);
              break;
            }
            case 50: {
              result.hasShortPrice = input.ReadString(ref result.shortPrice_);
              break;
            }
            case 56: {
              result.hasNetPosition = input.ReadInt64(ref result.netPosition_);
              break;
            }
            case 66: {
              result.hasLatestPrice = input.ReadString(ref result.latestPrice_);
              break;
            }
            case 74: {
              result.hasProfit = input.ReadString(ref result.profit_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasSymbol {
        get { return result.hasSymbol; }
      }
      public string Symbol {
        get { return result.Symbol; }
        set { SetSymbol(value); }
      }
      public Builder SetSymbol(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSymbol = true;
        result.symbol_ = value;
        return this;
      }
      public Builder ClearSymbol() {
        PrepareBuilder();
        result.hasSymbol = false;
        result.symbol_ = "";
        return this;
      }
      
      public bool HasName {
        get { return result.hasName; }
      }
      public pb::ByteString Name {
        get { return result.Name; }
        set { SetName(value); }
      }
      public Builder SetName(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasName = true;
        result.name_ = value;
        return this;
      }
      public Builder ClearName() {
        PrepareBuilder();
        result.hasName = false;
        result.name_ = pb::ByteString.Empty;
        return this;
      }
      
      public bool HasLongPosition {
        get { return result.hasLongPosition; }
      }
      public string LongPosition {
        get { return result.LongPosition; }
        set { SetLongPosition(value); }
      }
      public Builder SetLongPosition(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasLongPosition = true;
        result.longPosition_ = value;
        return this;
      }
      public Builder ClearLongPosition() {
        PrepareBuilder();
        result.hasLongPosition = false;
        result.longPosition_ = "";
        return this;
      }
      
      public bool HasLongPrice {
        get { return result.hasLongPrice; }
      }
      public string LongPrice {
        get { return result.LongPrice; }
        set { SetLongPrice(value); }
      }
      public Builder SetLongPrice(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasLongPrice = true;
        result.longPrice_ = value;
        return this;
      }
      public Builder ClearLongPrice() {
        PrepareBuilder();
        result.hasLongPrice = false;
        result.longPrice_ = "";
        return this;
      }
      
      public bool HasShortPosition {
        get { return result.hasShortPosition; }
      }
      public string ShortPosition {
        get { return result.ShortPosition; }
        set { SetShortPosition(value); }
      }
      public Builder SetShortPosition(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasShortPosition = true;
        result.shortPosition_ = value;
        return this;
      }
      public Builder ClearShortPosition() {
        PrepareBuilder();
        result.hasShortPosition = false;
        result.shortPosition_ = "";
        return this;
      }
      
      public bool HasShortPrice {
        get { return result.hasShortPrice; }
      }
      public string ShortPrice {
        get { return result.ShortPrice; }
        set { SetShortPrice(value); }
      }
      public Builder SetShortPrice(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasShortPrice = true;
        result.shortPrice_ = value;
        return this;
      }
      public Builder ClearShortPrice() {
        PrepareBuilder();
        result.hasShortPrice = false;
        result.shortPrice_ = "";
        return this;
      }
      
      public bool HasNetPosition {
        get { return result.hasNetPosition; }
      }
      public long NetPosition {
        get { return result.NetPosition; }
        set { SetNetPosition(value); }
      }
      public Builder SetNetPosition(long value) {
        PrepareBuilder();
        result.hasNetPosition = true;
        result.netPosition_ = value;
        return this;
      }
      public Builder ClearNetPosition() {
        PrepareBuilder();
        result.hasNetPosition = false;
        result.netPosition_ = 0L;
        return this;
      }
      
      public bool HasLatestPrice {
        get { return result.hasLatestPrice; }
      }
      public string LatestPrice {
        get { return result.LatestPrice; }
        set { SetLatestPrice(value); }
      }
      public Builder SetLatestPrice(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasLatestPrice = true;
        result.latestPrice_ = value;
        return this;
      }
      public Builder ClearLatestPrice() {
        PrepareBuilder();
        result.hasLatestPrice = false;
        result.latestPrice_ = "";
        return this;
      }
      
      public bool HasProfit {
        get { return result.hasProfit; }
      }
      public string Profit {
        get { return result.Profit; }
        set { SetProfit(value); }
      }
      public Builder SetProfit(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasProfit = true;
        result.profit_ = value;
        return this;
      }
      public Builder ClearProfit() {
        PrepareBuilder();
        result.hasProfit = false;
        result.profit_ = "";
        return this;
      }
    }
    static PBMsgPosition() {
      object.ReferenceEquals(global::PBWrapMsgOG.Generated.PBMsgOG.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class PBMsgOGRpt : pb::GeneratedMessage<PBMsgOGRpt, PBMsgOGRpt.Builder> {
    private PBMsgOGRpt() { }
    private static readonly PBMsgOGRpt defaultInstance = new PBMsgOGRpt().MakeReadOnly();
    private static readonly string[] _pBMsgOGRptFieldNames = new string[] { "account", "entrust", "execution", "messageId", "messageService", "position", "reportService" };
    private static readonly uint[] _pBMsgOGRptFieldTags = new uint[] { 42, 58, 34, 8, 18, 50, 24 };
    public static PBMsgOGRpt DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override PBMsgOGRpt DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override PBMsgOGRpt ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::PBWrapMsgOG.Generated.PBMsgOG.internal__static_PBWrapMsgOG_PBMsgOGRpt__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<PBMsgOGRpt, PBMsgOGRpt.Builder> InternalFieldAccessors {
      get { return global::PBWrapMsgOG.Generated.PBMsgOG.internal__static_PBWrapMsgOG_PBMsgOGRpt__FieldAccessorTable; }
    }
    
    public const int MessageIdFieldNumber = 1;
    private bool hasMessageId;
    private int messageId_;
    public bool HasMessageId {
      get { return hasMessageId; }
    }
    public int MessageId {
      get { return messageId_; }
    }
    
    public const int MessageServiceFieldNumber = 2;
    private bool hasMessageService;
    private string messageService_ = "";
    public bool HasMessageService {
      get { return hasMessageService; }
    }
    public string MessageService {
      get { return messageService_; }
    }
    
    public const int ReportServiceFieldNumber = 3;
    private bool hasReportService;
    private global::PBWrapMsgOG.ReportService reportService_ = global::PBWrapMsgOG.ReportService.EQUITY_ORDER_ACKNOWLEDGEMENT;
    public bool HasReportService {
      get { return hasReportService; }
    }
    public global::PBWrapMsgOG.ReportService ReportService {
      get { return reportService_; }
    }
    
    public const int ExecutionFieldNumber = 4;
    private pbc::PopsicleList<global::PBWrapMsgOG.PBMsgExecution> execution_ = new pbc::PopsicleList<global::PBWrapMsgOG.PBMsgExecution>();
    public scg::IList<global::PBWrapMsgOG.PBMsgExecution> ExecutionList {
      get { return execution_; }
    }
    public int ExecutionCount {
      get { return execution_.Count; }
    }
    public global::PBWrapMsgOG.PBMsgExecution GetExecution(int index) {
      return execution_[index];
    }
    
    public const int AccountFieldNumber = 5;
    private bool hasAccount;
    private global::PBWrapMsgOG.PBMsgAccount account_;
    public bool HasAccount {
      get { return hasAccount; }
    }
    public global::PBWrapMsgOG.PBMsgAccount Account {
      get { return account_ ?? global::PBWrapMsgOG.PBMsgAccount.DefaultInstance; }
    }
    
    public const int PositionFieldNumber = 6;
    private pbc::PopsicleList<global::PBWrapMsgOG.PBMsgPosition> position_ = new pbc::PopsicleList<global::PBWrapMsgOG.PBMsgPosition>();
    public scg::IList<global::PBWrapMsgOG.PBMsgPosition> PositionList {
      get { return position_; }
    }
    public int PositionCount {
      get { return position_.Count; }
    }
    public global::PBWrapMsgOG.PBMsgPosition GetPosition(int index) {
      return position_[index];
    }
    
    public const int EntrustFieldNumber = 7;
    private pbc::PopsicleList<global::PBWrapMsgOG.PBMsgEntrust> entrust_ = new pbc::PopsicleList<global::PBWrapMsgOG.PBMsgEntrust>();
    public scg::IList<global::PBWrapMsgOG.PBMsgEntrust> EntrustList {
      get { return entrust_; }
    }
    public int EntrustCount {
      get { return entrust_.Count; }
    }
    public global::PBWrapMsgOG.PBMsgEntrust GetEntrust(int index) {
      return entrust_[index];
    }
    
    public override bool IsInitialized {
      get {
        if (!hasMessageId) return false;
        if (!hasMessageService) return false;
        if (!hasReportService) return false;
        foreach (global::PBWrapMsgOG.PBMsgExecution element in ExecutionList) {
          if (!element.IsInitialized) return false;
        }
        if (HasAccount) {
          if (!Account.IsInitialized) return false;
        }
        foreach (global::PBWrapMsgOG.PBMsgPosition element in PositionList) {
          if (!element.IsInitialized) return false;
        }
        foreach (global::PBWrapMsgOG.PBMsgEntrust element in EntrustList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _pBMsgOGRptFieldNames;
      if (hasMessageId) {
        output.WriteInt32(1, field_names[3], MessageId);
      }
      if (hasMessageService) {
        output.WriteString(2, field_names[4], MessageService);
      }
      if (hasReportService) {
        output.WriteEnum(3, field_names[6], (int) ReportService, ReportService);
      }
      if (execution_.Count > 0) {
        output.WriteMessageArray(4, field_names[2], execution_);
      }
      if (hasAccount) {
        output.WriteMessage(5, field_names[0], Account);
      }
      if (position_.Count > 0) {
        output.WriteMessageArray(6, field_names[5], position_);
      }
      if (entrust_.Count > 0) {
        output.WriteMessageArray(7, field_names[1], entrust_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasMessageId) {
          size += pb::CodedOutputStream.ComputeInt32Size(1, MessageId);
        }
        if (hasMessageService) {
          size += pb::CodedOutputStream.ComputeStringSize(2, MessageService);
        }
        if (hasReportService) {
          size += pb::CodedOutputStream.ComputeEnumSize(3, (int) ReportService);
        }
        foreach (global::PBWrapMsgOG.PBMsgExecution element in ExecutionList) {
          size += pb::CodedOutputStream.ComputeMessageSize(4, element);
        }
        if (hasAccount) {
          size += pb::CodedOutputStream.ComputeMessageSize(5, Account);
        }
        foreach (global::PBWrapMsgOG.PBMsgPosition element in PositionList) {
          size += pb::CodedOutputStream.ComputeMessageSize(6, element);
        }
        foreach (global::PBWrapMsgOG.PBMsgEntrust element in EntrustList) {
          size += pb::CodedOutputStream.ComputeMessageSize(7, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static PBMsgOGRpt ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static PBMsgOGRpt ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static PBMsgOGRpt ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static PBMsgOGRpt ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static PBMsgOGRpt ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static PBMsgOGRpt ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static PBMsgOGRpt ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static PBMsgOGRpt ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static PBMsgOGRpt ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static PBMsgOGRpt ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private PBMsgOGRpt MakeReadOnly() {
      execution_.MakeReadOnly();
      position_.MakeReadOnly();
      entrust_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(PBMsgOGRpt prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<PBMsgOGRpt, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(PBMsgOGRpt cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private PBMsgOGRpt result;
      
      private PBMsgOGRpt PrepareBuilder() {
        if (resultIsReadOnly) {
          PBMsgOGRpt original = result;
          result = new PBMsgOGRpt();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override PBMsgOGRpt MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::PBWrapMsgOG.PBMsgOGRpt.Descriptor; }
      }
      
      public override PBMsgOGRpt DefaultInstanceForType {
        get { return global::PBWrapMsgOG.PBMsgOGRpt.DefaultInstance; }
      }
      
      public override PBMsgOGRpt BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is PBMsgOGRpt) {
          return MergeFrom((PBMsgOGRpt) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(PBMsgOGRpt other) {
        if (other == global::PBWrapMsgOG.PBMsgOGRpt.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasMessageId) {
          MessageId = other.MessageId;
        }
        if (other.HasMessageService) {
          MessageService = other.MessageService;
        }
        if (other.HasReportService) {
          ReportService = other.ReportService;
        }
        if (other.execution_.Count != 0) {
          result.execution_.Add(other.execution_);
        }
        if (other.HasAccount) {
          MergeAccount(other.Account);
        }
        if (other.position_.Count != 0) {
          result.position_.Add(other.position_);
        }
        if (other.entrust_.Count != 0) {
          result.entrust_.Add(other.entrust_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_pBMsgOGRptFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _pBMsgOGRptFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasMessageId = input.ReadInt32(ref result.messageId_);
              break;
            }
            case 18: {
              result.hasMessageService = input.ReadString(ref result.messageService_);
              break;
            }
            case 24: {
              object unknown;
              if(input.ReadEnum(ref result.reportService_, out unknown)) {
                result.hasReportService = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(3, (ulong)(int)unknown);
              }
              break;
            }
            case 34: {
              input.ReadMessageArray(tag, field_name, result.execution_, global::PBWrapMsgOG.PBMsgExecution.DefaultInstance, extensionRegistry);
              break;
            }
            case 42: {
              global::PBWrapMsgOG.PBMsgAccount.Builder subBuilder = global::PBWrapMsgOG.PBMsgAccount.CreateBuilder();
              if (result.hasAccount) {
                subBuilder.MergeFrom(Account);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Account = subBuilder.BuildPartial();
              break;
            }
            case 50: {
              input.ReadMessageArray(tag, field_name, result.position_, global::PBWrapMsgOG.PBMsgPosition.DefaultInstance, extensionRegistry);
              break;
            }
            case 58: {
              input.ReadMessageArray(tag, field_name, result.entrust_, global::PBWrapMsgOG.PBMsgEntrust.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasMessageId {
        get { return result.hasMessageId; }
      }
      public int MessageId {
        get { return result.MessageId; }
        set { SetMessageId(value); }
      }
      public Builder SetMessageId(int value) {
        PrepareBuilder();
        result.hasMessageId = true;
        result.messageId_ = value;
        return this;
      }
      public Builder ClearMessageId() {
        PrepareBuilder();
        result.hasMessageId = false;
        result.messageId_ = 0;
        return this;
      }
      
      public bool HasMessageService {
        get { return result.hasMessageService; }
      }
      public string MessageService {
        get { return result.MessageService; }
        set { SetMessageService(value); }
      }
      public Builder SetMessageService(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasMessageService = true;
        result.messageService_ = value;
        return this;
      }
      public Builder ClearMessageService() {
        PrepareBuilder();
        result.hasMessageService = false;
        result.messageService_ = "";
        return this;
      }
      
      public bool HasReportService {
       get { return result.hasReportService; }
      }
      public global::PBWrapMsgOG.ReportService ReportService {
        get { return result.ReportService; }
        set { SetReportService(value); }
      }
      public Builder SetReportService(global::PBWrapMsgOG.ReportService value) {
        PrepareBuilder();
        result.hasReportService = true;
        result.reportService_ = value;
        return this;
      }
      public Builder ClearReportService() {
        PrepareBuilder();
        result.hasReportService = false;
        result.reportService_ = global::PBWrapMsgOG.ReportService.EQUITY_ORDER_ACKNOWLEDGEMENT;
        return this;
      }
      
      public pbc::IPopsicleList<global::PBWrapMsgOG.PBMsgExecution> ExecutionList {
        get { return PrepareBuilder().execution_; }
      }
      public int ExecutionCount {
        get { return result.ExecutionCount; }
      }
      public global::PBWrapMsgOG.PBMsgExecution GetExecution(int index) {
        return result.GetExecution(index);
      }
      public Builder SetExecution(int index, global::PBWrapMsgOG.PBMsgExecution value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.execution_[index] = value;
        return this;
      }
      public Builder SetExecution(int index, global::PBWrapMsgOG.PBMsgExecution.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.execution_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddExecution(global::PBWrapMsgOG.PBMsgExecution value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.execution_.Add(value);
        return this;
      }
      public Builder AddExecution(global::PBWrapMsgOG.PBMsgExecution.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.execution_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeExecution(scg::IEnumerable<global::PBWrapMsgOG.PBMsgExecution> values) {
        PrepareBuilder();
        result.execution_.Add(values);
        return this;
      }
      public Builder ClearExecution() {
        PrepareBuilder();
        result.execution_.Clear();
        return this;
      }
      
      public bool HasAccount {
       get { return result.hasAccount; }
      }
      public global::PBWrapMsgOG.PBMsgAccount Account {
        get { return result.Account; }
        set { SetAccount(value); }
      }
      public Builder SetAccount(global::PBWrapMsgOG.PBMsgAccount value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAccount = true;
        result.account_ = value;
        return this;
      }
      public Builder SetAccount(global::PBWrapMsgOG.PBMsgAccount.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAccount = true;
        result.account_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAccount(global::PBWrapMsgOG.PBMsgAccount value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAccount &&
            result.account_ != global::PBWrapMsgOG.PBMsgAccount.DefaultInstance) {
            result.account_ = global::PBWrapMsgOG.PBMsgAccount.CreateBuilder(result.account_).MergeFrom(value).BuildPartial();
        } else {
          result.account_ = value;
        }
        result.hasAccount = true;
        return this;
      }
      public Builder ClearAccount() {
        PrepareBuilder();
        result.hasAccount = false;
        result.account_ = null;
        return this;
      }
      
      public pbc::IPopsicleList<global::PBWrapMsgOG.PBMsgPosition> PositionList {
        get { return PrepareBuilder().position_; }
      }
      public int PositionCount {
        get { return result.PositionCount; }
      }
      public global::PBWrapMsgOG.PBMsgPosition GetPosition(int index) {
        return result.GetPosition(index);
      }
      public Builder SetPosition(int index, global::PBWrapMsgOG.PBMsgPosition value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.position_[index] = value;
        return this;
      }
      public Builder SetPosition(int index, global::PBWrapMsgOG.PBMsgPosition.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.position_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddPosition(global::PBWrapMsgOG.PBMsgPosition value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.position_.Add(value);
        return this;
      }
      public Builder AddPosition(global::PBWrapMsgOG.PBMsgPosition.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.position_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangePosition(scg::IEnumerable<global::PBWrapMsgOG.PBMsgPosition> values) {
        PrepareBuilder();
        result.position_.Add(values);
        return this;
      }
      public Builder ClearPosition() {
        PrepareBuilder();
        result.position_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<global::PBWrapMsgOG.PBMsgEntrust> EntrustList {
        get { return PrepareBuilder().entrust_; }
      }
      public int EntrustCount {
        get { return result.EntrustCount; }
      }
      public global::PBWrapMsgOG.PBMsgEntrust GetEntrust(int index) {
        return result.GetEntrust(index);
      }
      public Builder SetEntrust(int index, global::PBWrapMsgOG.PBMsgEntrust value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.entrust_[index] = value;
        return this;
      }
      public Builder SetEntrust(int index, global::PBWrapMsgOG.PBMsgEntrust.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.entrust_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddEntrust(global::PBWrapMsgOG.PBMsgEntrust value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.entrust_.Add(value);
        return this;
      }
      public Builder AddEntrust(global::PBWrapMsgOG.PBMsgEntrust.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.entrust_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeEntrust(scg::IEnumerable<global::PBWrapMsgOG.PBMsgEntrust> values) {
        PrepareBuilder();
        result.entrust_.Add(values);
        return this;
      }
      public Builder ClearEntrust() {
        PrepareBuilder();
        result.entrust_.Clear();
        return this;
      }
    }
    static PBMsgOGRpt() {
      object.ReferenceEquals(global::PBWrapMsgOG.Generated.PBMsgOG.Descriptor, null);
    }
  }
  
  #endregion
  
}

#endregion Designer generated code
