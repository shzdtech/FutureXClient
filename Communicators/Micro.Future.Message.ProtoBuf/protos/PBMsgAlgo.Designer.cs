// Generated by ProtoGen, Version=2.4.1.521, Culture=neutral, PublicKeyToken=55f7125234beb589.  DO NOT EDIT!
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace PBWrapMsgAlgo {
  
  namespace Generated {
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class PBMsgAlgo {
    
      #region Extension registration
      public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
      }
      #endregion
      #region Static variables
      internal static pbd::MessageDescriptor internal__static_PBWrapMsgAlgo_PBMsgAlgoOrder__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::PBWrapMsgAlgo.PBMsgAlgoOrder, global::PBWrapMsgAlgo.PBMsgAlgoOrder.Builder> internal__static_PBWrapMsgAlgo_PBMsgAlgoOrder__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_PBWrapMsgAlgo_PBMsgAlgoOrderList__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::PBWrapMsgAlgo.PBMsgAlgoOrderList, global::PBWrapMsgAlgo.PBMsgAlgoOrderList.Builder> internal__static_PBWrapMsgAlgo_PBMsgAlgoOrderList__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_PBWrapMsgAlgo_PBMsgCandle__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::PBWrapMsgAlgo.PBMsgCandle, global::PBWrapMsgAlgo.PBMsgCandle.Builder> internal__static_PBWrapMsgAlgo_PBMsgCandle__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_PBWrapMsgAlgo_PBMsgCandleQueue__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::PBWrapMsgAlgo.PBMsgCandleQueue, global::PBWrapMsgAlgo.PBMsgCandleQueue.Builder> internal__static_PBWrapMsgAlgo_PBMsgCandleQueue__FieldAccessorTable;
      #endregion
      #region Descriptor
      public static pbd::FileDescriptor Descriptor {
        get { return descriptor; }
      }
      private static pbd::FileDescriptor descriptor;
      
      static PBMsgAlgo() {
        byte[] descriptorData = global::System.Convert.FromBase64String(
            "Cg9QQk1zZ0FsZ28ucHJvdG8SDVBCV3JhcE1zZ0FsZ28itQEKDlBCTXNnQWxn" + 
            "b09yZGVyEg4KBnN5bWJvbBgBIAIoCRITCgtldWl0eU1hcmtldBgCIAIoCRIW" + 
            "Cg5vcmRlckRpcmVjdGlvbhgDIAIoCRIRCglwcmljZVR5cGUYBCACKAkSDAoE" + 
            "c2l6ZRgFIAIoBRIWCghFcXRPckZ1dBgGIAIoCDoEdHJ1ZRISCgpmdXR1cmVG" + 
            "bGFnGAcgASgJEhkKEWZ1dHVyZUFjY291bnRUeXBlGAggASgJIrECChJQQk1z" + 
            "Z0FsZ29PcmRlckxpc3QSEQoJbWVzc2FnZUlkGAEgAigFEhYKDm1lc3NhZ2VT" + 
            "ZXJ2aWNlGAIgAigJEi8KC21lc3NhZ2VUeXBlGAMgAigOMhouUEJXcmFwTXNn" + 
            "QWxnby5NZXNzYWdlVHlwZRIVCg1wYXJlbnRPcmRlcklkGAQgAigJEjYKD2Jh" + 
            "dE5ld09yZGVyTGlzdBgFIAMoCzIdLlBCV3JhcE1zZ0FsZ28uUEJNc2dBbGdv" + 
            "T3JkZXISGwoTZXF0QnV5Q2hhbmdlUGVyY2VudBgGIAEoARIcChRlcXRTZWxs" + 
            "Q2hhbmdlUGVyY2VudBgHIAEoARIZChFmdXRCdXlDaGFuZ2VQb2ludBgIIAEo" + 
            "ERIaChJmdXRTZWxsQ2hhbmdlUG9pbnQYCSABKBEiWAoLUEJNc2dDYW5kbGUS" + 
            "EQoJdGltZXN0YW1wGAEgAigJEgwKBG9wZW4YAiABKAUSDQoFY2xvc2UYAyAB" + 
            "KAUSDAoEaGlnaBgEIAEoBRILCgNsb3cYBSABKAUiTAoQUEJNc2dDYW5kbGVR" + 
            "dWV1ZRILCgNyaWMYASACKAkSKwoHY2FuZGxlcxgCIAMoCzIaLlBCV3JhcE1z" + 
            "Z0FsZ28uUEJNc2dDYW5kbGUqUQoLTWVzc2FnZVR5cGUSEwoPQkFUQ0hfTkVX" + 
            "X09SREVSEAESFQoRQkFUQ0hfUkVUUllfT1JERVIQAhIWChJCQVRDSF9DQU5D" + 
            "RUxfT1JERVIQA0IgCg9Qcm90b0J1Zk1lc3NhZ2VCDVBCV3JhcE1zZ0FsZ28=");
        pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
          descriptor = root;
          internal__static_PBWrapMsgAlgo_PBMsgAlgoOrder__Descriptor = Descriptor.MessageTypes[0];
          internal__static_PBWrapMsgAlgo_PBMsgAlgoOrder__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::PBWrapMsgAlgo.PBMsgAlgoOrder, global::PBWrapMsgAlgo.PBMsgAlgoOrder.Builder>(internal__static_PBWrapMsgAlgo_PBMsgAlgoOrder__Descriptor,
                  new string[] { "Symbol", "EuityMarket", "OrderDirection", "PriceType", "Size", "EqtOrFut", "FutureFlag", "FutureAccountType", });
          internal__static_PBWrapMsgAlgo_PBMsgAlgoOrderList__Descriptor = Descriptor.MessageTypes[1];
          internal__static_PBWrapMsgAlgo_PBMsgAlgoOrderList__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::PBWrapMsgAlgo.PBMsgAlgoOrderList, global::PBWrapMsgAlgo.PBMsgAlgoOrderList.Builder>(internal__static_PBWrapMsgAlgo_PBMsgAlgoOrderList__Descriptor,
                  new string[] { "MessageId", "MessageService", "MessageType", "ParentOrderId", "BatNewOrderList", "EqtBuyChangePercent", "EqtSellChangePercent", "FutBuyChangePoint", "FutSellChangePoint", });
          internal__static_PBWrapMsgAlgo_PBMsgCandle__Descriptor = Descriptor.MessageTypes[2];
          internal__static_PBWrapMsgAlgo_PBMsgCandle__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::PBWrapMsgAlgo.PBMsgCandle, global::PBWrapMsgAlgo.PBMsgCandle.Builder>(internal__static_PBWrapMsgAlgo_PBMsgCandle__Descriptor,
                  new string[] { "Timestamp", "Open", "Close", "High", "Low", });
          internal__static_PBWrapMsgAlgo_PBMsgCandleQueue__Descriptor = Descriptor.MessageTypes[3];
          internal__static_PBWrapMsgAlgo_PBMsgCandleQueue__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::PBWrapMsgAlgo.PBMsgCandleQueue, global::PBWrapMsgAlgo.PBMsgCandleQueue.Builder>(internal__static_PBWrapMsgAlgo_PBMsgCandleQueue__Descriptor,
                  new string[] { "Ric", "Candles", });
          return null;
        };
        pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
            new pbd::FileDescriptor[] {
            }, assigner);
      }
      #endregion
      
    }
  }
  #region Enums
  public enum MessageType {
    BATCH_NEW_ORDER = 1,
    BATCH_RETRY_ORDER = 2,
    BATCH_CANCEL_ORDER = 3,
  }
  
  #endregion
  
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class PBMsgAlgoOrder : pb::GeneratedMessage<PBMsgAlgoOrder, PBMsgAlgoOrder.Builder> {
    private PBMsgAlgoOrder() { }
    private static readonly PBMsgAlgoOrder defaultInstance = new PBMsgAlgoOrder().MakeReadOnly();
    private static readonly string[] _pBMsgAlgoOrderFieldNames = new string[] { "EqtOrFut", "euityMarket", "futureAccountType", "futureFlag", "orderDirection", "priceType", "size", "symbol" };
    private static readonly uint[] _pBMsgAlgoOrderFieldTags = new uint[] { 48, 18, 66, 58, 26, 34, 40, 10 };
    public static PBMsgAlgoOrder DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override PBMsgAlgoOrder DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override PBMsgAlgoOrder ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::PBWrapMsgAlgo.Generated.PBMsgAlgo.internal__static_PBWrapMsgAlgo_PBMsgAlgoOrder__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<PBMsgAlgoOrder, PBMsgAlgoOrder.Builder> InternalFieldAccessors {
      get { return global::PBWrapMsgAlgo.Generated.PBMsgAlgo.internal__static_PBWrapMsgAlgo_PBMsgAlgoOrder__FieldAccessorTable; }
    }
    
    public const int SymbolFieldNumber = 1;
    private bool hasSymbol;
    private string symbol_ = "";
    public bool HasSymbol {
      get { return hasSymbol; }
    }
    public string Symbol {
      get { return symbol_; }
    }
    
    public const int EuityMarketFieldNumber = 2;
    private bool hasEuityMarket;
    private string euityMarket_ = "";
    public bool HasEuityMarket {
      get { return hasEuityMarket; }
    }
    public string EuityMarket {
      get { return euityMarket_; }
    }
    
    public const int OrderDirectionFieldNumber = 3;
    private bool hasOrderDirection;
    private string orderDirection_ = "";
    public bool HasOrderDirection {
      get { return hasOrderDirection; }
    }
    public string OrderDirection {
      get { return orderDirection_; }
    }
    
    public const int PriceTypeFieldNumber = 4;
    private bool hasPriceType;
    private string priceType_ = "";
    public bool HasPriceType {
      get { return hasPriceType; }
    }
    public string PriceType {
      get { return priceType_; }
    }
    
    public const int SizeFieldNumber = 5;
    private bool hasSize;
    private int size_;
    public bool HasSize {
      get { return hasSize; }
    }
    public int Size {
      get { return size_; }
    }
    
    public const int EqtOrFutFieldNumber = 6;
    private bool hasEqtOrFut;
    private bool eqtOrFut_ = true;
    public bool HasEqtOrFut {
      get { return hasEqtOrFut; }
    }
    public bool EqtOrFut {
      get { return eqtOrFut_; }
    }
    
    public const int FutureFlagFieldNumber = 7;
    private bool hasFutureFlag;
    private string futureFlag_ = "";
    public bool HasFutureFlag {
      get { return hasFutureFlag; }
    }
    public string FutureFlag {
      get { return futureFlag_; }
    }
    
    public const int FutureAccountTypeFieldNumber = 8;
    private bool hasFutureAccountType;
    private string futureAccountType_ = "";
    public bool HasFutureAccountType {
      get { return hasFutureAccountType; }
    }
    public string FutureAccountType {
      get { return futureAccountType_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasSymbol) return false;
        if (!hasEuityMarket) return false;
        if (!hasOrderDirection) return false;
        if (!hasPriceType) return false;
        if (!hasSize) return false;
        if (!hasEqtOrFut) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _pBMsgAlgoOrderFieldNames;
      if (hasSymbol) {
        output.WriteString(1, field_names[7], Symbol);
      }
      if (hasEuityMarket) {
        output.WriteString(2, field_names[1], EuityMarket);
      }
      if (hasOrderDirection) {
        output.WriteString(3, field_names[4], OrderDirection);
      }
      if (hasPriceType) {
        output.WriteString(4, field_names[5], PriceType);
      }
      if (hasSize) {
        output.WriteInt32(5, field_names[6], Size);
      }
      if (hasEqtOrFut) {
        output.WriteBool(6, field_names[0], EqtOrFut);
      }
      if (hasFutureFlag) {
        output.WriteString(7, field_names[3], FutureFlag);
      }
      if (hasFutureAccountType) {
        output.WriteString(8, field_names[2], FutureAccountType);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasSymbol) {
          size += pb::CodedOutputStream.ComputeStringSize(1, Symbol);
        }
        if (hasEuityMarket) {
          size += pb::CodedOutputStream.ComputeStringSize(2, EuityMarket);
        }
        if (hasOrderDirection) {
          size += pb::CodedOutputStream.ComputeStringSize(3, OrderDirection);
        }
        if (hasPriceType) {
          size += pb::CodedOutputStream.ComputeStringSize(4, PriceType);
        }
        if (hasSize) {
          size += pb::CodedOutputStream.ComputeInt32Size(5, Size);
        }
        if (hasEqtOrFut) {
          size += pb::CodedOutputStream.ComputeBoolSize(6, EqtOrFut);
        }
        if (hasFutureFlag) {
          size += pb::CodedOutputStream.ComputeStringSize(7, FutureFlag);
        }
        if (hasFutureAccountType) {
          size += pb::CodedOutputStream.ComputeStringSize(8, FutureAccountType);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static PBMsgAlgoOrder ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static PBMsgAlgoOrder ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static PBMsgAlgoOrder ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static PBMsgAlgoOrder ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static PBMsgAlgoOrder ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static PBMsgAlgoOrder ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static PBMsgAlgoOrder ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static PBMsgAlgoOrder ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static PBMsgAlgoOrder ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static PBMsgAlgoOrder ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private PBMsgAlgoOrder MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(PBMsgAlgoOrder prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<PBMsgAlgoOrder, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(PBMsgAlgoOrder cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private PBMsgAlgoOrder result;
      
      private PBMsgAlgoOrder PrepareBuilder() {
        if (resultIsReadOnly) {
          PBMsgAlgoOrder original = result;
          result = new PBMsgAlgoOrder();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override PBMsgAlgoOrder MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::PBWrapMsgAlgo.PBMsgAlgoOrder.Descriptor; }
      }
      
      public override PBMsgAlgoOrder DefaultInstanceForType {
        get { return global::PBWrapMsgAlgo.PBMsgAlgoOrder.DefaultInstance; }
      }
      
      public override PBMsgAlgoOrder BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is PBMsgAlgoOrder) {
          return MergeFrom((PBMsgAlgoOrder) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(PBMsgAlgoOrder other) {
        if (other == global::PBWrapMsgAlgo.PBMsgAlgoOrder.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasSymbol) {
          Symbol = other.Symbol;
        }
        if (other.HasEuityMarket) {
          EuityMarket = other.EuityMarket;
        }
        if (other.HasOrderDirection) {
          OrderDirection = other.OrderDirection;
        }
        if (other.HasPriceType) {
          PriceType = other.PriceType;
        }
        if (other.HasSize) {
          Size = other.Size;
        }
        if (other.HasEqtOrFut) {
          EqtOrFut = other.EqtOrFut;
        }
        if (other.HasFutureFlag) {
          FutureFlag = other.FutureFlag;
        }
        if (other.HasFutureAccountType) {
          FutureAccountType = other.FutureAccountType;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_pBMsgAlgoOrderFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _pBMsgAlgoOrderFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasSymbol = input.ReadString(ref result.symbol_);
              break;
            }
            case 18: {
              result.hasEuityMarket = input.ReadString(ref result.euityMarket_);
              break;
            }
            case 26: {
              result.hasOrderDirection = input.ReadString(ref result.orderDirection_);
              break;
            }
            case 34: {
              result.hasPriceType = input.ReadString(ref result.priceType_);
              break;
            }
            case 40: {
              result.hasSize = input.ReadInt32(ref result.size_);
              break;
            }
            case 48: {
              result.hasEqtOrFut = input.ReadBool(ref result.eqtOrFut_);
              break;
            }
            case 58: {
              result.hasFutureFlag = input.ReadString(ref result.futureFlag_);
              break;
            }
            case 66: {
              result.hasFutureAccountType = input.ReadString(ref result.futureAccountType_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasSymbol {
        get { return result.hasSymbol; }
      }
      public string Symbol {
        get { return result.Symbol; }
        set { SetSymbol(value); }
      }
      public Builder SetSymbol(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSymbol = true;
        result.symbol_ = value;
        return this;
      }
      public Builder ClearSymbol() {
        PrepareBuilder();
        result.hasSymbol = false;
        result.symbol_ = "";
        return this;
      }
      
      public bool HasEuityMarket {
        get { return result.hasEuityMarket; }
      }
      public string EuityMarket {
        get { return result.EuityMarket; }
        set { SetEuityMarket(value); }
      }
      public Builder SetEuityMarket(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasEuityMarket = true;
        result.euityMarket_ = value;
        return this;
      }
      public Builder ClearEuityMarket() {
        PrepareBuilder();
        result.hasEuityMarket = false;
        result.euityMarket_ = "";
        return this;
      }
      
      public bool HasOrderDirection {
        get { return result.hasOrderDirection; }
      }
      public string OrderDirection {
        get { return result.OrderDirection; }
        set { SetOrderDirection(value); }
      }
      public Builder SetOrderDirection(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasOrderDirection = true;
        result.orderDirection_ = value;
        return this;
      }
      public Builder ClearOrderDirection() {
        PrepareBuilder();
        result.hasOrderDirection = false;
        result.orderDirection_ = "";
        return this;
      }
      
      public bool HasPriceType {
        get { return result.hasPriceType; }
      }
      public string PriceType {
        get { return result.PriceType; }
        set { SetPriceType(value); }
      }
      public Builder SetPriceType(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasPriceType = true;
        result.priceType_ = value;
        return this;
      }
      public Builder ClearPriceType() {
        PrepareBuilder();
        result.hasPriceType = false;
        result.priceType_ = "";
        return this;
      }
      
      public bool HasSize {
        get { return result.hasSize; }
      }
      public int Size {
        get { return result.Size; }
        set { SetSize(value); }
      }
      public Builder SetSize(int value) {
        PrepareBuilder();
        result.hasSize = true;
        result.size_ = value;
        return this;
      }
      public Builder ClearSize() {
        PrepareBuilder();
        result.hasSize = false;
        result.size_ = 0;
        return this;
      }
      
      public bool HasEqtOrFut {
        get { return result.hasEqtOrFut; }
      }
      public bool EqtOrFut {
        get { return result.EqtOrFut; }
        set { SetEqtOrFut(value); }
      }
      public Builder SetEqtOrFut(bool value) {
        PrepareBuilder();
        result.hasEqtOrFut = true;
        result.eqtOrFut_ = value;
        return this;
      }
      public Builder ClearEqtOrFut() {
        PrepareBuilder();
        result.hasEqtOrFut = false;
        result.eqtOrFut_ = true;
        return this;
      }
      
      public bool HasFutureFlag {
        get { return result.hasFutureFlag; }
      }
      public string FutureFlag {
        get { return result.FutureFlag; }
        set { SetFutureFlag(value); }
      }
      public Builder SetFutureFlag(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasFutureFlag = true;
        result.futureFlag_ = value;
        return this;
      }
      public Builder ClearFutureFlag() {
        PrepareBuilder();
        result.hasFutureFlag = false;
        result.futureFlag_ = "";
        return this;
      }
      
      public bool HasFutureAccountType {
        get { return result.hasFutureAccountType; }
      }
      public string FutureAccountType {
        get { return result.FutureAccountType; }
        set { SetFutureAccountType(value); }
      }
      public Builder SetFutureAccountType(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasFutureAccountType = true;
        result.futureAccountType_ = value;
        return this;
      }
      public Builder ClearFutureAccountType() {
        PrepareBuilder();
        result.hasFutureAccountType = false;
        result.futureAccountType_ = "";
        return this;
      }
    }
    static PBMsgAlgoOrder() {
      object.ReferenceEquals(global::PBWrapMsgAlgo.Generated.PBMsgAlgo.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class PBMsgAlgoOrderList : pb::GeneratedMessage<PBMsgAlgoOrderList, PBMsgAlgoOrderList.Builder> {
    private PBMsgAlgoOrderList() { }
    private static readonly PBMsgAlgoOrderList defaultInstance = new PBMsgAlgoOrderList().MakeReadOnly();
    private static readonly string[] _pBMsgAlgoOrderListFieldNames = new string[] { "batNewOrderList", "eqtBuyChangePercent", "eqtSellChangePercent", "futBuyChangePoint", "futSellChangePoint", "messageId", "messageService", "messageType", "parentOrderId" };
    private static readonly uint[] _pBMsgAlgoOrderListFieldTags = new uint[] { 42, 49, 57, 64, 72, 8, 18, 24, 34 };
    public static PBMsgAlgoOrderList DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override PBMsgAlgoOrderList DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override PBMsgAlgoOrderList ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::PBWrapMsgAlgo.Generated.PBMsgAlgo.internal__static_PBWrapMsgAlgo_PBMsgAlgoOrderList__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<PBMsgAlgoOrderList, PBMsgAlgoOrderList.Builder> InternalFieldAccessors {
      get { return global::PBWrapMsgAlgo.Generated.PBMsgAlgo.internal__static_PBWrapMsgAlgo_PBMsgAlgoOrderList__FieldAccessorTable; }
    }
    
    public const int MessageIdFieldNumber = 1;
    private bool hasMessageId;
    private int messageId_;
    public bool HasMessageId {
      get { return hasMessageId; }
    }
    public int MessageId {
      get { return messageId_; }
    }
    
    public const int MessageServiceFieldNumber = 2;
    private bool hasMessageService;
    private string messageService_ = "";
    public bool HasMessageService {
      get { return hasMessageService; }
    }
    public string MessageService {
      get { return messageService_; }
    }
    
    public const int MessageTypeFieldNumber = 3;
    private bool hasMessageType;
    private global::PBWrapMsgAlgo.MessageType messageType_ = global::PBWrapMsgAlgo.MessageType.BATCH_NEW_ORDER;
    public bool HasMessageType {
      get { return hasMessageType; }
    }
    public global::PBWrapMsgAlgo.MessageType MessageType {
      get { return messageType_; }
    }
    
    public const int ParentOrderIdFieldNumber = 4;
    private bool hasParentOrderId;
    private string parentOrderId_ = "";
    public bool HasParentOrderId {
      get { return hasParentOrderId; }
    }
    public string ParentOrderId {
      get { return parentOrderId_; }
    }
    
    public const int BatNewOrderListFieldNumber = 5;
    private pbc::PopsicleList<global::PBWrapMsgAlgo.PBMsgAlgoOrder> batNewOrderList_ = new pbc::PopsicleList<global::PBWrapMsgAlgo.PBMsgAlgoOrder>();
    public scg::IList<global::PBWrapMsgAlgo.PBMsgAlgoOrder> BatNewOrderListList {
      get { return batNewOrderList_; }
    }
    public int BatNewOrderListCount {
      get { return batNewOrderList_.Count; }
    }
    public global::PBWrapMsgAlgo.PBMsgAlgoOrder GetBatNewOrderList(int index) {
      return batNewOrderList_[index];
    }
    
    public const int EqtBuyChangePercentFieldNumber = 6;
    private bool hasEqtBuyChangePercent;
    private double eqtBuyChangePercent_;
    public bool HasEqtBuyChangePercent {
      get { return hasEqtBuyChangePercent; }
    }
    public double EqtBuyChangePercent {
      get { return eqtBuyChangePercent_; }
    }
    
    public const int EqtSellChangePercentFieldNumber = 7;
    private bool hasEqtSellChangePercent;
    private double eqtSellChangePercent_;
    public bool HasEqtSellChangePercent {
      get { return hasEqtSellChangePercent; }
    }
    public double EqtSellChangePercent {
      get { return eqtSellChangePercent_; }
    }
    
    public const int FutBuyChangePointFieldNumber = 8;
    private bool hasFutBuyChangePoint;
    private int futBuyChangePoint_;
    public bool HasFutBuyChangePoint {
      get { return hasFutBuyChangePoint; }
    }
    public int FutBuyChangePoint {
      get { return futBuyChangePoint_; }
    }
    
    public const int FutSellChangePointFieldNumber = 9;
    private bool hasFutSellChangePoint;
    private int futSellChangePoint_;
    public bool HasFutSellChangePoint {
      get { return hasFutSellChangePoint; }
    }
    public int FutSellChangePoint {
      get { return futSellChangePoint_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasMessageId) return false;
        if (!hasMessageService) return false;
        if (!hasMessageType) return false;
        if (!hasParentOrderId) return false;
        foreach (global::PBWrapMsgAlgo.PBMsgAlgoOrder element in BatNewOrderListList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _pBMsgAlgoOrderListFieldNames;
      if (hasMessageId) {
        output.WriteInt32(1, field_names[5], MessageId);
      }
      if (hasMessageService) {
        output.WriteString(2, field_names[6], MessageService);
      }
      if (hasMessageType) {
        output.WriteEnum(3, field_names[7], (int) MessageType, MessageType);
      }
      if (hasParentOrderId) {
        output.WriteString(4, field_names[8], ParentOrderId);
      }
      if (batNewOrderList_.Count > 0) {
        output.WriteMessageArray(5, field_names[0], batNewOrderList_);
      }
      if (hasEqtBuyChangePercent) {
        output.WriteDouble(6, field_names[1], EqtBuyChangePercent);
      }
      if (hasEqtSellChangePercent) {
        output.WriteDouble(7, field_names[2], EqtSellChangePercent);
      }
      if (hasFutBuyChangePoint) {
        output.WriteSInt32(8, field_names[3], FutBuyChangePoint);
      }
      if (hasFutSellChangePoint) {
        output.WriteSInt32(9, field_names[4], FutSellChangePoint);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasMessageId) {
          size += pb::CodedOutputStream.ComputeInt32Size(1, MessageId);
        }
        if (hasMessageService) {
          size += pb::CodedOutputStream.ComputeStringSize(2, MessageService);
        }
        if (hasMessageType) {
          size += pb::CodedOutputStream.ComputeEnumSize(3, (int) MessageType);
        }
        if (hasParentOrderId) {
          size += pb::CodedOutputStream.ComputeStringSize(4, ParentOrderId);
        }
        foreach (global::PBWrapMsgAlgo.PBMsgAlgoOrder element in BatNewOrderListList) {
          size += pb::CodedOutputStream.ComputeMessageSize(5, element);
        }
        if (hasEqtBuyChangePercent) {
          size += pb::CodedOutputStream.ComputeDoubleSize(6, EqtBuyChangePercent);
        }
        if (hasEqtSellChangePercent) {
          size += pb::CodedOutputStream.ComputeDoubleSize(7, EqtSellChangePercent);
        }
        if (hasFutBuyChangePoint) {
          size += pb::CodedOutputStream.ComputeSInt32Size(8, FutBuyChangePoint);
        }
        if (hasFutSellChangePoint) {
          size += pb::CodedOutputStream.ComputeSInt32Size(9, FutSellChangePoint);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static PBMsgAlgoOrderList ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static PBMsgAlgoOrderList ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static PBMsgAlgoOrderList ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static PBMsgAlgoOrderList ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static PBMsgAlgoOrderList ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static PBMsgAlgoOrderList ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static PBMsgAlgoOrderList ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static PBMsgAlgoOrderList ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static PBMsgAlgoOrderList ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static PBMsgAlgoOrderList ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private PBMsgAlgoOrderList MakeReadOnly() {
      batNewOrderList_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(PBMsgAlgoOrderList prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<PBMsgAlgoOrderList, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(PBMsgAlgoOrderList cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private PBMsgAlgoOrderList result;
      
      private PBMsgAlgoOrderList PrepareBuilder() {
        if (resultIsReadOnly) {
          PBMsgAlgoOrderList original = result;
          result = new PBMsgAlgoOrderList();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override PBMsgAlgoOrderList MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::PBWrapMsgAlgo.PBMsgAlgoOrderList.Descriptor; }
      }
      
      public override PBMsgAlgoOrderList DefaultInstanceForType {
        get { return global::PBWrapMsgAlgo.PBMsgAlgoOrderList.DefaultInstance; }
      }
      
      public override PBMsgAlgoOrderList BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is PBMsgAlgoOrderList) {
          return MergeFrom((PBMsgAlgoOrderList) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(PBMsgAlgoOrderList other) {
        if (other == global::PBWrapMsgAlgo.PBMsgAlgoOrderList.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasMessageId) {
          MessageId = other.MessageId;
        }
        if (other.HasMessageService) {
          MessageService = other.MessageService;
        }
        if (other.HasMessageType) {
          MessageType = other.MessageType;
        }
        if (other.HasParentOrderId) {
          ParentOrderId = other.ParentOrderId;
        }
        if (other.batNewOrderList_.Count != 0) {
          result.batNewOrderList_.Add(other.batNewOrderList_);
        }
        if (other.HasEqtBuyChangePercent) {
          EqtBuyChangePercent = other.EqtBuyChangePercent;
        }
        if (other.HasEqtSellChangePercent) {
          EqtSellChangePercent = other.EqtSellChangePercent;
        }
        if (other.HasFutBuyChangePoint) {
          FutBuyChangePoint = other.FutBuyChangePoint;
        }
        if (other.HasFutSellChangePoint) {
          FutSellChangePoint = other.FutSellChangePoint;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_pBMsgAlgoOrderListFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _pBMsgAlgoOrderListFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasMessageId = input.ReadInt32(ref result.messageId_);
              break;
            }
            case 18: {
              result.hasMessageService = input.ReadString(ref result.messageService_);
              break;
            }
            case 24: {
              object unknown;
              if(input.ReadEnum(ref result.messageType_, out unknown)) {
                result.hasMessageType = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(3, (ulong)(int)unknown);
              }
              break;
            }
            case 34: {
              result.hasParentOrderId = input.ReadString(ref result.parentOrderId_);
              break;
            }
            case 42: {
              input.ReadMessageArray(tag, field_name, result.batNewOrderList_, global::PBWrapMsgAlgo.PBMsgAlgoOrder.DefaultInstance, extensionRegistry);
              break;
            }
            case 49: {
              result.hasEqtBuyChangePercent = input.ReadDouble(ref result.eqtBuyChangePercent_);
              break;
            }
            case 57: {
              result.hasEqtSellChangePercent = input.ReadDouble(ref result.eqtSellChangePercent_);
              break;
            }
            case 64: {
              result.hasFutBuyChangePoint = input.ReadSInt32(ref result.futBuyChangePoint_);
              break;
            }
            case 72: {
              result.hasFutSellChangePoint = input.ReadSInt32(ref result.futSellChangePoint_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasMessageId {
        get { return result.hasMessageId; }
      }
      public int MessageId {
        get { return result.MessageId; }
        set { SetMessageId(value); }
      }
      public Builder SetMessageId(int value) {
        PrepareBuilder();
        result.hasMessageId = true;
        result.messageId_ = value;
        return this;
      }
      public Builder ClearMessageId() {
        PrepareBuilder();
        result.hasMessageId = false;
        result.messageId_ = 0;
        return this;
      }
      
      public bool HasMessageService {
        get { return result.hasMessageService; }
      }
      public string MessageService {
        get { return result.MessageService; }
        set { SetMessageService(value); }
      }
      public Builder SetMessageService(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasMessageService = true;
        result.messageService_ = value;
        return this;
      }
      public Builder ClearMessageService() {
        PrepareBuilder();
        result.hasMessageService = false;
        result.messageService_ = "";
        return this;
      }
      
      public bool HasMessageType {
       get { return result.hasMessageType; }
      }
      public global::PBWrapMsgAlgo.MessageType MessageType {
        get { return result.MessageType; }
        set { SetMessageType(value); }
      }
      public Builder SetMessageType(global::PBWrapMsgAlgo.MessageType value) {
        PrepareBuilder();
        result.hasMessageType = true;
        result.messageType_ = value;
        return this;
      }
      public Builder ClearMessageType() {
        PrepareBuilder();
        result.hasMessageType = false;
        result.messageType_ = global::PBWrapMsgAlgo.MessageType.BATCH_NEW_ORDER;
        return this;
      }
      
      public bool HasParentOrderId {
        get { return result.hasParentOrderId; }
      }
      public string ParentOrderId {
        get { return result.ParentOrderId; }
        set { SetParentOrderId(value); }
      }
      public Builder SetParentOrderId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasParentOrderId = true;
        result.parentOrderId_ = value;
        return this;
      }
      public Builder ClearParentOrderId() {
        PrepareBuilder();
        result.hasParentOrderId = false;
        result.parentOrderId_ = "";
        return this;
      }
      
      public pbc::IPopsicleList<global::PBWrapMsgAlgo.PBMsgAlgoOrder> BatNewOrderListList {
        get { return PrepareBuilder().batNewOrderList_; }
      }
      public int BatNewOrderListCount {
        get { return result.BatNewOrderListCount; }
      }
      public global::PBWrapMsgAlgo.PBMsgAlgoOrder GetBatNewOrderList(int index) {
        return result.GetBatNewOrderList(index);
      }
      public Builder SetBatNewOrderList(int index, global::PBWrapMsgAlgo.PBMsgAlgoOrder value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.batNewOrderList_[index] = value;
        return this;
      }
      public Builder SetBatNewOrderList(int index, global::PBWrapMsgAlgo.PBMsgAlgoOrder.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.batNewOrderList_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddBatNewOrderList(global::PBWrapMsgAlgo.PBMsgAlgoOrder value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.batNewOrderList_.Add(value);
        return this;
      }
      public Builder AddBatNewOrderList(global::PBWrapMsgAlgo.PBMsgAlgoOrder.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.batNewOrderList_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeBatNewOrderList(scg::IEnumerable<global::PBWrapMsgAlgo.PBMsgAlgoOrder> values) {
        PrepareBuilder();
        result.batNewOrderList_.Add(values);
        return this;
      }
      public Builder ClearBatNewOrderList() {
        PrepareBuilder();
        result.batNewOrderList_.Clear();
        return this;
      }
      
      public bool HasEqtBuyChangePercent {
        get { return result.hasEqtBuyChangePercent; }
      }
      public double EqtBuyChangePercent {
        get { return result.EqtBuyChangePercent; }
        set { SetEqtBuyChangePercent(value); }
      }
      public Builder SetEqtBuyChangePercent(double value) {
        PrepareBuilder();
        result.hasEqtBuyChangePercent = true;
        result.eqtBuyChangePercent_ = value;
        return this;
      }
      public Builder ClearEqtBuyChangePercent() {
        PrepareBuilder();
        result.hasEqtBuyChangePercent = false;
        result.eqtBuyChangePercent_ = 0D;
        return this;
      }
      
      public bool HasEqtSellChangePercent {
        get { return result.hasEqtSellChangePercent; }
      }
      public double EqtSellChangePercent {
        get { return result.EqtSellChangePercent; }
        set { SetEqtSellChangePercent(value); }
      }
      public Builder SetEqtSellChangePercent(double value) {
        PrepareBuilder();
        result.hasEqtSellChangePercent = true;
        result.eqtSellChangePercent_ = value;
        return this;
      }
      public Builder ClearEqtSellChangePercent() {
        PrepareBuilder();
        result.hasEqtSellChangePercent = false;
        result.eqtSellChangePercent_ = 0D;
        return this;
      }
      
      public bool HasFutBuyChangePoint {
        get { return result.hasFutBuyChangePoint; }
      }
      public int FutBuyChangePoint {
        get { return result.FutBuyChangePoint; }
        set { SetFutBuyChangePoint(value); }
      }
      public Builder SetFutBuyChangePoint(int value) {
        PrepareBuilder();
        result.hasFutBuyChangePoint = true;
        result.futBuyChangePoint_ = value;
        return this;
      }
      public Builder ClearFutBuyChangePoint() {
        PrepareBuilder();
        result.hasFutBuyChangePoint = false;
        result.futBuyChangePoint_ = 0;
        return this;
      }
      
      public bool HasFutSellChangePoint {
        get { return result.hasFutSellChangePoint; }
      }
      public int FutSellChangePoint {
        get { return result.FutSellChangePoint; }
        set { SetFutSellChangePoint(value); }
      }
      public Builder SetFutSellChangePoint(int value) {
        PrepareBuilder();
        result.hasFutSellChangePoint = true;
        result.futSellChangePoint_ = value;
        return this;
      }
      public Builder ClearFutSellChangePoint() {
        PrepareBuilder();
        result.hasFutSellChangePoint = false;
        result.futSellChangePoint_ = 0;
        return this;
      }
    }
    static PBMsgAlgoOrderList() {
      object.ReferenceEquals(global::PBWrapMsgAlgo.Generated.PBMsgAlgo.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class PBMsgCandle : pb::GeneratedMessage<PBMsgCandle, PBMsgCandle.Builder> {
    private PBMsgCandle() { }
    private static readonly PBMsgCandle defaultInstance = new PBMsgCandle().MakeReadOnly();
    private static readonly string[] _pBMsgCandleFieldNames = new string[] { "close", "high", "low", "open", "timestamp" };
    private static readonly uint[] _pBMsgCandleFieldTags = new uint[] { 24, 32, 40, 16, 10 };
    public static PBMsgCandle DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override PBMsgCandle DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override PBMsgCandle ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::PBWrapMsgAlgo.Generated.PBMsgAlgo.internal__static_PBWrapMsgAlgo_PBMsgCandle__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<PBMsgCandle, PBMsgCandle.Builder> InternalFieldAccessors {
      get { return global::PBWrapMsgAlgo.Generated.PBMsgAlgo.internal__static_PBWrapMsgAlgo_PBMsgCandle__FieldAccessorTable; }
    }
    
    public const int TimestampFieldNumber = 1;
    private bool hasTimestamp;
    private string timestamp_ = "";
    public bool HasTimestamp {
      get { return hasTimestamp; }
    }
    public string Timestamp {
      get { return timestamp_; }
    }
    
    public const int OpenFieldNumber = 2;
    private bool hasOpen;
    private int open_;
    public bool HasOpen {
      get { return hasOpen; }
    }
    public int Open {
      get { return open_; }
    }
    
    public const int CloseFieldNumber = 3;
    private bool hasClose;
    private int close_;
    public bool HasClose {
      get { return hasClose; }
    }
    public int Close {
      get { return close_; }
    }
    
    public const int HighFieldNumber = 4;
    private bool hasHigh;
    private int high_;
    public bool HasHigh {
      get { return hasHigh; }
    }
    public int High {
      get { return high_; }
    }
    
    public const int LowFieldNumber = 5;
    private bool hasLow;
    private int low_;
    public bool HasLow {
      get { return hasLow; }
    }
    public int Low {
      get { return low_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasTimestamp) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _pBMsgCandleFieldNames;
      if (hasTimestamp) {
        output.WriteString(1, field_names[4], Timestamp);
      }
      if (hasOpen) {
        output.WriteInt32(2, field_names[3], Open);
      }
      if (hasClose) {
        output.WriteInt32(3, field_names[0], Close);
      }
      if (hasHigh) {
        output.WriteInt32(4, field_names[1], High);
      }
      if (hasLow) {
        output.WriteInt32(5, field_names[2], Low);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasTimestamp) {
          size += pb::CodedOutputStream.ComputeStringSize(1, Timestamp);
        }
        if (hasOpen) {
          size += pb::CodedOutputStream.ComputeInt32Size(2, Open);
        }
        if (hasClose) {
          size += pb::CodedOutputStream.ComputeInt32Size(3, Close);
        }
        if (hasHigh) {
          size += pb::CodedOutputStream.ComputeInt32Size(4, High);
        }
        if (hasLow) {
          size += pb::CodedOutputStream.ComputeInt32Size(5, Low);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static PBMsgCandle ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static PBMsgCandle ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static PBMsgCandle ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static PBMsgCandle ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static PBMsgCandle ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static PBMsgCandle ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static PBMsgCandle ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static PBMsgCandle ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static PBMsgCandle ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static PBMsgCandle ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private PBMsgCandle MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(PBMsgCandle prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<PBMsgCandle, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(PBMsgCandle cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private PBMsgCandle result;
      
      private PBMsgCandle PrepareBuilder() {
        if (resultIsReadOnly) {
          PBMsgCandle original = result;
          result = new PBMsgCandle();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override PBMsgCandle MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::PBWrapMsgAlgo.PBMsgCandle.Descriptor; }
      }
      
      public override PBMsgCandle DefaultInstanceForType {
        get { return global::PBWrapMsgAlgo.PBMsgCandle.DefaultInstance; }
      }
      
      public override PBMsgCandle BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is PBMsgCandle) {
          return MergeFrom((PBMsgCandle) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(PBMsgCandle other) {
        if (other == global::PBWrapMsgAlgo.PBMsgCandle.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasTimestamp) {
          Timestamp = other.Timestamp;
        }
        if (other.HasOpen) {
          Open = other.Open;
        }
        if (other.HasClose) {
          Close = other.Close;
        }
        if (other.HasHigh) {
          High = other.High;
        }
        if (other.HasLow) {
          Low = other.Low;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_pBMsgCandleFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _pBMsgCandleFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasTimestamp = input.ReadString(ref result.timestamp_);
              break;
            }
            case 16: {
              result.hasOpen = input.ReadInt32(ref result.open_);
              break;
            }
            case 24: {
              result.hasClose = input.ReadInt32(ref result.close_);
              break;
            }
            case 32: {
              result.hasHigh = input.ReadInt32(ref result.high_);
              break;
            }
            case 40: {
              result.hasLow = input.ReadInt32(ref result.low_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasTimestamp {
        get { return result.hasTimestamp; }
      }
      public string Timestamp {
        get { return result.Timestamp; }
        set { SetTimestamp(value); }
      }
      public Builder SetTimestamp(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTimestamp = true;
        result.timestamp_ = value;
        return this;
      }
      public Builder ClearTimestamp() {
        PrepareBuilder();
        result.hasTimestamp = false;
        result.timestamp_ = "";
        return this;
      }
      
      public bool HasOpen {
        get { return result.hasOpen; }
      }
      public int Open {
        get { return result.Open; }
        set { SetOpen(value); }
      }
      public Builder SetOpen(int value) {
        PrepareBuilder();
        result.hasOpen = true;
        result.open_ = value;
        return this;
      }
      public Builder ClearOpen() {
        PrepareBuilder();
        result.hasOpen = false;
        result.open_ = 0;
        return this;
      }
      
      public bool HasClose {
        get { return result.hasClose; }
      }
      public int Close {
        get { return result.Close; }
        set { SetClose(value); }
      }
      public Builder SetClose(int value) {
        PrepareBuilder();
        result.hasClose = true;
        result.close_ = value;
        return this;
      }
      public Builder ClearClose() {
        PrepareBuilder();
        result.hasClose = false;
        result.close_ = 0;
        return this;
      }
      
      public bool HasHigh {
        get { return result.hasHigh; }
      }
      public int High {
        get { return result.High; }
        set { SetHigh(value); }
      }
      public Builder SetHigh(int value) {
        PrepareBuilder();
        result.hasHigh = true;
        result.high_ = value;
        return this;
      }
      public Builder ClearHigh() {
        PrepareBuilder();
        result.hasHigh = false;
        result.high_ = 0;
        return this;
      }
      
      public bool HasLow {
        get { return result.hasLow; }
      }
      public int Low {
        get { return result.Low; }
        set { SetLow(value); }
      }
      public Builder SetLow(int value) {
        PrepareBuilder();
        result.hasLow = true;
        result.low_ = value;
        return this;
      }
      public Builder ClearLow() {
        PrepareBuilder();
        result.hasLow = false;
        result.low_ = 0;
        return this;
      }
    }
    static PBMsgCandle() {
      object.ReferenceEquals(global::PBWrapMsgAlgo.Generated.PBMsgAlgo.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class PBMsgCandleQueue : pb::GeneratedMessage<PBMsgCandleQueue, PBMsgCandleQueue.Builder> {
    private PBMsgCandleQueue() { }
    private static readonly PBMsgCandleQueue defaultInstance = new PBMsgCandleQueue().MakeReadOnly();
    private static readonly string[] _pBMsgCandleQueueFieldNames = new string[] { "candles", "ric" };
    private static readonly uint[] _pBMsgCandleQueueFieldTags = new uint[] { 18, 10 };
    public static PBMsgCandleQueue DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override PBMsgCandleQueue DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override PBMsgCandleQueue ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::PBWrapMsgAlgo.Generated.PBMsgAlgo.internal__static_PBWrapMsgAlgo_PBMsgCandleQueue__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<PBMsgCandleQueue, PBMsgCandleQueue.Builder> InternalFieldAccessors {
      get { return global::PBWrapMsgAlgo.Generated.PBMsgAlgo.internal__static_PBWrapMsgAlgo_PBMsgCandleQueue__FieldAccessorTable; }
    }
    
    public const int RicFieldNumber = 1;
    private bool hasRic;
    private string ric_ = "";
    public bool HasRic {
      get { return hasRic; }
    }
    public string Ric {
      get { return ric_; }
    }
    
    public const int CandlesFieldNumber = 2;
    private pbc::PopsicleList<global::PBWrapMsgAlgo.PBMsgCandle> candles_ = new pbc::PopsicleList<global::PBWrapMsgAlgo.PBMsgCandle>();
    public scg::IList<global::PBWrapMsgAlgo.PBMsgCandle> CandlesList {
      get { return candles_; }
    }
    public int CandlesCount {
      get { return candles_.Count; }
    }
    public global::PBWrapMsgAlgo.PBMsgCandle GetCandles(int index) {
      return candles_[index];
    }
    
    public override bool IsInitialized {
      get {
        if (!hasRic) return false;
        foreach (global::PBWrapMsgAlgo.PBMsgCandle element in CandlesList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _pBMsgCandleQueueFieldNames;
      if (hasRic) {
        output.WriteString(1, field_names[1], Ric);
      }
      if (candles_.Count > 0) {
        output.WriteMessageArray(2, field_names[0], candles_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasRic) {
          size += pb::CodedOutputStream.ComputeStringSize(1, Ric);
        }
        foreach (global::PBWrapMsgAlgo.PBMsgCandle element in CandlesList) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static PBMsgCandleQueue ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static PBMsgCandleQueue ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static PBMsgCandleQueue ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static PBMsgCandleQueue ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static PBMsgCandleQueue ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static PBMsgCandleQueue ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static PBMsgCandleQueue ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static PBMsgCandleQueue ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static PBMsgCandleQueue ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static PBMsgCandleQueue ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private PBMsgCandleQueue MakeReadOnly() {
      candles_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(PBMsgCandleQueue prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<PBMsgCandleQueue, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(PBMsgCandleQueue cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private PBMsgCandleQueue result;
      
      private PBMsgCandleQueue PrepareBuilder() {
        if (resultIsReadOnly) {
          PBMsgCandleQueue original = result;
          result = new PBMsgCandleQueue();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override PBMsgCandleQueue MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::PBWrapMsgAlgo.PBMsgCandleQueue.Descriptor; }
      }
      
      public override PBMsgCandleQueue DefaultInstanceForType {
        get { return global::PBWrapMsgAlgo.PBMsgCandleQueue.DefaultInstance; }
      }
      
      public override PBMsgCandleQueue BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is PBMsgCandleQueue) {
          return MergeFrom((PBMsgCandleQueue) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(PBMsgCandleQueue other) {
        if (other == global::PBWrapMsgAlgo.PBMsgCandleQueue.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasRic) {
          Ric = other.Ric;
        }
        if (other.candles_.Count != 0) {
          result.candles_.Add(other.candles_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_pBMsgCandleQueueFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _pBMsgCandleQueueFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasRic = input.ReadString(ref result.ric_);
              break;
            }
            case 18: {
              input.ReadMessageArray(tag, field_name, result.candles_, global::PBWrapMsgAlgo.PBMsgCandle.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasRic {
        get { return result.hasRic; }
      }
      public string Ric {
        get { return result.Ric; }
        set { SetRic(value); }
      }
      public Builder SetRic(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasRic = true;
        result.ric_ = value;
        return this;
      }
      public Builder ClearRic() {
        PrepareBuilder();
        result.hasRic = false;
        result.ric_ = "";
        return this;
      }
      
      public pbc::IPopsicleList<global::PBWrapMsgAlgo.PBMsgCandle> CandlesList {
        get { return PrepareBuilder().candles_; }
      }
      public int CandlesCount {
        get { return result.CandlesCount; }
      }
      public global::PBWrapMsgAlgo.PBMsgCandle GetCandles(int index) {
        return result.GetCandles(index);
      }
      public Builder SetCandles(int index, global::PBWrapMsgAlgo.PBMsgCandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.candles_[index] = value;
        return this;
      }
      public Builder SetCandles(int index, global::PBWrapMsgAlgo.PBMsgCandle.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.candles_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddCandles(global::PBWrapMsgAlgo.PBMsgCandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.candles_.Add(value);
        return this;
      }
      public Builder AddCandles(global::PBWrapMsgAlgo.PBMsgCandle.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.candles_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeCandles(scg::IEnumerable<global::PBWrapMsgAlgo.PBMsgCandle> values) {
        PrepareBuilder();
        result.candles_.Add(values);
        return this;
      }
      public Builder ClearCandles() {
        PrepareBuilder();
        result.candles_.Clear();
        return this;
      }
    }
    static PBMsgCandleQueue() {
      object.ReferenceEquals(global::PBWrapMsgAlgo.Generated.PBMsgAlgo.Descriptor, null);
    }
  }
  
  #endregion
  
}

#endregion Designer generated code
