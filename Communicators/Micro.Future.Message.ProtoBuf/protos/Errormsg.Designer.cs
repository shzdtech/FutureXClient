// Generated by ProtoGen, Version=2.4.1.521, Culture=neutral, PublicKeyToken=55f7125234beb589.  DO NOT EDIT!
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace Micro.Future.Message.Business {
  
  namespace Generated {
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class Errormsg {
    
      #region Extension registration
      public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
      }
      #endregion
      #region Static variables
      internal static pbd::MessageDescriptor internal__static_Micro_Future_Message_Business_BizErrorMsg__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::Micro.Future.Message.Business.BizErrorMsg, global::Micro.Future.Message.Business.BizErrorMsg.Builder> internal__static_Micro_Future_Message_Business_BizErrorMsg__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_Micro_Future_Message_Business_Result__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::Micro.Future.Message.Business.Result, global::Micro.Future.Message.Business.Result.Builder> internal__static_Micro_Future_Message_Business_Result__FieldAccessorTable;
      #endregion
      #region Descriptor
      public static pbd::FileDescriptor Descriptor {
        get { return descriptor; }
      }
      private static pbd::FileDescriptor descriptor;
      
      static Errormsg() {
        byte[] descriptorData = global::System.Convert.FromBase64String(
            "Cg5lcnJvcm1zZy5wcm90bxIdTWljcm8uRnV0dXJlLk1lc3NhZ2UuQnVzaW5l" + 
            "c3MiXAoLQml6RXJyb3JNc2cSEQoJbWVzc2FnZUlkGAEgAigNEhEKCWVycm9y" + 
            "Y29kZRgCIAIoBRITCgtkZXNjcmlwdGlvbhgDIAIoDBISCgpzeXNlcnJjb2Rl" + 
            "GAQgAigFIhYKBlJlc3VsdBIMCgRjb2RlGAEgAigF");
        pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
          descriptor = root;
          internal__static_Micro_Future_Message_Business_BizErrorMsg__Descriptor = Descriptor.MessageTypes[0];
          internal__static_Micro_Future_Message_Business_BizErrorMsg__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::Micro.Future.Message.Business.BizErrorMsg, global::Micro.Future.Message.Business.BizErrorMsg.Builder>(internal__static_Micro_Future_Message_Business_BizErrorMsg__Descriptor,
                  new string[] { "MessageId", "Errorcode", "Description", "Syserrcode", });
          internal__static_Micro_Future_Message_Business_Result__Descriptor = Descriptor.MessageTypes[1];
          internal__static_Micro_Future_Message_Business_Result__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::Micro.Future.Message.Business.Result, global::Micro.Future.Message.Business.Result.Builder>(internal__static_Micro_Future_Message_Business_Result__Descriptor,
                  new string[] { "Code", });
          return null;
        };
        pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
            new pbd::FileDescriptor[] {
            }, assigner);
      }
      #endregion
      
    }
  }
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class BizErrorMsg : pb::GeneratedMessage<BizErrorMsg, BizErrorMsg.Builder> {
    private BizErrorMsg() { }
    private static readonly BizErrorMsg defaultInstance = new BizErrorMsg().MakeReadOnly();
    private static readonly string[] _bizErrorMsgFieldNames = new string[] { "description", "errorcode", "messageId", "syserrcode" };
    private static readonly uint[] _bizErrorMsgFieldTags = new uint[] { 26, 16, 8, 32 };
    public static BizErrorMsg DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override BizErrorMsg DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override BizErrorMsg ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Micro.Future.Message.Business.Generated.Errormsg.internal__static_Micro_Future_Message_Business_BizErrorMsg__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<BizErrorMsg, BizErrorMsg.Builder> InternalFieldAccessors {
      get { return global::Micro.Future.Message.Business.Generated.Errormsg.internal__static_Micro_Future_Message_Business_BizErrorMsg__FieldAccessorTable; }
    }
    
    public const int MessageIdFieldNumber = 1;
    private bool hasMessageId;
    private uint messageId_;
    public bool HasMessageId {
      get { return hasMessageId; }
    }
    public uint MessageId {
      get { return messageId_; }
    }
    
    public const int ErrorcodeFieldNumber = 2;
    private bool hasErrorcode;
    private int errorcode_;
    public bool HasErrorcode {
      get { return hasErrorcode; }
    }
    public int Errorcode {
      get { return errorcode_; }
    }
    
    public const int DescriptionFieldNumber = 3;
    private bool hasDescription;
    private pb::ByteString description_ = pb::ByteString.Empty;
    public bool HasDescription {
      get { return hasDescription; }
    }
    public pb::ByteString Description {
      get { return description_; }
    }
    
    public const int SyserrcodeFieldNumber = 4;
    private bool hasSyserrcode;
    private int syserrcode_;
    public bool HasSyserrcode {
      get { return hasSyserrcode; }
    }
    public int Syserrcode {
      get { return syserrcode_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasMessageId) return false;
        if (!hasErrorcode) return false;
        if (!hasDescription) return false;
        if (!hasSyserrcode) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _bizErrorMsgFieldNames;
      if (hasMessageId) {
        output.WriteUInt32(1, field_names[2], MessageId);
      }
      if (hasErrorcode) {
        output.WriteInt32(2, field_names[1], Errorcode);
      }
      if (hasDescription) {
        output.WriteBytes(3, field_names[0], Description);
      }
      if (hasSyserrcode) {
        output.WriteInt32(4, field_names[3], Syserrcode);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasMessageId) {
          size += pb::CodedOutputStream.ComputeUInt32Size(1, MessageId);
        }
        if (hasErrorcode) {
          size += pb::CodedOutputStream.ComputeInt32Size(2, Errorcode);
        }
        if (hasDescription) {
          size += pb::CodedOutputStream.ComputeBytesSize(3, Description);
        }
        if (hasSyserrcode) {
          size += pb::CodedOutputStream.ComputeInt32Size(4, Syserrcode);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static BizErrorMsg ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static BizErrorMsg ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static BizErrorMsg ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static BizErrorMsg ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static BizErrorMsg ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static BizErrorMsg ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static BizErrorMsg ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static BizErrorMsg ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static BizErrorMsg ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static BizErrorMsg ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private BizErrorMsg MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(BizErrorMsg prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<BizErrorMsg, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(BizErrorMsg cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private BizErrorMsg result;
      
      private BizErrorMsg PrepareBuilder() {
        if (resultIsReadOnly) {
          BizErrorMsg original = result;
          result = new BizErrorMsg();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override BizErrorMsg MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Micro.Future.Message.Business.BizErrorMsg.Descriptor; }
      }
      
      public override BizErrorMsg DefaultInstanceForType {
        get { return global::Micro.Future.Message.Business.BizErrorMsg.DefaultInstance; }
      }
      
      public override BizErrorMsg BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is BizErrorMsg) {
          return MergeFrom((BizErrorMsg) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(BizErrorMsg other) {
        if (other == global::Micro.Future.Message.Business.BizErrorMsg.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasMessageId) {
          MessageId = other.MessageId;
        }
        if (other.HasErrorcode) {
          Errorcode = other.Errorcode;
        }
        if (other.HasDescription) {
          Description = other.Description;
        }
        if (other.HasSyserrcode) {
          Syserrcode = other.Syserrcode;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_bizErrorMsgFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _bizErrorMsgFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasMessageId = input.ReadUInt32(ref result.messageId_);
              break;
            }
            case 16: {
              result.hasErrorcode = input.ReadInt32(ref result.errorcode_);
              break;
            }
            case 26: {
              result.hasDescription = input.ReadBytes(ref result.description_);
              break;
            }
            case 32: {
              result.hasSyserrcode = input.ReadInt32(ref result.syserrcode_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasMessageId {
        get { return result.hasMessageId; }
      }
      public uint MessageId {
        get { return result.MessageId; }
        set { SetMessageId(value); }
      }
      public Builder SetMessageId(uint value) {
        PrepareBuilder();
        result.hasMessageId = true;
        result.messageId_ = value;
        return this;
      }
      public Builder ClearMessageId() {
        PrepareBuilder();
        result.hasMessageId = false;
        result.messageId_ = 0;
        return this;
      }
      
      public bool HasErrorcode {
        get { return result.hasErrorcode; }
      }
      public int Errorcode {
        get { return result.Errorcode; }
        set { SetErrorcode(value); }
      }
      public Builder SetErrorcode(int value) {
        PrepareBuilder();
        result.hasErrorcode = true;
        result.errorcode_ = value;
        return this;
      }
      public Builder ClearErrorcode() {
        PrepareBuilder();
        result.hasErrorcode = false;
        result.errorcode_ = 0;
        return this;
      }
      
      public bool HasDescription {
        get { return result.hasDescription; }
      }
      public pb::ByteString Description {
        get { return result.Description; }
        set { SetDescription(value); }
      }
      public Builder SetDescription(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasDescription = true;
        result.description_ = value;
        return this;
      }
      public Builder ClearDescription() {
        PrepareBuilder();
        result.hasDescription = false;
        result.description_ = pb::ByteString.Empty;
        return this;
      }
      
      public bool HasSyserrcode {
        get { return result.hasSyserrcode; }
      }
      public int Syserrcode {
        get { return result.Syserrcode; }
        set { SetSyserrcode(value); }
      }
      public Builder SetSyserrcode(int value) {
        PrepareBuilder();
        result.hasSyserrcode = true;
        result.syserrcode_ = value;
        return this;
      }
      public Builder ClearSyserrcode() {
        PrepareBuilder();
        result.hasSyserrcode = false;
        result.syserrcode_ = 0;
        return this;
      }
    }
    static BizErrorMsg() {
      object.ReferenceEquals(global::Micro.Future.Message.Business.Generated.Errormsg.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Result : pb::GeneratedMessage<Result, Result.Builder> {
    private Result() { }
    private static readonly Result defaultInstance = new Result().MakeReadOnly();
    private static readonly string[] _resultFieldNames = new string[] { "code" };
    private static readonly uint[] _resultFieldTags = new uint[] { 8 };
    public static Result DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Result DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Result ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Micro.Future.Message.Business.Generated.Errormsg.internal__static_Micro_Future_Message_Business_Result__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Result, Result.Builder> InternalFieldAccessors {
      get { return global::Micro.Future.Message.Business.Generated.Errormsg.internal__static_Micro_Future_Message_Business_Result__FieldAccessorTable; }
    }
    
    public const int CodeFieldNumber = 1;
    private bool hasCode;
    private int code_;
    public bool HasCode {
      get { return hasCode; }
    }
    public int Code {
      get { return code_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasCode) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _resultFieldNames;
      if (hasCode) {
        output.WriteInt32(1, field_names[0], Code);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasCode) {
          size += pb::CodedOutputStream.ComputeInt32Size(1, Code);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Result ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Result ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Result ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Result ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Result ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Result ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Result ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Result ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Result ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Result ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Result MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Result prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Result, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Result cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Result result;
      
      private Result PrepareBuilder() {
        if (resultIsReadOnly) {
          Result original = result;
          result = new Result();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Result MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Micro.Future.Message.Business.Result.Descriptor; }
      }
      
      public override Result DefaultInstanceForType {
        get { return global::Micro.Future.Message.Business.Result.DefaultInstance; }
      }
      
      public override Result BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Result) {
          return MergeFrom((Result) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Result other) {
        if (other == global::Micro.Future.Message.Business.Result.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasCode) {
          Code = other.Code;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_resultFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _resultFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasCode = input.ReadInt32(ref result.code_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasCode {
        get { return result.hasCode; }
      }
      public int Code {
        get { return result.Code; }
        set { SetCode(value); }
      }
      public Builder SetCode(int value) {
        PrepareBuilder();
        result.hasCode = true;
        result.code_ = value;
        return this;
      }
      public Builder ClearCode() {
        PrepareBuilder();
        result.hasCode = false;
        result.code_ = 0;
        return this;
      }
    }
    static Result() {
      object.ReferenceEquals(global::Micro.Future.Message.Business.Generated.Errormsg.Descriptor, null);
    }
  }
  
  #endregion
  
}

#endregion Designer generated code
